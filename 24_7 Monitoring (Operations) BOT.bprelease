<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>24*7 Monitoring (Operations) BOT</bpr:name>
    <bpr:release-notes>This is the Protocol verison for an Monitoring agent BOT, Which can monitor and take neccessary action on mails 24/7.

This is sole work by VIJAYAN R </bpr:release-notes>
    <bpr:created>2018-12-20 16:12:38Z</bpr:created>
    <bpr:package-id>-1</bpr:package-id>
    <bpr:package-name>&lt;Adhoc Package&gt;</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="10">
        <process id="f52fdaf6-fb12-4520-a622-c18439d27c73" name="Ansible-Linux" xmlns="http://www.blueprism.co.uk/product/process"><process name="Ansible-Linux" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true"><view><camerax>0</camerax><cameray>134</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="09323fa3-0f20-43c0-b3ec-5d7e662bbfd8" type="Normal" published="False"><name>Launch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fdd17313-c2dd-4747-a6b7-e21ea43dcf20" type="Normal" published="False"><name>Command Execution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8bfe0962-267c-439e-8cd6-67631e7e0f5b" type="Normal" published="False"><name>Docker Command Execution </name><view><camerax>0</camerax><cameray>-11</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c01e2af7-edf9-4113-97b1-6d427421ec8b" type="Normal" published="False"><name>Docker result email</name><view><camerax>0</camerax><cameray>116</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="63fcd935-0aab-4cf2-bf42-c699029ea6c9" type="Normal" published="False"><name>Ansible result email </name><view><camerax>8</camerax><cameray>48</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="9bb69c05-efa4-451d-bd08-4a2342c9f29c" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="What action?" narrative="Type either Docker or Ansible?" stage="What action?" /></inputs><onsuccess>7342143a-67a9-4cd3-835a-3363877eeb00</onsuccess></stage><stage stageid="815282b2-5244-4462-859b-8fb0b0efcee0" name="End" type="End"><narrative></narrative><displayx>135</displayx><displayy>345</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="cacae755-2a74-4af5-8a4d-38fb0d802b30" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3af7b39f-3018-43e9-b1a5-d51316c93ebd" name="Launch" type="SubSheetInfo"><subsheetid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3c727026-021c-41b2-b706-443e2bb8fc5d" name="Start" type="Start"><subsheetid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>13a7e418-8e5b-4bdc-9341-3b85c1a16c2b</onsuccess></stage><stage stageid="aef7ef97-b4ef-452f-a76f-c9367603d134" name="End" type="End"><subsheetid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="13a7e418-8e5b-4bdc-9341-3b85c1a16c2b" name="Launch Ansible connection" type="Action"><subsheetid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible Server IP" expr="[Server IP]" /></inputs><onsuccess>aef7ef97-b4ef-452f-a76f-c9367603d134</onsuccess><resource object="Putty" action="Launch" /></stage><stage stageid="62431262-5543-4f11-88fc-dc5eab1d6374" name="Server IP" type="Data"><subsheetid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</subsheetid><narrative></narrative><displayx>195</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">root@18.221.26.98 </initialvalue><private /><alwaysinit /></stage><stage stageid="e41445d8-f1e8-4e26-b0fc-aeff6f1e0e25" name="Command Execution" type="SubSheetInfo"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3c08b681-2a37-49b4-8982-c7a43149b38d" name="Start" type="Start"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f0985fb2-156c-4a38-972d-3e7527f4270a</onsuccess></stage><stage stageid="dc5c909b-4170-43c3-9540-9245047dffb2" name="End" type="End"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f0985fb2-156c-4a38-972d-3e7527f4270a" name="Ansible Automation Execution" type="Action"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible cammand" expr="[Ansible cammand]" /><input type="password" name="Password for Ansible" expr="[Password]" /><input type="text" name="Ansible Directory" expr="[Ansible Directory]" /></inputs><onsuccess>dc5c909b-4170-43c3-9540-9245047dffb2</onsuccess><resource object="Putty" action="Executing Ansible cammands" /></stage><stage stageid="ee4b7d13-2d4d-4d5d-acd1-2ab3c87c4984" name="Password" type="Data"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc>49,20,7,67,26,91,6,1</initialvalueenc><private /><alwaysinit /></stage><stage stageid="77a1ddcd-0cc1-4eb9-89d6-0b22fab6fa3a" name="Ansible cammand" type="Data"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>120</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">ansible-playbook dailycheck.yml</initialvalue><private /><alwaysinit /></stage><stage stageid="7342143a-67a9-4cd3-835a-3363877eeb00" name="Launch" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>09143136-e9aa-4c2a-9261-06fab567c503</onsuccess><processid>09323fa3-0f20-43c0-b3ec-5d7e662bbfd8</processid></stage><stage stageid="47e48894-dd61-44f9-8592-b407db4a95a7" name="Command Execution" type="SubSheet"><narrative></narrative><displayx>180</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0a610e4c-53d9-42b5-baf0-f4c2f13eb25c</onsuccess><processid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</processid></stage><stage stageid="c4f93cf9-b468-49f0-a7cd-227cd05a2b6b" name="Ansible Directory" type="Data"><subsheetid>fdd17313-c2dd-4747-a6b7-e21ea43dcf20</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">cd /etc/ansible</initialvalue><private /><alwaysinit /></stage><stage stageid="216f10f8-a0f8-4dd8-815a-b645b1675f3c" name="Command Execution" type="SubSheetInfo"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="4a20fb71-0eac-4a90-9efe-d53fc72370c3" name="Start" type="Start"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>454cae6b-ee6f-401a-90ed-4d314f7e1419</onsuccess></stage><stage stageid="57d295f0-7880-4f57-aa9b-47ff0cd61776" name="End" type="End"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="454cae6b-ee6f-401a-90ed-4d314f7e1419" name="Docker Execution" type="Action"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible cammand" expr="[Docker cammand]" /><input type="password" name="Password for Ansible" expr="[Password]" /><input type="text" name="Ansible Directory" expr="[Ansible Directory]" /></inputs><onsuccess>57d295f0-7880-4f57-aa9b-47ff0cd61776</onsuccess><resource object="Putty" action="Executing Ansible cammands" /></stage><stage stageid="a9f5f265-e8c5-400e-97e7-6deb4dff0f7a" name="Password" type="Data"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc>49,20,7,67,26,91,6,1</initialvalueenc><private /><alwaysinit /></stage><stage stageid="2a043c93-2316-41d6-955a-3f2f41f7765c" name="Docker cammand" type="Data"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>120</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">docker start vijayanweb2</initialvalue><private /><alwaysinit /></stage><stage stageid="8aa6b293-ec9a-4c21-a14e-86ca578b7bca" name="Ansible Directory" type="Data"><subsheetid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</subsheetid><narrative></narrative><displayx>135</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">cd /etc/ansible</initialvalue><private /><alwaysinit /></stage><stage stageid="2e2b0403-73e7-4626-a057-c9163e18f563" name="Docker result email" type="SubSheetInfo"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2220c97f-642e-4cb1-9f30-72b70b0eba15" name="Start" type="Start"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ef51fc78-8b6e-4568-85eb-49b1963280f0</onsuccess></stage><stage stageid="33af9a34-77c4-48f8-a3c2-1d586a716cdf" name="End" type="End"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="e6f23412-6600-4aed-951d-98502b1becd9" name="Is it worked?" type="Decision"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Docker Result]=&quot;It works!&quot;" /><ontrue>f713a28b-2916-42e7-8285-830980c67723</ontrue><onfalse>cbe5fad6-285b-4626-82c6-8e317cbb6605</onfalse></stage><stage stageid="ed3d2b83-9af7-4463-9581-7085ecb2eda9" name="Send Failed Email " type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>195</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." expr="&quot;vijayanrece@gmail.com&quot;" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="&quot;vijayan_ramasamy@trimble.com&quot;" /><input type="text" name="Subject" narrative="The subject of the email." expr="&quot;Task Failed&quot;" /><input type="text" name="Body" narrative="The body of the email." expr="&quot;Hey, I am Castiel, I dont know how it happened, but Vijayan is there to look at it.&quot;" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="&quot;true&quot;" /></inputs><onsuccess>d766e18d-5bc6-4dfa-b6d7-5753cf3b6783</onsuccess><resource object="Email - POP3/SMTP" action="Send Message" /></stage><stage stageid="74105439-1f3b-49f9-9a9c-5c628a1ee3d8" name="Send Success Email " type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." expr="&quot;vijayanrece@gmail.com&quot;" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="&quot;vijayanrece@gmail.com&quot;" /><input type="text" name="Subject" narrative="The subject of the email." expr="&quot;Task Coompleted&quot;" /><input type="text" name="Body" narrative="The body of the email." expr="&quot;Hey, I am Castiel, '-----CHEERS-----' Your Task Completed Successfuly&quot;" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="&quot;true&quot;" /></inputs><onsuccess>a4d5f73d-a585-4915-b0db-39278ffe8d02</onsuccess><resource object="Email - POP3/SMTP" action="Send Message" /></stage><stage stageid="a4d5f73d-a585-4915-b0db-39278ffe8d02" name="Anchor1" type="Anchor"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cd24cb50-c0ec-4bf1-8e57-fc98f8bec4e4</onsuccess></stage><stage stageid="9264a9bb-5487-4996-915a-0de003f4db53" name="Anchor2" type="Anchor"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a4d5f73d-a585-4915-b0db-39278ffe8d02</onsuccess></stage><stage stageid="f713a28b-2916-42e7-8285-830980c67723" name="Mail Config" type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" expr="[Mail username]" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" expr="[Mail Password]" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="995" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="587" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="&quot;true&quot;" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="&quot;true&quot;" /></inputs><onsuccess>74105439-1f3b-49f9-9a9c-5c628a1ee3d8</onsuccess><resource object="Email - POP3/SMTP" action="Configure" /></stage><stage stageid="826d1b5a-4ca3-43f9-890f-17a5a3f64d78" name="Mail Config" type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><loginhibit /><narrative></narrative><displayx>195</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" expr="[Mail username]" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" expr="[Mail Password]" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="995" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="587" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="&quot;true&quot;" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="&quot;true&quot;" /></inputs><onsuccess>ed3d2b83-9af7-4463-9581-7085ecb2eda9</onsuccess><resource object="Email - POP3/SMTP" action="Configure" /></stage><stage stageid="ef51fc78-8b6e-4568-85eb-49b1963280f0" name="Result page" type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Docker Result URL" expr="[Docker Result URL]" /><input type="password" name="mail password" expr="[Mail Password]" /></inputs><outputs><output type="text" name="Result" stage="Docker Result" /></outputs><onsuccess>e6f23412-6600-4aed-951d-98502b1becd9</onsuccess><resource object="Browser checks" action="Result for Docker" /></stage><stage stageid="93df11f2-4982-432e-a60a-78c9cac2eb8d" name="Docker Result" type="Data"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>330</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4e484096-9058-4033-a93e-28d191f15b22" name="Mail Password" type="Data"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>300</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="b1056198-1b84-4558-8f09-dd014221e289" name="Docker Result URL" type="Data"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>315</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">http://18.221.26.98:81/</initialvalue><private /><alwaysinit /></stage><stage stageid="27e4815c-fe21-463f-b963-893e7f6c6b13" name="Docker result email" type="SubSheetInfo"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="8a01283f-c656-427e-a2d2-1f69427d4923" name="Start" type="Start"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6069599d-a25d-45ba-9701-56a5450e3840</onsuccess></stage><stage stageid="54616bfd-45da-453f-baa0-36a3a8886262" name="End" type="End"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="e8d1da83-dd1e-4322-b655-ec9a3e484ae8" name="Is it worked?" type="Decision"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Result]=&quot;HTTP 404&quot;" /><ontrue>bf167d37-d0f7-48f3-a6cd-95c2ba021197</ontrue><onfalse>a21cb25a-c880-4769-934d-0fdcd0403aad</onfalse></stage><stage stageid="c5b29123-bb54-4387-8813-49b66a3f6603" name="Send Failed Email " type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." expr="&quot;vijayanrece@gmail.com&quot;" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="&quot;vijayan_ramasamy@trimble.com&quot;" /><input type="text" name="Subject" narrative="The subject of the email." expr="&quot;Task Failed&quot;" /><input type="text" name="Body" narrative="The body of the email." expr="&quot;Hey, I am Castiel, I dont know how it happened, but Vijayan is there to look at it.&quot;" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="&quot;true&quot;" /></inputs><onsuccess>e9e4ac9a-1125-4042-87dd-7f4e2b50e49e</onsuccess><resource object="Email - POP3/SMTP" action="Send Message" /></stage><stage stageid="3348a0fa-b4a0-4f36-b2b2-ea4152e263a4" name="Send Success Email " type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>195</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." expr="&quot;vijayanrece@gmail.com&quot;" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="&quot;vijayan_ramasamy@trimble.com&quot;" /><input type="text" name="Subject" narrative="The subject of the email." expr="&quot;Task Coompleted&quot;" /><input type="text" name="Body" narrative="The body of the email." expr="&quot;Hey, I am Castiel, '-----CHEERS-----' Your Task Completed Successfuly&quot;" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="&quot;true&quot;" /></inputs><onsuccess>ce5558aa-5710-40b1-a885-3fc81f97603d</onsuccess><resource object="Email - POP3/SMTP" action="Send Message" /></stage><stage stageid="e9e4ac9a-1125-4042-87dd-7f4e2b50e49e" name="Anchor1" type="Anchor"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7260966a-301e-4e40-aa3c-afd2732ebeb1</onsuccess></stage><stage stageid="e8725ed1-1ef4-4a9d-bcd1-532517d30e44" name="Anchor2" type="Anchor"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>180</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e9e4ac9a-1125-4042-87dd-7f4e2b50e49e</onsuccess></stage><stage stageid="bf167d37-d0f7-48f3-a6cd-95c2ba021197" name="Mail Config" type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" expr="[Mail username]" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" expr="[Mail Password]" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="995" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="587" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="&quot;true&quot;" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="&quot;true&quot;" /></inputs><onsuccess>c5b29123-bb54-4387-8813-49b66a3f6603</onsuccess><resource object="Email - POP3/SMTP" action="Configure" /></stage><stage stageid="034ab401-f0e5-4f47-866e-de26f3d12456" name="Mail Config" type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><loginhibit /><narrative></narrative><displayx>195</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" expr="[Mail username]" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" expr="[Mail Password]" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="995" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="587" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="&quot;true&quot;" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="&quot;true&quot;" /></inputs><onsuccess>3348a0fa-b4a0-4f36-b2b2-ea4152e263a4</onsuccess><resource object="Email - POP3/SMTP" action="Configure" /></stage><stage stageid="6069599d-a25d-45ba-9701-56a5450e3840" name="Result page" type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="password" name="mail password" expr="[Mail Password]" /><input type="text" name="Ansible Result URL" expr="[Ansible Result URL]" /></inputs><outputs><output type="text" name="Result" stage="Result" /></outputs><onsuccess>e8d1da83-dd1e-4322-b655-ec9a3e484ae8</onsuccess><resource object="Browser checks" action="Result for Ansible" /></stage><stage stageid="db1db9ce-052c-4e07-8d17-f7b67979934e" name="Result" type="Data"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>405</displayx><displayy>-75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c700b967-80d0-429e-b0f0-c3488be1447e" name="Mail Password" type="Data"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>375</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="638a86ee-747f-454b-8121-e5fc06e436b2" name="Ansible Result URL" type="Data"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>390</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">http://3.16.183.154/dailycheck.html</initialvalue><private /><alwaysinit /></stage><stage stageid="d36bff57-ce47-42e7-9909-5d5a6ce478b0" name="Recover1" type="Recover"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>195</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>034ab401-f0e5-4f47-866e-de26f3d12456</onsuccess></stage><stage stageid="a21cb25a-c880-4769-934d-0fdcd0403aad" name="Exception1" type="Exception"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>120</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="" detail="" /></stage><stage stageid="ce5558aa-5710-40b1-a885-3fc81f97603d" name="Resume1" type="Resume"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>195</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e8725ed1-1ef4-4a9d-bcd1-532517d30e44</onsuccess></stage><stage stageid="d4911c5c-1d32-4577-be09-40ce8298088e" name="Block1" type="Block"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>-45</displayx><displayy>-75</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cbe5fad6-285b-4626-82c6-8e317cbb6605" name="Exception2" type="Exception"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>105</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="" detail="" /></stage><stage stageid="9d814ea9-f721-471a-997e-3686c4f949da" name="Recover2" type="Recover"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>195</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>826d1b5a-4ca3-43f9-890f-17a5a3f64d78</onsuccess></stage><stage stageid="d766e18d-5bc6-4dfa-b6d7-5753cf3b6783" name="Resume2" type="Resume"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>195</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>9264a9bb-5487-4996-915a-0de003f4db53</onsuccess></stage><stage stageid="b93343e1-465b-48c8-a1a3-d2688f99cbcc" name="Block3" type="Block"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>-45</displayx><displayy>-75</displayy><displaywidth>300</displaywidth><displayheight>120</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="05f1e14e-c1a1-4a55-80a5-6a961af8ea9e" name="Block4" type="Block"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>-120</displayx><displayy>0</displayy><displaywidth>0</displaywidth><displayheight>0</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8cb2de0f-109b-43de-b165-ab5986c30de5" name="Block5" type="Block"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>0</displayy><displaywidth>0</displaywidth><displayheight>0</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="09143136-e9aa-4c2a-9261-06fab567c503" name="What i want to do?" type="ChoiceStart"><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>e3ce6152-a50d-4702-85c3-bf1459628f97</groupid><choices><choice expression="[What action?]=&quot;Docker&quot;"><name>is that Docker?</name><distance>60</distance><ontrue>a2601d2a-bc56-45e8-8af5-700d5b37c8c6</ontrue></choice></choices></stage><stage stageid="6c35f5b3-b74a-4227-8a84-20264f4a3d9a" name="Otherwise1" type="ChoiceEnd"><narrative></narrative><displayx>180</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>47e48894-dd61-44f9-8592-b407db4a95a7</onsuccess><groupid>e3ce6152-a50d-4702-85c3-bf1459628f97</groupid></stage><stage stageid="0df46375-04d8-4efa-b48f-326c76582fac" name="What action?" type="Data"><narrative></narrative><displayx>315</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Docker</initialvalue><exposure>Session</exposure><alwaysinit /></stage><stage stageid="a2601d2a-bc56-45e8-8af5-700d5b37c8c6" name="Docker Command Execution " type="SubSheet"><narrative></narrative><displayx>75</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>21ae9e8b-9a54-4b60-a620-55eb81b9fbb2</onsuccess><processid>8bfe0962-267c-439e-8cd6-67631e7e0f5b</processid></stage><stage stageid="0a610e4c-53d9-42b5-baf0-f4c2f13eb25c" name="Ansible result email " type="SubSheet"><narrative></narrative><displayx>180</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>deeed6bc-4f54-4b80-9fa0-aaf4706204f9</onsuccess><processid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</processid></stage><stage stageid="21ae9e8b-9a54-4b60-a620-55eb81b9fbb2" name="Docker result email" type="SubSheet"><narrative></narrative><displayx>75</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>deeed6bc-4f54-4b80-9fa0-aaf4706204f9</onsuccess><processid>c01e2af7-edf9-4113-97b1-6d427421ec8b</processid></stage><stage stageid="deeed6bc-4f54-4b80-9fa0-aaf4706204f9" name="Anchor3" type="Anchor"><narrative></narrative><displayx>135</displayx><displayy>240</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>781b9059-fe05-4c01-8b0b-1fb44c122e80</onsuccess></stage><stage stageid="cd24cb50-c0ec-4bf1-8e57-fc98f8bec4e4" name="Terminate page" type="Action"><subsheetid>c01e2af7-edf9-4113-97b1-6d427421ec8b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>225</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>33af9a34-77c4-48f8-a3c2-1d586a716cdf</onsuccess><resource object="Browser checks" action="Terminate Page" /></stage><stage stageid="7260966a-301e-4e40-aa3c-afd2732ebeb1" name="Terminate page" type="Action"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>15</displayx><displayy>225</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>54616bfd-45da-453f-baa0-36a3a8886262</onsuccess><resource object="Browser checks" action="Terminate Page" /></stage><stage stageid="781b9059-fe05-4c01-8b0b-1fb44c122e80" name="Terminate" type="Action"><narrative></narrative><displayx>135</displayx><displayy>285</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>815282b2-5244-4462-859b-8fb0b0efcee0</onsuccess><resource object="Putty" action="Terminate" /></stage><stage stageid="8983dd2f-e394-4086-acbf-7a7e6bca7a58" name="Mail username" type="Data"><subsheetid>63fcd935-0aab-4cf2-bf42-c699029ea6c9</subsheetid><narrative></narrative><displayx>360</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage></process></process>
        <process id="4855f894-eda0-4ca5-85a5-7067c6db448e" name="Monitoring BOT" xmlns="http://www.blueprism.co.uk/product/process"><process name="Monitoring BOT" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true"><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="188ec8d4-e2f5-4bcc-9571-ccb3b9bba716" type="Normal" published="False"><name>Launch</name><view><camerax>0</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d718452-b440-41b7-82e3-70007375995e" type="Normal" published="False"><name>Monitoring Process</name><view><camerax>211</camerax><cameray>-86</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="19defd28-98c4-4bd2-a22a-980cbc35e4e9" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Select false to stop this  process" stage="Want to proceed?" /></inputs><onsuccess>c3818cbf-0c00-457b-be44-95893f90759d</onsuccess></stage><stage stageid="691f6061-375d-465c-838a-1604d97eb24b" name="End" type="End"><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="cc073520-cbaa-4142-8630-d2bddb8e95fd" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="fcf2fa76-6584-4add-914b-e00e10884fb6" name="Launch" type="SubSheetInfo"><subsheetid>188ec8d4-e2f5-4bcc-9571-ccb3b9bba716</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="d4997475-3504-4274-af4d-c80a96b86ba2" name="Start" type="Start"><subsheetid>188ec8d4-e2f5-4bcc-9571-ccb3b9bba716</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>709c4ab0-f5b1-4bf2-993b-363a7a0788ed</onsuccess></stage><stage stageid="4c5b77e0-a8e1-4ca2-9a5a-1c167c9a874d" name="End" type="End"><subsheetid>188ec8d4-e2f5-4bcc-9571-ccb3b9bba716</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="709c4ab0-f5b1-4bf2-993b-363a7a0788ed" name="Launch Gmail " type="Action"><subsheetid>188ec8d4-e2f5-4bcc-9571-ccb3b9bba716</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4c5b77e0-a8e1-4ca2-9a5a-1c167c9a874d</onsuccess><resource object="sample" action="Launch mailbox" /></stage><stage stageid="572ef843-465c-4796-9e43-0c11e663d268" name="Monitoring Process" type="SubSheetInfo"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c2aecf65-259d-4103-971c-9ed109d2ec60" name="Start" type="Start"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-270</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>06f2bb59-cce7-4ef3-850d-fba67149b910</onsuccess></stage><stage stageid="da1cca74-2dad-47b8-8e28-66535ecf6bf2" name="End" type="End"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>765</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1c7d59dc-c1ea-4c45-a991-7c49478dc6a0" name="Get Keyword" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Keyword value" stage="Key input value" /></outputs><onsuccess>6b666e7e-14b1-479f-ba80-4bd8b460504f</onsuccess><resource object="sample" action="Read Task" /></stage><stage stageid="81bd054d-1790-4bc3-a23e-431c4fb8b060" name="Key input value" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>75</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acdd4ecf-548f-4a92-8c37-f9219af74cb6" name="Delete the mail" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>fc9f0b5a-3a51-42f6-81b1-d6e3783a178c</onsuccess><resource object="sample" action="Delete mail" /></stage><stage stageid="fc9f0b5a-3a51-42f6-81b1-d6e3783a178c" name="what task?" type="ChoiceStart"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>b183497a-7df9-402a-b82f-0cee812ab48d</groupid><choices><choice expression="StartsWith([Key input value], &quot;Testing&quot;)"><name>Alert : testing</name><distance>90</distance><ontrue>343fe1a1-3a99-4e0b-9788-7a936fd86a00</ontrue></choice><choice expression="StartsWith([Key input value], &quot;Get-details&quot;)"><name>Get details</name><distance>195</distance><ontrue>06ec63ac-7015-4a8c-9c69-eb8e2bdee2fd</ontrue></choice><choice expression="StartsWith([Key input value], &quot;Docker&quot;)"><name>Docker</name><distance>285</distance><ontrue>83bc7657-2f43-46f7-99ad-7d8f89c2240c</ontrue></choice><choice expression="StartsWith([Key input value], &quot;Incident-Report&quot;)"><name>Generate Report</name><distance>375</distance><ontrue>a2f934b5-2486-4b69-a17d-154923ce2b3e</ontrue></choice></choices></stage><stage stageid="828fb527-4f9b-48ee-9e80-a164fa602f4c" name="Otherwise1" type="ChoiceEnd"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>495</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>554c912d-de0d-48a8-bdb7-eec1daa811df</onsuccess><groupid>b183497a-7df9-402a-b82f-0cee812ab48d</groupid></stage><stage stageid="2ff77de3-4f22-4481-bafa-280d06f60e6b" name="For Testing" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>-150</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Good Wishes!! ---Test completed--</initialvalue><private /><alwaysinit /></stage><stage stageid="343fe1a1-3a99-4e0b-9788-7a936fd86a00" name="Launch Meister" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>105</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f2aeb629-cf41-4785-9237-a83bb17684c6</onsuccess><resource object="meistertask" action="Launch" /></stage><stage stageid="f2aeb629-cf41-4785-9237-a83bb17684c6" name="Update" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>105</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Update Comments" expr="[For Testing]" /></inputs><onsuccess>0931efec-a9ec-401c-8e04-644f3e30bcbf</onsuccess><resource object="meistertask" action="Update Comments" /></stage><stage stageid="a2f934b5-2486-4b69-a17d-154923ce2b3e" name="Report incident report" type="Process"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b3c3a8b3-0913-4c19-842f-d9cca2afed6a</onsuccess><processid>4e19f25e-8583-499d-a843-c04b761d6839</processid></stage><stage stageid="83bc7657-2f43-46f7-99ad-7d8f89c2240c" name="Docker-container start" type="Process"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>300</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="What action?" narrative="Type either Docker or Ansible?" expr="&quot;Docker&quot;" /></inputs><outputs><output type="text" name="Docker result update" stage="Docker update" /><output type="text" name="Ansible result update" stage="" /></outputs><onsuccess>74d39a3a-0a07-4161-a979-a8623ed7a202</onsuccess><processid>f52fdaf6-fb12-4520-a622-c18439d27c73</processid></stage><stage stageid="06ec63ac-7015-4a8c-9c69-eb8e2bdee2fd" name="Get Details" type="Process"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>210</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="What action?" narrative="Type either Docker or Ansible?" expr="&quot;Ansible&quot;" /></inputs><onsuccess>4cc3d53c-d741-4750-a706-2f9966303ccd</onsuccess><processid>f52fdaf6-fb12-4520-a622-c18439d27c73</processid></stage><stage stageid="07bec9af-986c-44c5-bbce-2da95fa3096d" name="Docker result update" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>165</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="33599689-4d25-4a5b-8824-28fc93042daf" name="Ansible result update" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-600</displayx><displayy>315</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Task Executed from my side. Please check your mail for task status. Meanwhile you can check it by clicking  this   link below  http://3.16.183.154/dailycheck.html</initialvalue><private /><alwaysinit /></stage><stage stageid="84f9e262-a452-4274-9362-cc58b8a30cf5" name="Docker update" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-585</displayx><displayy>240</displayy><displaywidth>270</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Task Executed from my side. Please check your mail for task status. Meanwhile you can check it by clicking  this   link below  http://18.221.26.98:81/</initialvalue><private /><alwaysinit /></stage><stage stageid="0c471892-c18d-4974-bf11-7ac97fd73c66" name="For Report" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-555</displayx><displayy>-75</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Data's has been extracted and emails has been sent to the individual Employees.</initialvalue><private /><alwaysinit /></stage><stage stageid="b3c3a8b3-0913-4c19-842f-d9cca2afed6a" name="Launch Meister" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>f49829b2-40db-47e4-b3fe-6f64a6198e6c</onsuccess><resource object="meistertask" action="Launch" /></stage><stage stageid="f49829b2-40db-47e4-b3fe-6f64a6198e6c" name="Update" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Update Comments" expr="[For Report]" /></inputs><onsuccess>35c6d6df-3240-40c9-82b6-61ce24693b51</onsuccess><resource object="meistertask" action="Update Comments" /></stage><stage stageid="4cc3d53c-d741-4750-a706-2f9966303ccd" name="Launch Meister" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>210</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ea89c5e2-84fe-40c0-a3e2-f734ab6b08ba</onsuccess><resource object="meistertask" action="Launch" /></stage><stage stageid="ea89c5e2-84fe-40c0-a3e2-f734ab6b08ba" name="Update" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>210</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Update Comments" expr="[Ansible result update]" /></inputs><onsuccess>2ffce42f-de5d-41d0-acf7-0a1912392c2e</onsuccess><resource object="meistertask" action="Update Comments" /></stage><stage stageid="74d39a3a-0a07-4161-a979-a8623ed7a202" name="Launch Meister" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>300</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3d8282a5-5b6c-4cce-9882-074e2d489a10</onsuccess><resource object="meistertask" action="Launch" /></stage><stage stageid="3d8282a5-5b6c-4cce-9882-074e2d489a10" name="Update" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>300</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Update Comments" expr="[Docker update]" /></inputs><onsuccess>aad12954-5301-4d6f-bb1c-1efe4e4f7438</onsuccess><resource object="meistertask" action="Update Comments" /></stage><stage stageid="0931efec-a9ec-401c-8e04-644f3e30bcbf" name="Anchor1" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>105</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2ffce42f-de5d-41d0-acf7-0a1912392c2e</onsuccess></stage><stage stageid="2ffce42f-de5d-41d0-acf7-0a1912392c2e" name="Anchor2" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>210</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c62ea195-9a74-436e-857a-f8776fdd0faa</onsuccess></stage><stage stageid="aad12954-5301-4d6f-bb1c-1efe4e4f7438" name="Anchor3" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>300</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c62ea195-9a74-436e-857a-f8776fdd0faa</onsuccess></stage><stage stageid="35c6d6df-3240-40c9-82b6-61ce24693b51" name="Anchor4" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>aad12954-5301-4d6f-bb1c-1efe4e4f7438</onsuccess></stage><stage stageid="c62ea195-9a74-436e-857a-f8776fdd0faa" name="Anchor5" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>1c563269-9bc0-445b-888e-c8823c4ead61</onsuccess></stage><stage stageid="554c912d-de0d-48a8-bdb7-eec1daa811df" name="Anchor6" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>495</displayx><displayy>360</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>35c6d6df-3240-40c9-82b6-61ce24693b51</onsuccess></stage><stage stageid="5d323726-f925-455e-902e-39ce27117581" name="Want to proceed?" type="Data"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-570</displayx><displayy>0</displayy><displaywidth>210</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><exposure>Session</exposure><alwaysinit /></stage><stage stageid="664f4f57-909b-4f1b-b10c-3b81646ee900" name="Want to proceed?" type="Decision"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>690</displayy><displaywidth>90</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Want to proceed?]=True" /><ontrue>0e72c490-2348-4558-b346-ed151ce3bc21</ontrue><onfalse>da1cca74-2dad-47b8-8e28-66535ecf6bf2</onfalse></stage><stage stageid="cd1bd7fe-c47b-4039-bc08-3c302e97da09" name="Anchor7" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>-225</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>06f2bb59-cce7-4ef3-850d-fba67149b910</onsuccess></stage><stage stageid="06f2bb59-cce7-4ef3-850d-fba67149b910" name="Anchor8" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-225</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>1c7d59dc-c1ea-4c45-a991-7c49478dc6a0</onsuccess></stage><stage stageid="0e72c490-2348-4558-b346-ed151ce3bc21" name="Anchor9" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>690</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>cd1bd7fe-c47b-4039-bc08-3c302e97da09</onsuccess></stage><stage stageid="c3818cbf-0c00-457b-be44-95893f90759d" name="Launch" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>37926d52-a44c-4f5f-b962-8ee22a66beff</onsuccess><processid>188ec8d4-e2f5-4bcc-9571-ccb3b9bba716</processid></stage><stage stageid="37926d52-a44c-4f5f-b962-8ee22a66beff" name="Monitoring Process" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>691f6061-375d-465c-838a-1604d97eb24b</onsuccess><processid>4d718452-b440-41b7-82e3-70007375995e</processid></stage><stage stageid="ee833762-73d9-4e96-8671-535cb54ee2de" name="Tickets actions" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>acdd4ecf-548f-4a92-8c37-f9219af74cb6</onsuccess><resource object="sample" action="Ticket actions" /></stage><stage stageid="1c563269-9bc0-445b-888e-c8823c4ead61" name="Complete Task" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>405</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>93c28a8a-f9cc-4084-987a-9455954a5e7f</onsuccess><resource object="meistertask" action="Complete task" /></stage><stage stageid="211521cf-fc4a-4588-b0a8-5325a06cfc21" name="Wait for next mail" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>615</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>664f4f57-909b-4f1b-b10c-3b81646ee900</onsuccess><resource object="sample" action="Wait for 5 sec" /></stage><stage stageid="7ce75ed9-41e7-46d0-afc0-eb11b1fd8a73" name="Terminate Meister" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>555</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>211521cf-fc4a-4588-b0a8-5325a06cfc21</onsuccess><resource object="meistertask" action="Terminate" /></stage><stage stageid="0fdfe482-cb08-4a48-b025-b8865be8e9b6" name="Exception" type="Exception"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="Business Exception" detail="Didn't Alert Mail :-)" /></stage><stage stageid="e68c8302-309a-4b01-b804-ba19175ac0ef" name="Recover1" type="Recover"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>180</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>94688e51-c507-4567-ba01-5eb7d5efb6fd</onsuccess></stage><stage stageid="94688e51-c507-4567-ba01-5eb7d5efb6fd" name="Resume1" type="Resume"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>285</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d5b45ce9-baaf-4b73-9e3c-c2bf8856030c</onsuccess></stage><stage stageid="6a820a58-81d0-4871-98c6-2be48e4832a8" name="Mail Exception" type="Block"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-45</displayx><displayy>-195</displayy><displaywidth>270</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8139e9f2-afa7-4d3e-a402-6de410c0eae8" name="Wait for next mail" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>-225</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>06f2bb59-cce7-4ef3-850d-fba67149b910</onsuccess><resource object="sample" action="Wait for 5 sec" /></stage><stage stageid="61bddf08-0b2a-4e0a-a635-76fae01e5f23" name="Anchor10" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>645</displayx><displayy>-225</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8139e9f2-afa7-4d3e-a402-6de410c0eae8</onsuccess></stage><stage stageid="93c28a8a-f9cc-4084-987a-9455954a5e7f" name="Archive task" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>465</displayy><displaywidth>180</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>83970f97-b35f-427c-b5a6-f74908eec78f</onsuccess><resource object="meistertask" action="Archive task" /></stage><stage stageid="ad8cb515-a549-4247-9458-616023035bd9" name="Exception1" type="Exception"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="" detail="" /></stage><stage stageid="6f1c1275-f7e5-4fb7-96c0-cf9186ed92e8" name="Recover2" type="Recover"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>180</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>bc248729-42d9-4ab9-8808-48fd2f6b5018</onsuccess></stage><stage stageid="bc248729-42d9-4ab9-8808-48fd2f6b5018" name="Resume2" type="Resume"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>285</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3d92e8cd-f3f8-4395-80c5-b06a9324ca2b</onsuccess></stage><stage stageid="784ba10b-4899-4075-bf77-2201b160ae59" name="UI Exception" type="Block"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>-45</displayx><displayy>-75</displayy><displaywidth>270</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3d92e8cd-f3f8-4395-80c5-b06a9324ca2b" name="Rescue action" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>465</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4800b230-3db1-4a77-a3ca-4285debeb33c</onsuccess><resource object="sample" action="Rescue action" /></stage><stage stageid="4800b230-3db1-4a77-a3ca-4285debeb33c" name="Anchor11" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>465</displayx><displayy>-105</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6b666e7e-14b1-479f-ba80-4bd8b460504f</onsuccess></stage><stage stageid="6b666e7e-14b1-479f-ba80-4bd8b460504f" name="Anchor12" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ee833762-73d9-4e96-8671-535cb54ee2de</onsuccess></stage><stage stageid="274bfd37-65ae-4dc8-9416-1bbb84c0679b" name="Exception2" type="Exception"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>465</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="" detail="" /></stage><stage stageid="a91beaa4-0a95-4e48-9059-65baffb2c1ff" name="Recover3" type="Recover"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>480</displayx><displayy>465</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e2ff5dae-6913-4a2c-a614-67a987423206</onsuccess></stage><stage stageid="e2ff5dae-6913-4a2c-a614-67a987423206" name="Resume3" type="Resume"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>585</displayx><displayy>465</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>006d56c2-942d-4529-b422-8ead4fd43b67</onsuccess></stage><stage stageid="a85d016b-d01c-443f-b594-fc4239bf2b98" name="Block2" type="Block"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>150</displayx><displayy>435</displayy><displaywidth>360</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="83970f97-b35f-427c-b5a6-f74908eec78f" name="Anchor13" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>255</displayx><displayy>510</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7ce75ed9-41e7-46d0-afc0-eb11b1fd8a73</onsuccess></stage><stage stageid="006d56c2-942d-4529-b422-8ead4fd43b67" name="Anchor14" type="Anchor"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>585</displayx><displayy>510</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>83970f97-b35f-427c-b5a6-f74908eec78f</onsuccess></stage><stage stageid="d5b45ce9-baaf-4b73-9e3c-c2bf8856030c" name="Delete other mails" type="Action"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>390</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8139e9f2-afa7-4d3e-a402-6de410c0eae8</onsuccess><resource object="sample" action="Delete other mail" /></stage><stage stageid="1c528bb3-51e3-421d-bee8-3021b7d0e8b5" name="Exception3" type="Exception"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>465</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><exception type="Business Exception" detail="No Mail Exception (Mailbox empty)" /></stage><stage stageid="49627593-1a8a-4bf7-9657-4e1383209881" name="Recover4" type="Recover"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>555</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>12b82373-b0b5-44c8-9fa3-9ac6d58b7dc5</onsuccess></stage><stage stageid="12b82373-b0b5-44c8-9fa3-9ac6d58b7dc5" name="Resume4" type="Resume"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>645</displayx><displayy>-165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>61bddf08-0b2a-4e0a-a635-76fae01e5f23</onsuccess></stage><stage stageid="b2ad80c8-36a1-421e-a4f7-9436e9f107b9" name="Mailbox Empty Exception" type="Block"><subsheetid>4d718452-b440-41b7-82e3-70007375995e</subsheetid><narrative></narrative><displayx>345</displayx><displayy>-195</displayy><displaywidth>240</displaywidth><displayheight>60</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></process>
        <process id="4e19f25e-8583-499d-a843-c04b761d6839" name="Tickets-email" xmlns="http://www.blueprism.co.uk/product/process"><process name="Tickets-email" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true"><view><camerax>-37</camerax><cameray>0</cameray><zoom version="2">1.5625</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="080f8dd7-0129-4d06-ae6c-7951591e2925" type="Normal" published="False"><name>Excel operation</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5c7675fc-2815-4c2c-a281-a3fdbee97b3b" type="Normal" published="False"><name>Process workflow</name><view><camerax>0</camerax><cameray>30</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="a74afc06-c405-44a0-9bfc-dc80f9d72804" type="Normal" published="False"><name>Gmail</name><view><camerax>0</camerax><cameray>-30</cameray><zoom version="2">0.9375</zoom></view></subsheet><stage stageid="cc71086a-8c82-404d-a4e9-c23b9a128cb4" name="Start" type="Start"><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>85f38764-7988-4fc6-b728-d35712c56712</onsuccess></stage><stage stageid="123b21ac-40ec-48d4-95b4-be5924265a08" name="End" type="End"><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="9a16619e-534f-4bd0-983c-651422ed435e" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="6765f725-a6b6-4c8c-9941-8a7023fcda53" name="handle" type="Data"><narrative></narrative><displayx>165</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="57a03dd6-9224-47d8-ac4d-df00bf43870e" name="Workbook Name" type="Data"><narrative></narrative><displayx>150</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="0f829854-ad9d-47e3-bccc-0ad7cfc7ba3d" name="Tickets Data" type="Collection"><narrative></narrative><displayx>150</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="7ec8e69a-033a-4bba-b4fd-2f1d0d72e7cd" name="Process workflow" type="SubSheetInfo"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-360</displayx><displayy>-120</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="310e2519-2e55-4420-aea0-db6d17fea044" name="Start" type="Start"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8959094a-949f-438c-a687-588d35b44dda</onsuccess></stage><stage stageid="a39daead-9d65-4201-a12e-7dec2835ab3b" name="End" type="End"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="8959094a-949f-438c-a687-588d35b44dda" name="Add to Queue" type="Action"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="&quot;Tickets-email&quot;" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Tickets Data]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="Item IDs" /></outputs><onsuccess>9c303f69-8d58-4ba8-9440-d7632ae91c39</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="53520d0b-a154-4ccc-a5c3-c8d7d0fb433d" name="Item IDs" type="Collection"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item ID" type="text" namespace="" description="The Item ID of the work queue item" /></collectioninfo></stage><stage stageid="ca5e91c5-2c95-4858-b1c2-bf7eea3348a7" name="Get Next Item" type="Action"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="&quot;Tickets-email&quot;" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Tickets Data" /><output type="text" name="Status" narrative="The status of the item." stage="Status" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="Attempts" /></outputs><onsuccess>48e8279c-df93-4622-aa43-75470415841f</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="919ab272-7dca-4694-b017-e11f870262ed" name="Item ID" type="Data"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5510dc9-37b2-4fc5-a689-ada5f18ba992" name="Status" type="Data"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12b3908d-dc81-4139-be54-13d58533e4d4" name="Attempts" type="Data"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>225</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add2a7d1-59ed-497a-a876-216788e307cb" name="Mark completed" type="Action"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /></inputs><onsuccess>a4234d4d-51e5-4d9d-add2-e52201a5a024</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Completed" /></stage><stage stageid="a21a2e93-c6af-4fff-9dc9-ac3b0ba41ae8" name="Process workflow" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>123b21ac-40ec-48d4-95b4-be5924265a08</onsuccess><processid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</processid></stage><stage stageid="48e8279c-df93-4622-aa43-75470415841f" name="Is Item ID is null?" type="Decision"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><decision expression="[Item ID] = &quot;&quot;" /><ontrue>a39daead-9d65-4201-a12e-7dec2835ab3b</ontrue><onfalse>929de5d0-6d3d-426a-859a-d79d493b095f</onfalse></stage><stage stageid="017585aa-8d29-440d-a393-ee27eecf7eef" name="Block1" type="Block"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>0</displaywidth><displayheight>0</displayheight><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a4234d4d-51e5-4d9d-add2-e52201a5a024" name="Anchor1" type="Anchor"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>-60</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>9c303f69-8d58-4ba8-9440-d7632ae91c39</onsuccess></stage><stage stageid="2821bd74-d000-4462-9183-0adc9044d792" name="Gmail" type="SubSheetInfo"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f7f4f72b-46fa-44de-8976-d05720c15dbb" name="Start" type="Start"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3a45e977-2b4c-40ee-a91d-c9a2fba313c7</onsuccess></stage><stage stageid="ce9f6a7a-bf74-491c-a62a-a15045877b9f" name="End" type="End"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>225</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3a45e977-2b4c-40ee-a91d-c9a2fba313c7" name="email configure" type="Action"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" expr="[username]" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" expr="[password]" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" expr="&quot;pop.gmail.com&quot;" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" expr="&quot;smtp.gmail.com&quot;" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" expr="[POP3]" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" expr="[smtp]" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" expr="&quot;true&quot;" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" expr="&quot;true&quot;" /></inputs><onsuccess>676fdc84-b568-43bf-bf74-7d60608accae</onsuccess><resource object="Email - POP3/SMTP" action="Configure" /></stage><stage stageid="a7825de1-6c0d-49df-b85b-22e85fabb90c" name="username" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>435</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">vijayanrece@gmail.com</initialvalue><private /><alwaysinit /></stage><stage stageid="5e6aff54-cb13-4bb4-8425-10cd74b5e5d2" name="password" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>420</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="bfb2a762-ed71-415b-980d-b3a1fcfcbb24" name="send message" type="Action"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." expr="[username]" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." expr="[Receiptant]" /><input type="text" name="Subject" narrative="The subject of the email." expr="[Incident number]" /><input type="text" name="Body" narrative="The body of the email." expr="&quot;This is the incident under your name.&#xA; Kindly provide RCA and Close it ASAP ---This mail has been sent by BOT&quot;" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." expr="" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" expr="&quot;true&quot;" /></inputs><onsuccess>ce9f6a7a-bf74-491c-a62a-a15045877b9f</onsuccess><resource object="Email - POP3/SMTP" action="Send Message" /></stage><stage stageid="0b331a84-6185-409c-b829-b43252f20205" name="POP3" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>420</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>995</initialvalue><private /><alwaysinit /></stage><stage stageid="916ee300-a1ce-4d46-aebf-233954e5f511" name="smtp" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>420</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>587</initialvalue><private /><alwaysinit /></stage><stage stageid="9c303f69-8d58-4ba8-9440-d7632ae91c39" name="Anchor2" type="Anchor"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ca5e91c5-2c95-4858-b1c2-bf7eea3348a7</onsuccess></stage><stage stageid="714eda1b-1b5d-42ff-b73a-711ba729fdb2" name="Gmail" type="SubSheet"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>014e9be6-6bae-4bdc-b7b6-2dff9cc15332</onsuccess><processid>a74afc06-c405-44a0-9bfc-dc80f9d72804</processid></stage><stage stageid="929de5d0-6d3d-426a-859a-d79d493b095f" name="Anchor3" type="Anchor"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-75</displayx><displayy>30</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>714eda1b-1b5d-42ff-b73a-711ba729fdb2</onsuccess></stage><stage stageid="74de5d2d-dfda-46ac-9e6f-c8959af5bbf6" name="Get receptant name" type="Action"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="0" /><input type="collection" name="Collection" narrative="The collection to read." expr="[Tickets Data]" /><input type="text" name="Field Name" narrative="The field within the collection to read." expr="&quot;email&quot;" /></inputs><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Receiptant" /></outputs><onsuccess>0713de18-d77c-4c2b-a8b6-4fc85b36f4a9</onsuccess><resource object="Utility - Collection Manipulation" action="Read Collection Field" /></stage><stage stageid="ee628a2a-166d-4b71-890c-f5785443a5f7" name="Receiptant" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>315</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="676fdc84-b568-43bf-bf74-7d60608accae" name="Get Attachment" type="Action"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="0" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." expr="1" /><input type="collection" name="Source Collection" narrative="The collection to copy." expr="[Tickets Data]" /></inputs><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Attachment" /></outputs><onsuccess>74de5d2d-dfda-46ac-9e6f-c8959af5bbf6</onsuccess><resource object="Utility - Collection Manipulation" action="Copy Rows" /></stage><stage stageid="54518228-2eef-486d-9f5a-0f579ab7e5e6" name="Attachment" type="Collection"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>330</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bc915069-ede6-4b01-b110-475b4323457d" name="attach output" type="Collection"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>300</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" namespace="" /><field name="Data Type" type="text" namespace="" /></collectioninfo></stage><stage stageid="0713de18-d77c-4c2b-a8b6-4fc85b36f4a9" name="Get Incident number" type="Action"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>15</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." expr="0" /><input type="collection" name="Collection" narrative="The collection to read." expr="[Tickets Data]" /><input type="text" name="Field Name" narrative="The field within the collection to read." expr="&quot;Number&quot;" /></inputs><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Incident number" /></outputs><onsuccess>bfb2a762-ed71-415b-980d-b3a1fcfcbb24</onsuccess><resource object="Utility - Collection Manipulation" action="Read Collection Field" /></stage><stage stageid="ad9a78b3-fa81-423d-9758-434eec456812" name="Incident number" type="Data"><subsheetid>a74afc06-c405-44a0-9bfc-dc80f9d72804</subsheetid><narrative></narrative><displayx>300</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="014e9be6-6bae-4bdc-b7b6-2dff9cc15332" name="Anchor4" type="Anchor"><subsheetid>5c7675fc-2815-4c2c-a281-a3fdbee97b3b</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-30</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>add2a7d1-59ed-497a-a876-216788e307cb</onsuccess></stage><stage stageid="b9b861d8-f199-4392-9cd2-924557f327c6" name="Excel operation" type="SubSheetInfo"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="054cc2ad-e084-4a1c-928b-84b2662972e8" name="Start" type="Start"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3c845143-8964-4159-96c5-ecef293e173b</onsuccess></stage><stage stageid="9fb9a514-4a35-4e61-9b73-cba30e184bc8" name="End" type="End"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3c845143-8964-4159-96c5-ecef293e173b" name="Excel-Create Instance" type="Action"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>56c325ef-1886-4abd-81a7-6936bee88f96</onsuccess><resource object="MS Excel VBO" action="Create Instance" /></stage><stage stageid="56c325ef-1886-4abd-81a7-6936bee88f96" name="Excel-Open workbook" type="Action"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." expr="&quot;C:\Users\Administrator\Desktop\Tickets-email.xlsx&quot;" /></inputs><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="Workbook Name" /></outputs><onsuccess>8d08ece9-4051-49a8-bff6-541cc9726f00</onsuccess><resource object="MS Excel VBO" action="Open Workbook" /></stage><stage stageid="8d08ece9-4051-49a8-bff6-541cc9726f00" name="Get Collection" type="Action"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." expr="[Workbook Name]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." expr="&quot;work&quot;" /></inputs><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="Tickets Data" /></outputs><onsuccess>4a55eaab-7714-4e40-b890-35de36d0ee18</onsuccess><resource object="MS Excel VBO" action="Get Worksheet As Collection" /></stage><stage stageid="4a55eaab-7714-4e40-b890-35de36d0ee18" name="closed Instances" type="Action"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." expr="[handle]" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." expr="&quot;true&quot;" /></inputs><onsuccess>9fb9a514-4a35-4e61-9b73-cba30e184bc8</onsuccess><resource object="MS Excel VBO" action="Close Instance" /></stage><stage stageid="b582238b-ae8f-4aca-a847-6bea065614f2" name="Data1" type="Data"><subsheetid>080f8dd7-0129-4d06-ae6c-7951591e2925</subsheetid><narrative></narrative><displayx>-135</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>unknown</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85f38764-7988-4fc6-b728-d35712c56712" name="Excel operation" type="SubSheet"><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a21a2e93-c6af-4fff-9dc9-ac3b0ba41ae8</onsuccess><processid>080f8dd7-0129-4d06-ae6c-7951591e2925</processid></stage></process></process>
        <object id="93270741-b687-433a-bbf5-8780f44c6925" name="Browser checks" xmlns="http://www.blueprism.co.uk/product/process"><process name="Browser checks" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Browser checks"><id>009eddc7-3684-41ed-a91a-3029ff662ba0</id><element name="Result headline"><id>cfde8303-9518-4eab-9d07-170933bdd549</id><type>HTML</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="8" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="8" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="968" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="37" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/H1(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="H1" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="It works!" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="http://18.221.26.98:81/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:220,105,142,1188" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Web page result"><id>3dc13a98-0a32-44dd-8a84-8479c01b6db5</id><type>UIAEdit</type><basetype>UIAEdit</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="8" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="63" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="1583" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="74" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="Text" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="text" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="Hello User&#xA;&#xA;&#xA;This is the info for ip-172-31-25-74.us-east-2.compute.internal &#xA;&#xA;&#xA; Memory details &#xA;&#xA;              total        used        free      shared  buff/cache   available&#xA;Mem:            990         196         486          13         307         608&#xA;Swap:             0           0           0&#xA;&#xA; VMSTAT details &#xA;&#xA;procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----&#xA; r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st&#xA; 2  0      0 498168   2088 312968    0    0    37     4   85  135  0  0 99  0  0&#xA; 0  0      0 498168   2088 312968    0    0     0     0 1679 1817  0  0 100  0  0&#xA;&#xA; DISK details &#xA;&#xA;Filesystem      Size  Used Avail Use% Mounted on&#xA;/dev/xvda2       10G  5.3G  4.7G  53% /&#xA;devtmpfs        474M     0  474M   0% /dev&#xA;tmpfs           496M  132K  495M   1% /dev/shm&#xA;tmpfs           496M   13M  483M   3% /run&#xA;tmpfs           496M     0  496M   0% /sys/fs/cgroup&#xA;tmpfs           100M     0  100M   0% /run/user/0&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9; IF YOU VEIWING THIS PAGE THEN VIJAYAN IS MESSING WITH ANSIBLE PLAYBOOK" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="False" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="4976" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="pane" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>HTMLLaunch</id><parameters><parameter><name>Path</name><value>C:\Program Files\Internet Explorer\iexplore.exe</value></parameter><parameter><name>CommandLineParams</name><value>https://i.ytimg.com/vi/VWQuedXSGMc/maxresdefault.jpg</value></parameter><parameter><name>ActiveTabOnly</name><value>True</value></parameter><parameter><name>UseJavaInBrowser</name><value>False</value></parameter><parameter><name>ExcludeHTC</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="149c85cb-5f15-4203-9038-12113fde9657" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b2ddb050-7898-4d00-bf6a-040a7322e93f" type="Normal" published="True"><name>Result for Docker</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d853376e-be5a-4087-ada1-3ed7c87012f3" type="Normal" published="True"><name>Result for Ansible</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aff1feb6-96d1-4378-baf2-d0cae1f1720f" type="Normal" published="True"><name>Terminate Page</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="ac37c45c-bb27-4862-8825-b8b3e16ce9bc" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>4b2961c2-f772-444c-a7fc-c1de5ba75fab</onsuccess></stage><stage stageid="4b2961c2-f772-444c-a7fc-c1de5ba75fab" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="0a6e82b4-f01d-4e1e-b920-b1cfe1e96b4f" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="38274beb-3147-4e2f-b128-e9afc2c63506" name="Clean Up" type="SubSheetInfo"><subsheetid>149c85cb-5f15-4203-9038-12113fde9657</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="24057db1-f594-449a-b817-14f0c177a030" name="Start" type="Start"><subsheetid>149c85cb-5f15-4203-9038-12113fde9657</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8e145b68-d3f1-492d-af01-41bc3bc4e583</onsuccess></stage><stage stageid="8e145b68-d3f1-492d-af01-41bc3bc4e583" name="End" type="End"><subsheetid>149c85cb-5f15-4203-9038-12113fde9657</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="16688b4c-599d-4c7a-b60f-a2a41dde7819" name="Result for Docker" type="SubSheetInfo"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="e6b07390-3be7-4ce8-a29e-7ae21b4154ff" name="Start" type="Start"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Docker Result URL" stage="Docker result URL" /><input type="password" name="mail password" stage="Mail password" /></inputs><onsuccess>3fef5aef-032d-4b96-95ca-f6dba7a970ec</onsuccess></stage><stage stageid="375eaa7a-3fde-437c-a9fc-666cc1d51649" name="End" type="End"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" stage="Value from Result headline" /></outputs></stage><stage stageid="864d21c3-4a8e-4a39-9670-fab7b13b0661" name="Note1" type="Note"><subsheetid>149c85cb-5f15-4203-9038-12113fde9657</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3f34aeec-56a4-406f-a480-25d729b6bde7" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="aa291bb7-412a-46bb-b199-3f5254f85535" name="Load result page" type="Navigate"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ce319c3d-8411-4345-85ac-daa4aaa57e09</onsuccess><step><element id="009eddc7-3684-41ed-a91a-3029ff662ba0" /><action><id>HTMLNavigate</id><arguments><argument><id>NewText</id><value>[Docker result URL]</value></argument></arguments></action></step></stage><stage stageid="e1d29a74-3a0b-41d0-9c5c-775bb34f873b" name="Docker result URL" type="Data"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">http://18.221.26.98:81</initialvalue><private /><alwaysinit /></stage><stage stageid="2e8e7295-2d1d-4a4c-81b9-e3eb35e05fbc" name="Time Out1" type="WaitEnd"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>15</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>aa291bb7-412a-46bb-b199-3f5254f85535</onsuccess><groupid>64eee6fc-dd6d-4d89-a3c1-0496b8a505bd</groupid></stage><stage stageid="527d4e46-b47b-459c-991e-84d0c870c114" name="Wait1" type="WaitStart"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>64eee6fc-dd6d-4d89-a3c1-0496b8a505bd</groupid><choices /><timeout>10</timeout></stage><stage stageid="3fef5aef-032d-4b96-95ca-f6dba7a970ec" name="Launch" type="Navigate"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>527d4e46-b47b-459c-991e-84d0c870c114</onsuccess><step><element id="009eddc7-3684-41ed-a91a-3029ff662ba0" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>ActiveTabOnly</id><value></value></argument><argument><id>UseJavaInBrowser</id><value></value></argument><argument><id>ExcludeHTC</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument></arguments></action></step></stage><stage stageid="27a3dedb-ef26-4494-b31a-ef6163913d58" name="Read Head line" type="Read"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>375eaa7a-3fde-437c-a9fc-666cc1d51649</onsuccess><step stage="Value from Result headline"><element id="cfde8303-9518-4eab-9d07-170933bdd549" /><action><id>ReadCurrentValue</id></action></step></stage><stage stageid="d7111c92-89ce-464d-82fd-2a50ccc6f994" name="Value from Result headline" type="Data"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><narrative></narrative><displayx>255</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35cf9e5c-7422-48f1-8fd3-2f381d2abc24" name="Mail password" type="Data"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><narrative></narrative><displayx>255</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc>120,65,64,2,90,6,76,87,114,69</initialvalueenc><private /><alwaysinit /></stage><stage stageid="73e25b10-0a93-4f5d-968b-21054cf5b6d9" name="Result for Docker" type="SubSheetInfo"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="ced1f4f1-b627-4784-ac72-5e4df9279a32" name="Start" type="Start"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible Result URL" stage="Ansible result URL" /><input type="password" name="mail password" stage="Mail password" /></inputs><onsuccess>f57b5177-c4d9-4cc4-b30b-be7661bc990f</onsuccess></stage><stage stageid="d90e9219-0377-4fb4-9237-315826b08acc" name="End" type="End"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" stage="Value from Result headline" /></outputs></stage><stage stageid="5c33def9-4d00-4599-b527-22cc905f996c" name="Load result page" type="Navigate"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a8add990-b7ca-4102-a527-fd760c3914cb</onsuccess><step><element id="009eddc7-3684-41ed-a91a-3029ff662ba0" /><action><id>HTMLNavigate</id><arguments><argument><id>NewText</id><value>[Ansible result URL]</value></argument></arguments></action></step></stage><stage stageid="4444ece7-94f0-4e6b-ac45-bf78fa1f75a6" name="Ansible result URL" type="Data"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">http://18.221.26.98/dailychck.html</initialvalue><private /><alwaysinit /></stage><stage stageid="ae237280-99db-4f3f-afd6-cef137401a12" name="Time Out1" type="WaitEnd"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>15</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5c33def9-4d00-4599-b527-22cc905f996c</onsuccess><groupid>82a68a4c-e184-4613-999f-dd371f37c2c6</groupid></stage><stage stageid="2a750e32-1f50-457d-a9ee-3481415f6c47" name="Wait1" type="WaitStart"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>82a68a4c-e184-4613-999f-dd371f37c2c6</groupid><choices /><timeout>10</timeout></stage><stage stageid="f57b5177-c4d9-4cc4-b30b-be7661bc990f" name="Launch" type="Navigate"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2a750e32-1f50-457d-a9ee-3481415f6c47</onsuccess><step><element id="009eddc7-3684-41ed-a91a-3029ff662ba0" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>ActiveTabOnly</id><value></value></argument><argument><id>UseJavaInBrowser</id><value></value></argument><argument><id>ExcludeHTC</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument></arguments></action></step></stage><stage stageid="a8add990-b7ca-4102-a527-fd760c3914cb" name="Read Head line" type="Read"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>d90e9219-0377-4fb4-9237-315826b08acc</onsuccess><step stage="Value from Result headline"><element id="3dc13a98-0a32-44dd-8a84-8479c01b6db5" /><action><id>UIAGetValue</id></action></step></stage><stage stageid="8ca54dcb-4fe3-4e18-89cd-febd068c45ec" name="Value from Result headline" type="Data"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><narrative></narrative><displayx>255</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="08226946-ed0e-4a97-8900-f2dda8a948fd" name="Mail password" type="Data"><subsheetid>d853376e-be5a-4087-ada1-3ed7c87012f3</subsheetid><narrative></narrative><displayx>255</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc>120,65,64,2,90,6,76,87,114,69</initialvalueenc><private /><alwaysinit /></stage><stage stageid="3d5a4489-dd70-45ea-a8ce-449bf5984bd8" name="Time Out2" type="WaitEnd"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>75</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>27a3dedb-ef26-4494-b31a-ef6163913d58</onsuccess><groupid>bfa3108d-19f8-47b3-a026-055313512605</groupid></stage><stage stageid="ce319c3d-8411-4345-85ac-daa4aaa57e09" name="Wait2" type="WaitStart"><subsheetid>b2ddb050-7898-4d00-bf6a-040a7322e93f</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>15</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>bfa3108d-19f8-47b3-a026-055313512605</groupid><choices /><timeout></timeout></stage><stage stageid="6ef8845a-cc46-4529-ac68-ee6015c028bf" name="Terminate Page" type="SubSheetInfo"><subsheetid>aff1feb6-96d1-4378-baf2-d0cae1f1720f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b9913fd7-e7da-4cec-9ade-14d2c411732c" name="Start" type="Start"><subsheetid>aff1feb6-96d1-4378-baf2-d0cae1f1720f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>afa6ce07-b2be-4fdf-8c50-b5d673f80274</onsuccess></stage><stage stageid="0ec28448-7b8c-40b3-a5f0-6706c0882222" name="End" type="End"><subsheetid>aff1feb6-96d1-4378-baf2-d0cae1f1720f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="afa6ce07-b2be-4fdf-8c50-b5d673f80274" name="Terminate" type="Navigate"><subsheetid>aff1feb6-96d1-4378-baf2-d0cae1f1720f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0ec28448-7b8c-40b3-a5f0-6706c0882222</onsuccess><step><element id="009eddc7-3684-41ed-a91a-3029ff662ba0" /><action><id>Terminate</id></action></step></stage></process></object>
        <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" name="Email - POP3/SMTP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Email - POP3/SMTP" version="6.2.1.4272" bpversion="6.2.1.4272" narrative="Retrieve email via POP3 protocol and send using SMTP protocol" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>011d2f54-1ac9-4681-a6e7-993aa460851d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67bff276-3cf2-4985-a957-e462b800ac3b" type="Normal" published="True"><name>Get Message</name><view><camerax>0</camerax><cameray>79</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc1b4ba2-0510-4980-92bd-d6312072c5bf" type="Normal" published="True"><name>Send Message</name><view><camerax>0</camerax><cameray>14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e" type="Normal" published="True"><name>Delete Message</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="849d1a37-179b-40ae-9683-4ebb0d951576" type="Normal" published="True"><name>Delete Messages</name><view><camerax>0</camerax><cameray>160</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4688b112-6575-4f8a-980c-713566729518" type="Normal" published="False"><name>Number From ID</name><view><camerax>0</camerax><cameray>64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="544abb24-e623-4adb-a24d-3a5dba6164ba" type="Normal" published="True"><name>Configure</name><view><camerax>63</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="954d358e-45d9-44b3-b56a-87e1c21f9d0f" type="Normal" published="False"><name>Connect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8b9e601-7444-4385-b2aa-6709658ad472" type="Normal" published="False"><name>Disconnect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f" type="Normal" published="True"><name>List Messages</name><view><camerax>0</camerax><cameray>64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="803f1a2c-38f9-4614-97aa-5ca66d454d2d" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>-27</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f87d36b8-5544-47f1-bd36-115a2493fdcd" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a378f6c1-35f0-4954-9186-e304278d369e</onsuccess></stage><stage stageid="a378f6c1-35f0-4954-9186-e304278d369e" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="65d9a6b9-33b9-4e6b-8211-7aa840ca5eee" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference></references><imports><import>System</import><import>System.IO</import><import>System.Net</import><import>System.Net.Mail</import><import>System.Net.Mime</import><import>System.Net.Sockets</import><import>System.Net.Security</import><import>System.Collections.Generic</import><import>System.Collections.Specialized</import><import>System.Text</import><import>System.Security.Cryptography</import><import>System.Globalization</import><import>System.Text.RegularExpressions</import><import>System.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[Pop3Client _rclient;

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message structure
/// and deliver some answer given some question.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
/// <typeparam name="TQuestion">This is the type of the question you want to have answered.</typeparam>
public interface IQuestionAnswerMessageTraverser<TQuestion, TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message, TQuestion question);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart, TQuestion question);
}

///<summary>
/// Finds all the <see cref="MessagePart"/>s which have a given MediaType using a depth first traversal.
///</summary>
internal class FindAllMessagePartsWithMediaType : IQuestionAnswerMessageTraverser<string, List<MessagePart>>
{
    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        List<MessagePart> results = new List<MessagePart>();

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            results.Add(messagePart);

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                List<MessagePart> result = VisitMessagePart(part, question);
                results.AddRange(result);
            }
        }

        return results;
    }
}

///<summary>
/// Finds the first <see cref="MessagePart"/> which have a given MediaType in a depth first traversal.
///</summary>
internal class FindFirstMessagePartWithMediaType : IQuestionAnswerMessageTraverser<string, MessagePart>
{
    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            return messagePart;

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                MessagePart result = VisitMessagePart(part, question);
                if (result != null)
                    return result;
            }
        }

        return null;
    }
}

/// <summary>
/// Finds all <see cref="MessagePart"/>s which are considered to be attachments
/// </summary>
internal class AttachmentFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsAttachment)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message hierarchy structure
/// and deliver some answer.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
public interface IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart);
}

/// <summary>
/// This is an abstract class which handles traversing of a <see cref="Message"/> tree structure.<br/>
/// It runs through the message structure using a depth-first traversal.
/// </summary>
/// <typeparam name="TAnswer">The answer you want from traversing the message tree structure</typeparam>
public abstract class AnswerMessageTraverser<TAnswer> : IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want an answer for a full message.
    /// </summary>
    /// <param name="message">The message you want to traverse</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="message"/> is <see langword="null"/></exception>
    public TAnswer VisitMessage(Message message)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart);
    }

    /// <summary>
    /// Call this method when you want to find an answer for a <see cref="MessagePart"/>
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> part you want an answer from.</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="messagePart"/> is <see langword="null"/></exception>
    public TAnswer VisitMessagePart(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.IsMultiPart)
        {
            List<TAnswer> leafAnswers = new List<TAnswer>(messagePart.MessageParts.Count);
            foreach (MessagePart part in messagePart.MessageParts)
            {
                leafAnswers.Add(VisitMessagePart(part));
            }
            return MergeLeafAnswers(leafAnswers);
        }

        return CaseLeaf(messagePart);
    }

    /// <summary>
    /// For a concrete implementation an answer must be returned for a leaf <see cref="MessagePart"/>, which are
    /// MessageParts that are not <see cref="MessagePart.IsMultiPart">MultiParts.</see>
    /// </summary>
    /// <param name="messagePart">The message part which is a leaf and thereby not a MultiPart</param>
    /// <returns>An answer</returns>
    protected abstract TAnswer CaseLeaf(MessagePart messagePart);

    /// <summary>
    /// For a concrete implementation, when a MultiPart <see cref="MessagePart"/> has fetched it's answers from it's children, these
    /// answers needs to be merged. This is the responsibility of this method.
    /// </summary>
    /// <param name="leafAnswers">The answer that the leafs gave</param>
    /// <returns>A merged answer</returns>
    protected abstract TAnswer MergeLeafAnswers(List<TAnswer> leafAnswers);
}

///<summary>
/// An abstract class that implements the MergeLeafAnswers method.<br/>
/// The method simply returns the union of all answers from the leaves.
///</summary>
public abstract class MultipleMessagePartFinder : AnswerMessageTraverser<List<MessagePart>>
{
    /// <summary>
    /// Adds all the <paramref name="leafAnswers"/> in one big answer
    /// </summary>
    /// <param name="leafAnswers">The answers to merge</param>
    /// <returns>A list with has all the elements in the <paramref name="leafAnswers"/> lists</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="leafAnswers"/> is <see langword="null"/></exception>
    protected override List<MessagePart> MergeLeafAnswers(List<List<MessagePart>> leafAnswers)
    {
        if (leafAnswers == null)
            throw new ArgumentNullException("leafAnswers");

        // We simply create a list with all the answer generated from the leaves
        List<MessagePart> mergedResults = new List<MessagePart>();

        foreach (List<MessagePart> leafAnswer in leafAnswers)
        {
            mergedResults.AddRange(leafAnswer);
        }

        return mergedResults;
    }
}

/// <summary>
/// Finds all text/[something] versions in a Message hierarchy
/// </summary>
internal class TextVersionFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsText)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This class is responsible for decoding parameters that has been encoded with:<br/>
/// <list type="bullet">
/// <item>
///    <b>Continuation</b><br/>
///    This is where a single parameter has such a long value that it could
///    be wrapped while in transit. Instead multiple parameters is used on each line.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Type: text/html; boundary="someVeryLongStringHereWhichCouldBeWrappedInTransit"</c><br/>
///    To: <c>Content-Type: text/html; boundary*0="someVeryLongStringHere" boundary*1="WhichCouldBeWrappedInTransit"</c><br/>
/// </item>
/// <item>
///    <b>Encoding</b><br/>
///    Sometimes other characters then ASCII characters are needed in parameters.<br/>
///    The parameter is then given a different name to specify that it is encoded.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅ"</c><br/>
///    To: <c>Content-Disposition attachment; filename*="ISO-8859-1'en-us'specialCharsC6D8C0"</c><br/>
///    This encoding is almost the same as <see cref="EncodedWord"/> encoding, and is used to decode the value.<br/>
/// </item>
/// <item>
///    <b>Continuation and Encoding</b><br/>
///    Both Continuation and Encoding can be used on the same time.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅWhichIsSoLong"</c><br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1*="WhichIsSoLong"</c><br/>
///    This could also be encoded as:<br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1="WhichIsSoLong"</c><br/>
///    Notice that <c>filename*1</c> does not have an <c>*</c> after it - denoting it IS NOT encoded.<br/>
///    There are some rules about this:<br/>
///    <list type="number">
///      <item>The encoding must be mentioned in the first part (filename*0*), which has to be encoded.</item>
///      <item>No other part must specify an encoding, but if encoded it uses the encoding mentioned in the first part.</item>
///      <item>Parts may be encoded or not in any order.</item>
///    </list>
///    <br/>
/// </item>
/// </list>
/// More information and the specification is available in <see href="http://tools.ietf.org/html/rfc2231">RFC 2231</see>.
/// </summary>
internal static class Rfc2231Decoder
{
    /// <summary>
    /// Decodes a string of the form:<br/>
    /// <c>value0; key1=value1; key2=value2; key3=value3</c><br/>
    /// The returned List of key value pairs will have the key as key and the decoded value as value.<br/>
    /// The first value0 will have a key of <see cref="string.Empty"/>.<br/>
    /// <br/>
    /// If continuation is used, then multiple keys will be merged into one key with the different values
    /// decoded into on big value for that key.<br/>
    /// Example:<br/>
    /// <code>
    /// title*0=part1
    /// title*1=part2
    /// </code>
    /// will have key and value of:<br></br>
    /// <c>title=decode(part1)decode(part2)</c>
    /// </summary>
    /// <param name="toDecode">The string to decode.</param>
    /// <returns>A list of decoded key value pairs.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static List<KeyValuePair<string, string>> Decode(string toDecode)
		{
			if(toDecode == null)
				throw new ArgumentNullException("toDecode");

			// Normalize the input to take account for missing semicolons after parameters.
			// Example
			// text/plain; charset=\"iso-8859-1\" name=\"somefile.txt\" or
            // text/plain;\tcharset=\"iso-8859-1\"\tname=\"somefile.txt\"
			// is normalized to
			// text/plain; charset=\"iso-8859-1\"; name=\"somefile.txt\"
			// Only works for parameters inside quotes
			// \s = matches whitespace
			toDecode = Regex.Replace(toDecode, "=\\s*\"(?<value>[^\"]*)\"\\s", "=\"${value}\"; ");

			// Normalize 
			// Since the above only works for parameters inside quotes, we need to normalize
			// the special case with the first parameter.
			// Example:
			// attachment filename="foo"
			// is normalized to
			// attachment; filename="foo"
			// ^ = matches start of line (when not inside square bracets [])
			toDecode = Regex.Replace(toDecode, @"^(?<first>[^;\s]+)\s(?<second>[^;\s]+)", "${first}; ${second}");

			// Split by semicolon, but only if not inside quotes
			List<string> splitted = Utility.SplitStringWithCharNotInsideQuotes(toDecode.Trim(), ';');

			List<KeyValuePair<string, string>> collection = new List<KeyValuePair<string, string>>(splitted.Count);

			foreach (string part in splitted)
			{
				// Empty strings should not be processed
				if (part.Trim().Length == 0)
					continue;

				string[] keyValue = part.Trim().Split(new char[] {'='}, 2);
				if(keyValue.Length == 1)
				{
					collection.Add(new KeyValuePair<string, string>("", keyValue[0]));
				} else if (keyValue.Length == 2)
				{
					collection.Add(new KeyValuePair<string, string>(keyValue[0], keyValue[1]));
				} else
				{
					throw new ArgumentException("When splitting the part \"" + part + "\" by = there was " + keyValue.Length + " parts. Only 1 and 2 are supported");
				}
			}

			return DecodePairs(collection);
		}

    /// <summary>
    /// Decodes the list of key value pairs into a decoded list of key value pairs.<br/>
    /// There may be less keys in the decoded list, but then the values for the lost keys will have been appended
    /// to the new key.
    /// </summary>
    /// <param name="pairs">The pairs to decode</param>
    /// <returns>A decoded list of pairs</returns>
    private static List<KeyValuePair<string, string>> DecodePairs(List<KeyValuePair<string, string>> pairs)
    {
        if (pairs == null)
            throw new ArgumentNullException("pairs");

        List<KeyValuePair<string, string>> resultPairs = new List<KeyValuePair<string, string>>(pairs.Count);

        int pairsCount = pairs.Count;
        for (int i = 0; i < pairsCount; i++)
        {
            KeyValuePair<string, string> currentPair = pairs[i];
            string key = currentPair.Key;
            string value = Utility.RemoveQuotesIfAny(currentPair.Value);

            // Is it a continuation parameter? (encoded or not)
            if (key.EndsWith("*0", StringComparison.OrdinalIgnoreCase) || key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
            {
                // This encoding will not be used if we get into the if which tells us
                // that the whole continuation is not encoded

                string encoding = "notEncoded - Value here is never used";

                // Now lets find out if it is encoded too.
                if (key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
                {
                    // It is encoded.

                    // Fetch out the encoding for later use and decode the value
                    // If the value was not encoded as the email specified
                    // encoding will be set to null. This will be used later.
                    value = DecodeSingleValue(value, out encoding);

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    // And remove the * afterwards which tells us it is encoded
                    key = key.Replace("*0*", "");
                }
                else
                {
                    // It is not encoded, and no parts of the continuation is encoded either

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    key = key.Replace("*0", "");
                }

                // The StringBuilder will hold the full decoded value from all continuation parts
                StringBuilder builder = new StringBuilder();

                // Append the decoded value
                builder.Append(value);

                // Now go trough the next keys to see if they are part of the continuation
                for (int j = i + 1, continuationCount = 1; j < pairsCount; j++, continuationCount++)
                {
                    string jKey = pairs[j].Key;
                    string valueJKey = Utility.RemoveQuotesIfAny(pairs[j].Value);

                    if (jKey.Equals(key + "*" + continuationCount))
                    {
                        // This value part of the continuation is not encoded
                        // Therefore remove qoutes if any and add to our stringbuilder
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else if (jKey.Equals(key + "*" + continuationCount + "*"))
                    {
                        // We will not get into this part if the first part was not encoded
                        // Therefore the encoding will only be used if and only if the
                        // first part was encoded, in which case we have remembered the encoding used

                        // Sometimes an email creator says that a string was encoded, but it really
                        // `was not. This is to catch that problem.
                        if (encoding != null)
                        {
                            // This value part of the continuation is encoded
                            // the encoding is not given in the current value,
                            // but was given in the first continuation, which we remembered for use here
                            valueJKey = DecodeSingleValue(valueJKey, encoding);
                        }
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else
                    {
                        // No more keys for this continuation
                        break;
                    }
                }

                // Add the key and the full value as a pair
                value = builder.ToString();
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else if (key.EndsWith("*", StringComparison.OrdinalIgnoreCase))
            {
                // This parameter is only encoded - it is not part of a continuation
                // We need to change the key from "<key>*" to "<key>" and decode the value

                // To get the key we want, we remove the last * that denotes
                // that the value hold by the key was encoded
                key = key.Replace("*", "");

                // Decode the value
                string throwAway;
                value = DecodeSingleValue(value, out throwAway);

                // Now input the new value with the new key
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else
            {
                // Fully normal key - the value is not encoded
                // Therefore nothing to do, and we can simply pass the pair
                // as being decoded now
                resultPairs.Add(currentPair);
            }
        }

        return resultPairs;
    }

    /// <summary>
    /// This will decode a single value of the form: <c>ISO-8859-1'en-us'%3D%3DIamHere</c><br/>
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =<br/>
    /// Notice that 'en-us' part is not used for anything.<br/>
    /// <br/>
    /// If the single value given is not on the correct form, it will be returned without 
    /// being decoded and <paramref name="encodingUsed"/> will be set to <see langword="null"/>.
    /// </summary>
    /// <param name="encodingUsed">
    /// The encoding used to decode with - it is given back for later use.<br/>
    /// <see langword="null"/> if input was not in the correct form.
    /// </param>
    /// <param name="toDecode">The value to decode</param>
    /// <returns>
    /// The decoded value that corresponds to <paramref name="toDecode"/> or if
    /// <paramref name="toDecode"/> is not on the correct form, it will be non-decoded.
    /// </returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string toDecode, out string encodingUsed)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Check if input has a part describing the encoding
        if (toDecode.IndexOf('\'') == -1)
        {
            // The input was not encoded (at least not valid) and it is returned as is
            //DefaultLogger.Log.LogDebug("Rfc2231Decoder: Someone asked me to decode a string which was not encoded - returning raw string. Input: " + toDecode);
            encodingUsed = null;
            return toDecode;
        }
        encodingUsed = toDecode.Substring(0, toDecode.IndexOf('\''));
        toDecode = toDecode.Substring(toDecode.LastIndexOf('\'') + 1);
        return DecodeSingleValue(toDecode, encodingUsed);
    }

    /// <summary>
    /// This will decode a single value of the form: %3D%3DIamHere
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =
    /// </summary>
    /// <param name="valueToDecode">The value to decode</param>
    /// <param name="encoding">The encoding used to decode with</param>
    /// <returns>The decoded value that corresponds to <paramref name="valueToDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="valueToDecode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string valueToDecode, string encoding)
    {
        if (valueToDecode == null)
            throw new ArgumentNullException("valueToDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // The encoding used is the same as QuotedPrintable, we only
        // need to change % to =
        // And otherwise make it look like the correct EncodedWord encoding
        valueToDecode = "=?" + encoding + "?Q?" + valueToDecode.Replace("%", "=") + "?=";
        return EncodedWord.Decode(valueToDecode);
    }
}

/// <summary>
/// Class that can parse different fields in the header sections of a MIME message.
/// </summary>
internal static class HeaderFieldParser
{
    /// <summary>
    /// Parses the Content-Transfer-Encoding header.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <returns>A <see cref="ContentTransferEncoding"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the <paramref name="headerValue"/> could not be parsed to a <see cref="ContentTransferEncoding"/></exception>
    public static ContentTransferEncoding ParseContentTransferEncoding(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.Trim().ToUpperInvariant())
        {
            case "7BIT":
                return ContentTransferEncoding.SevenBit;

            case "8BIT":
                return ContentTransferEncoding.EightBit;

            case "QUOTED-PRINTABLE":
                return ContentTransferEncoding.QuotedPrintable;

            case "BASE64":
                return ContentTransferEncoding.Base64;

            case "BINARY":
                return ContentTransferEncoding.Binary;

            // If a wrong argument is passed to this parser method, then we assume
            // default encoding, which is SevenBit.
            // This is to ensure that we do not throw exceptions, even if the email not MIME valid.
            default:
                //DefaultLogger.Log.LogDebug("Wrong ContentTransferEncoding was used. It was: " + headerValue);
                return ContentTransferEncoding.SevenBit;
        }
    }

    /// <summary>
    /// Parses an ImportanceType from a given Importance header value.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="MailPriority"/>. If the <paramref name="headerValue"/> is not recognized, Normal is returned.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static MailPriority ParseImportance(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.ToUpperInvariant())
        {
            case "5":
            case "HIGH":
                return MailPriority.High;

            case "3":
            case "NORMAL":
                return MailPriority.Normal;

            case "1":
            case "LOW":
                return MailPriority.Low;

            default:
                //DefaultLogger.Log.LogDebug("HeaderFieldParser: Unknown importance value: \"" + headerValue + "\". Using default of normal importance.");
                return MailPriority.Normal;
        }
    }

    /// <summary>
    /// Parses a the value for the header Content-Type to 
    /// a <see cref="ContentType"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentType"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentType ParseContentType(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // We create an empty Content-Type which we will fill in when we see the values
        ContentType contentType = new ContentType();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = Utility.RemoveQuotesIfAny(keyValuePair.Value.Trim());
            switch (key)
            {
                case "":
                    // This is the MediaType - it has no key since it is the first one mentioned in the
                    // headerValue and has no = in it.

                    // Check for illegal content-type
                    if (value.ToUpperInvariant().Equals("TEXT"))
                        value = "text/plain";

                    contentType.MediaType = value;
                    break;

                case "BOUNDARY":
                    contentType.Boundary = value;
                    break;

                case "CHARSET":
                    contentType.CharSet = value;
                    break;

                case "NAME":
                    contentType.Name = EncodedWord.Decode(value);
                    break;

                default:
                    // This is to shut up the code help that is saying that contentType.Parameters
                    // can be null - which it cant!
                    if (contentType.Parameters == null)
                        throw new Exception("The ContentType parameters property is null. This will never be thrown.");

                    // We add the unknown value to our parameters list
                    // "Known" unknown values are:
                    // - title
                    // - report-type
                    contentType.Parameters.Add(key, value);
                    break;
            }
        }

        return contentType;
    }

    /// <summary>
    /// Parses a the value for the header Content-Disposition to a <see cref="ContentDisposition"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentDisposition"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentDisposition ParseContentDisposition(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // See http://www.ietf.org/rfc/rfc2183.txt for RFC definition

        // Create empty ContentDisposition - we will fill in details as we read them
        ContentDisposition contentDisposition = new ContentDisposition();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = keyValuePair.Value;
            switch (key)
            {
                case "":
                    // This is the DispisitionType - it has no key since it is the first one
                    // and has no = in it.
                    contentDisposition.DispositionType = value;
                    break;

                // The correct name of the parameter is filename, but some emails also contains the parameter
                // name, which also holds the name of the file. Therefore we use both names for the same field.
                case "NAME":
                case "FILENAME":
                    // The filename might be in qoutes, and it might be encoded-word encoded
                    contentDisposition.FileName = EncodedWord.Decode(Utility.RemoveQuotesIfAny(value));
                    break;

                case "CREATION-DATE":
                    // Notice that we need to create a new DateTime because of a failure in .NET 2.0.
                    // The failure is: you cannot give contentDisposition a DateTime with a Kind of UTC
                    // It will set the CreationDate correctly, but when trying to read it out it will throw an exception.
                    // It is the same with ModificationDate and ReadDate.
                    // This is fixed in 4.0 - maybe in 3.0 too.
                    // Therefore we create a new DateTime which have a DateTimeKind set to unspecified
                    DateTime creationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.CreationDate = creationDate;
                    break;

                case "MODIFICATION-DATE":
                    DateTime midificationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ModificationDate = midificationDate;
                    break;

                case "READ-DATE":
                    DateTime readDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ReadDate = readDate;
                    break;

                case "SIZE":
                    contentDisposition.Size = int.Parse(Utility.RemoveQuotesIfAny(value), CultureInfo.InvariantCulture);
                    break;

                default:
                    if (key.StartsWith("X-"))
                    {
                        contentDisposition.Parameters.Add(key, Utility.RemoveQuotesIfAny(value));
                        break;
                    }

                    throw new ArgumentException("Unknown parameter in Content-Disposition. Ask developer to fix! Parameter: " + key);
            }
        }

        return contentDisposition;
    }

    /// <summary>
    /// Parses an ID like Message-Id and Content-Id.<br/>
    /// Example:<br/>
    /// <c>&lt;test@test.com&gt;</c><br/>
    /// into<br/>
    /// <c>test@test.com</c>
    /// </summary>
    /// <param name="headerValue">The id to parse</param>
    /// <returns>A parsed ID</returns>
    public static string ParseId(string headerValue)
    {
        // Remove whitespace in front and behind since
        // whitespace is allowed there
        // Remove the last > and the first <
        return headerValue.Trim().TrimEnd('>').TrimStart('<');
    }

    /// <summary>
    /// Parses multiple IDs from a single string like In-Reply-To.
    /// </summary>
    /// <param name="headerValue">The value to parse</param>
    /// <returns>A list of IDs</returns>
    public static List<string> ParseMultipleIDs(string headerValue)
		{
			List<string> returner = new List<string>();

			// Split the string by >
			// We cannot use ' ' (space) here since this is a possible value:
			// <test@test.com><test2@test.com>
			string[] ids = headerValue.Trim().Split(new char[]{ '>' }, StringSplitOptions.RemoveEmptyEntries);
			foreach (string id in ids)
			{
				returner.Add(ParseId(id));
			}

			return returner;
		}
}

/// <summary>
/// Utility class for dealing with encoded word strings<br/>
/// <br/>
/// EncodedWord encoded strings are only in ASCII, but can embed information
/// about characters in other character sets.<br/>
/// <br/>
/// It is done by specifying the character set, an encoding that maps from ASCII to
/// the correct bytes and the actual encoded string.<br/>
/// <br/>
/// It is specified in a format that is best summarized by a BNF:<br/>
/// <c>"=?" character_set "?" encoding "?" encoded-text "?="</c><br/>
/// </summary>
/// <example>
/// <c>=?ISO-8859-1?Q?=2D?=</c>
/// Here <c>ISO-8859-1</c> is the character set.<br/>
/// <c>Q</c> is the encoding method (quoted-printable). <c>B</c> is also supported (Base 64).<br/>
/// The encoded text is the <c>=2D</c> part which is decoded to a space.
/// </example>
internal static class EncodedWord
{
    /// <summary>
    /// Decode text that is encoded with the <see cref="EncodedWord"/> encoding.<br/>
    ///<br/>
    /// This method will decode any encoded-word found in the string.<br/>
    /// All parts which is not encoded will not be touched.<br/>
    /// <br/>
    /// From <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>:<br/>
    /// <code>
    /// Generally, an "encoded-word" is a sequence of printable ASCII
    /// characters that begins with "=?", ends with "?=", and has two "?"s in
    /// between.  It specifies a character set and an encoding method, and
    /// also includes the original text encoded as graphic ASCII characters,
    /// according to the rules for that encoding method.
    /// </code>
    /// Example:<br/>
    /// <c>=?ISO-8859-1?q?this=20is=20some=20text?= other text here</c>
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-2">RFC 2047 section 2</a> "Syntax of encoded-words" for more details</remarks>
    /// <param name="encodedWords">Source text. May be content which is not encoded.</param>
    /// <returns>Decoded text</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="encodedWords"/> is <see langword="null"/></exception>
    public static string Decode(string encodedWords)
    {
        if (encodedWords == null)
            throw new ArgumentNullException("encodedWords");

        // Notice that RFC2231 redefines the BNF to
        // encoded-word := "=?" charset ["*" language] "?" encoded-text "?="
        // but no usage of this BNF have been spotted yet. It is here to
        // ease debugging if such a case is discovered.

        // This is the regex that should fit the BNF
        // RFC Says that NO WHITESPACE is allowed in this encoding, but there are examples
        // where whitespace is there, and therefore this regex allows for such.
        const string encodedWordRegex = @"\=\?(?<Charset>\S+?)\?(?<Encoding>\w)\?(?<Content>.+?)\?\=";
        // \w	Matches any word character including underscore. Equivalent to "[A-Za-z0-9_]".
        // \S	Matches any nonwhite space character. Equivalent to "[^ \f\n\r\t\v]".
        // +?   non-gready equivalent to +
        // (?<NAME>REGEX) is a named group with name NAME and regular expression REGEX

        // Any amount of linear-space-white between 'encoded-word's,
        // even if it includes a CRLF followed by one or more SPACEs,
        // is ignored for the purposes of display.
        // http://tools.ietf.org/html/rfc2047#page-12
        // Define a regular expression that captures two encoded words with some whitespace between them
        const string replaceRegex = @"(?<first>" + encodedWordRegex + @")\s+(?<second>" + encodedWordRegex + ")";

        // Then, find an occourance of such an expression, but remove the whitespace inbetween when found
        encodedWords = Regex.Replace(encodedWords, replaceRegex, "${first}${second}");

        string decodedWords = encodedWords;

        MatchCollection matches = Regex.Matches(encodedWords, encodedWordRegex);
        foreach (Match match in matches)
        {
            // If this match was not a success, we should not use it
            if (!match.Success) continue;

            string fullMatchValue = match.Value;

            string encodedText = match.Groups["Content"].Value;
            string encoding = match.Groups["Encoding"].Value;
            string charset = match.Groups["Charset"].Value;

            // Get the encoding which corrosponds to the character set
            Encoding charsetEncoding = EncodingFinder.FindEncoding(charset);

            // Store decoded text here when done
            string decodedText;

            // Encoding may also be written in lowercase
            switch (encoding.ToUpperInvariant())
            {
                // RFC:
                // The "B" encoding is identical to the "BASE64" 
                // encoding defined by RFC 2045.
                // http://tools.ietf.org/html/rfc2045#section-6.8
                case "B":
                    decodedText = Base64.Decode(encodedText, charsetEncoding);
                    break;

                // RFC:
                // The "Q" encoding is similar to the "Quoted-Printable" content-
                // transfer-encoding defined in RFC 2045.
                // There are more details to this. Please check
                // http://tools.ietf.org/html/rfc2047#section-4.2
                // 
                case "Q":
                    decodedText = QuotedPrintable.DecodeEncodedWord(encodedText, charsetEncoding);
                    break;

                default:
                    throw new ArgumentException("The encoding " + encoding + " was not recognized");
            }

            // Repalce our encoded value with our decoded value
            decodedWords = decodedWords.Replace(fullMatchValue, decodedText);
        }

        return decodedWords;
    }
}

/// <summary>
/// Contains common operations needed while decoding.
/// </summary>
internal static class Utility
{
    /// <summary>
    /// Remove quotes, if found, around the string.
    /// </summary>
    /// <param name="text">Text with quotes or without quotes</param>
    /// <returns>Text without quotes</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="text"/> is <see langword="null"/></exception>
    public static string RemoveQuotesIfAny(string text)
    {
        if (text == null)
            throw new ArgumentNullException("text");

        // Check if there are qoutes at both ends
        if (text[0] == '"' && text[text.Length - 1] == '"')
        {
            // Remove quotes at both ends
            return text.Substring(1, text.Length - 2);
        }

        // If no quotes were found, the text is just returned
        return text;
    }

    /// <summary>
    /// Split a string into a list of strings using a specified character.<br/>
    /// Everything inside quotes are ignored.
    /// </summary>
    /// <param name="input">A string to split</param>
    /// <param name="toSplitAt">The character to use to split with</param>
    /// <returns>A List of strings that was delimited by the <paramref name="toSplitAt"/> character</returns>
    public static List<string> SplitStringWithCharNotInsideQuotes(string input, char toSplitAt)
    {
        List<string> elements = new List<string>();

        int lastSplitLocation = 0;
        bool insideQuote = false;

        char[] characters = input.ToCharArray();

        for (int i = 0; i < characters.Length; i++)
        {
            char character = characters[i];
            if (character == '\"')
                insideQuote = !insideQuote;

            // Only split if we are not inside quotes
            if (character == toSplitAt && !insideQuote)
            {
                // We need to split
                int length = i - lastSplitLocation;
                elements.Add(input.Substring(lastSplitLocation, length));

                // Update last split location
                // + 1 so that we do not include the character used to split with next time
                lastSplitLocation = i + 1;
            }
        }

        // Add the last part
        elements.Add(input.Substring(lastSplitLocation, input.Length - lastSplitLocation));

        return elements;
    }
}

/// <summary>
/// Class used to decode RFC 2822 Date header fields.
/// </summary>
internal static class Rfc2822DateTime
{
    /// <summary>
    /// Converts a string in RFC 2822 format into a <see cref="DateTime"/> object
    /// </summary>
    /// <param name="inputDate">The date to convert</param>
    /// <returns>
    /// A valid <see cref="DateTime"/> object, which represents the same time as the string that was converted. 
    /// If <paramref name="inputDate"/> is not a valid date representation, then <see cref="DateTime.MinValue"/> is returned.
    /// </returns>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="inputDate"/> is <see langword="null"/></exception></exception>
    /// <exception cref="ArgumentException">If the <paramref name="inputDate"/> could not be parsed into a <see cref="DateTime"/> object</exception>
    public static DateTime StringToDate(string inputDate)
    {
        if (inputDate == null)
            throw new ArgumentNullException("inputDate");

        // Old date specification allows comments and a lot of whitespace
        inputDate = StripCommentsAndExcessWhitespace(inputDate);

        try
        {
            // Extract the DateTime
            DateTime dateTime = ExtractDateTime(inputDate);

            // If a day-name is specified in the inputDate string, check if it fits with the date
            ValidateDayNameIfAny(dateTime, inputDate);

            // Convert the date into UTC
            dateTime = new DateTime(dateTime.Ticks, DateTimeKind.Utc);

            // Adjust according to the time zone
            dateTime = AdjustTimezone(dateTime, inputDate);

            // Return the parsed date
            return dateTime;
        }
        catch (FormatException e)	// Convert.ToDateTime() Failure
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
        catch (ArgumentException e)
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
    }

    /// <summary>
    /// Adjust the <paramref name="dateTime"/> object given according to the timezone specified in the <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The date to alter</param>
    /// <param name="dateInput">The input date, in which the timezone can be found</param>
    /// <returns>An date altered according to the timezone</returns>
    /// <exception cref="ArgumentException">If no timezone was found in <paramref name="dateInput"/></exception>
    private static DateTime AdjustTimezone(DateTime dateTime, string dateInput)
    {
        // We know that the timezones are always in the last part of the date input
        string[] parts = dateInput.Split(' ');
        string lastPart = parts[parts.Length - 1];

        // Convert timezones in older formats to [+-]dddd format.
        lastPart = Regex.Replace(lastPart, @"UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-I]|[K-Y]|Z", MatchEvaluator);

        // Find the timezone specification
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // finds -0600
        Match match = Regex.Match(lastPart, @"[\+-](?<hours>\d\d)(?<minutes>\d\d)");
        if (match.Success)
        {
            // We have found that the timezone is in +dddd or -dddd format
            // Add the number of hours and minutes to our found date
            int hours = int.Parse(match.Groups["hours"].Value);
            int minutes = int.Parse(match.Groups["minutes"].Value);

            int factor = match.Value[0] == '+' ? -1 : 1;

            dateTime = dateTime.AddHours(factor * hours);
            dateTime = dateTime.AddMinutes(factor * minutes);

            return dateTime;
        }

        //DefaultLogger.Log.LogDebug("No timezone found in date: " + dateInput + ". Using -0000 as default.");

        // A timezone of -0000 is the same as doing nothing
        return dateTime;
    }

    /// <summary>
    /// Convert timezones in older formats to [+-]dddd format.
    /// </summary>
    /// <param name="match">The match that was found</param>
    /// <returns>The string to replace the matched string with</returns>
    private static string MatchEvaluator(Match match)
    {
        if (!match.Success)
        {
            throw new ArgumentException("Match success are always true");
        }

        switch (match.Value)
        {
            // "A" through "I"
            // are equivalent to "+0100" through "+0900" respectively
            case "A": return "+0100";
            case "B": return "+0200";
            case "C": return "+0300";
            case "D": return "+0400";
            case "E": return "+0500";
            case "F": return "+0600";
            case "G": return "+0700";
            case "H": return "+0800";
            case "I": return "+0900";

            // "K", "L", and "M"
            // are equivalent to "+1000", "+1100", and "+1200" respectively
            case "K": return "+1000";
            case "L": return "+1100";
            case "M": return "+1200";

            // "N" through "Y"
            // are equivalent to "-0100" through "-1200" respectively
            case "N": return "-0100";
            case "O": return "-0200";
            case "P": return "-0300";
            case "Q": return "-0400";
            case "R": return "-0500";
            case "S": return "-0600";
            case "T": return "-0700";
            case "U": return "-0800";
            case "V": return "-0900";
            case "W": return "-1000";
            case "X": return "-1100";
            case "Y": return "-1200";

            // "Z", "UT" and "GMT"
            // is equivalent to "+0000"
            case "Z":
            case "UT":
            case "GMT":
                return "+0000";

            // US time zones
            case "EDT": return "-0400"; // EDT is semantically equivalent to -0400
            case "EST": return "-0500"; // EST is semantically equivalent to -0500
            case "CDT": return "-0500"; // CDT is semantically equivalent to -0500
            case "CST": return "-0600"; // CST is semantically equivalent to -0600
            case "MDT": return "-0600"; // MDT is semantically equivalent to -0600
            case "MST": return "-0700"; // MST is semantically equivalent to -0700
            case "PDT": return "-0700"; // PDT is semantically equivalent to -0700
            case "PST": return "-0800"; // PST is semantically equivalent to -0800

            default:
                throw new ArgumentException("Unexpected input");
        }
    }

    /// <summary>
    /// Extracts the date and time parts from the <paramref name="dateInput"/>
    /// </summary>
    /// <param name="dateInput">The date input string, from which to extract the date and time parts</param>
    /// <returns>The extracted date part or <see langword="DateTime.MinValue"/> if <paramref name="dateInput"/> is not recognized as a valid date.</returns>
    private static DateTime ExtractDateTime(string dateInput)
    {
        // Matches the date and time part of a string
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // Finds: 21 Nov 1997 09:55:06
        // Seconds does not need to be specified
        // Even though it is illigal, sometimes hours, minutes or seconds are only specified with one digit
        Match match = Regex.Match(dateInput, @"\d\d? .+ (\d\d\d\d|\d\d) \d?\d:\d?\d(:\d?\d)?");
        if (match.Success)
        {
            return Convert.ToDateTime(match.Value, CultureInfo.InvariantCulture);
        }

        //DefaultLogger.Log.LogError("The given date does not appear to be in a valid format: " + dateInput);
        return DateTime.MinValue;
    }

    /// <summary>
    /// Validates that the given <paramref name="dateTime"/> agrees with a day-name specified
    /// in <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The time to check</param>
    /// <param name="dateInput">The date input to extract the day-name from</param>
    /// <exception cref="ArgumentException">If <paramref name="dateTime"/> and <paramref name="dateInput"/> does not agree on the day</exception>
    private static void ValidateDayNameIfAny(DateTime dateTime, string dateInput)
    {
        // Check if there is a day name in front of the date
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        if (dateInput.Length >= 4 && dateInput[3] == ',')
        {
            string dayName = dateInput.Substring(0, 3);

            // If a dayName was specified. Check that the dateTime and the dayName
            // agrees on which day it is
            // This is just a failure-check and could be left out
            if ((dateTime.DayOfWeek == DayOfWeek.Monday && !dayName.Equals("Mon")) ||
                (dateTime.DayOfWeek == DayOfWeek.Tuesday && !dayName.Equals("Tue")) ||
                (dateTime.DayOfWeek == DayOfWeek.Wednesday && !dayName.Equals("Wed")) ||
                (dateTime.DayOfWeek == DayOfWeek.Thursday && !dayName.Equals("Thu")) ||
                (dateTime.DayOfWeek == DayOfWeek.Friday && !dayName.Equals("Fri")) ||
                (dateTime.DayOfWeek == DayOfWeek.Saturday && !dayName.Equals("Sat")) ||
                (dateTime.DayOfWeek == DayOfWeek.Sunday && !dayName.Equals("Sun")))
            {
                //DefaultLogger.Log.LogDebug("Day-name does not correspond to the weekday of the date: " + dateInput);
            }
        }

        // If no day name was found no checks can be made
    }

    /// <summary>
    /// Strips and removes all comments and excessive whitespace from the string
    /// </summary>
    /// <param name="input">The input to strip from</param>
    /// <returns>The stripped string</returns>
    private static string StripCommentsAndExcessWhitespace(string input)
    {
        // Strip out comments
        // Also strips out nested comments
        input = Regex.Replace(input, @"(\((?>\((?<C>)|\)(?<-C>)|.?)*(?(C)(?!))\))", "");

        // Reduce any whitespace character to one space only
        input = Regex.Replace(input, @"\s+", " ");

        // Remove all initial whitespace
        input = Regex.Replace(input, @"^\s+", "");

        // Remove all ending whitespace
        input = Regex.Replace(input, @"\s+$", "");

        // Remove spaces at colons
        // Example: 22: 33 : 44 => 22:33:44
        input = Regex.Replace(input, @" ?: ?", ":");

        return input;
    }
}

/// <summary>
/// Utility class for dealing with Base64 encoded strings
/// </summary>
internal static class Base64
{
    /// <summary>
    /// Decodes a base64 encoded string into the bytes it describes
    /// </summary>
    /// <param name="base64Encoded">The string to decode</param>
    /// <returns>A byte array that the base64 string described</returns>
    public static byte[] Decode(string base64Encoded)
    {
        try
        {
            return Convert.FromBase64String(base64Encoded);
        }
        catch //(FormatException e)
        {
            //DefaultLogger.Log.LogError("Base64: (FormatException) " + e.Message + "\r\nOn string: " + base64Encoded);
            throw;
        }
    }

    /// <summary>
    /// Decodes a Base64 encoded string using a specified <see cref="System.Text.Encoding"/> 
    /// </summary>
    /// <param name="base64Encoded">Source string to decode</param>
    /// <param name="encoding">The encoding to use for the decoded byte array that <paramref name="base64Encoded"/> describes</param>
    /// <returns>A decoded string</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="base64Encoded"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    /// <exception cref="FormatException">If <paramref name="base64Encoded"/> is not a valid base64 encoded string</exception>
    public static string Decode(string base64Encoded, Encoding encoding)
    {
        if (base64Encoded == null)
            throw new ArgumentNullException("base64Encoded");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        return encoding.GetString(Decode(base64Encoded));
    }
}

/// <summary>
/// Used for decoding Quoted-Printable text.<br/>
/// This is a robust implementation of a Quoted-Printable decoder defined in <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a> and <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
/// Every measurement has been taken to conform to the RFC.
/// </summary>
internal static class QuotedPrintable
{
    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
    /// RFC 2047 is used for decoding Encoded-Word encoded strings.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <param name="encoding">Specifies which encoding the returned string will be in</param>
    /// <returns>A decoded string in the correct encoding</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    public static string DecodeEncodedWord(string toDecode, Encoding encoding)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Decode the QuotedPrintable string and return it
        return encoding.GetString(Rfc2047QuotedPrintableDecode(toDecode, true));
    }

    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a>.<br/>
    /// RFC 2045 specifies the decoding of a body encoded with Content-Transfer-Encoding of quoted-printable.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <returns>A decoded byte array that the Quoted-Printable encoded string described</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static byte[] DecodeContentTransferEncoding(string toDecode)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Decode the QuotedPrintable string and return it
        return Rfc2047QuotedPrintableDecode(toDecode, false);
    }

    /// <summary>
    /// This is the actual decoder.
    /// </summary>
    /// <param name="toDecode">The string to be decoded from Quoted-Printable</param>
    /// <param name="encodedWordVariant">
    /// If <see langword="true"/>, specifies that RFC 2047 quoted printable decoding is used.<br/>
    /// This is for quoted-printable encoded words<br/>
    /// <br/>
    /// If <see langword="false"/>, specifies that RFC 2045 quoted printable decoding is used.<br/>
    /// This is for quoted-printable Content-Transfer-Encoding
    /// </param>
    /// <returns>A decoded byte array that was described by <paramref name="toDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-4.2">RFC 2047 section 4.2</a> for RFC details</remarks>
    private static byte[] Rfc2047QuotedPrintableDecode(string toDecode, bool encodedWordVariant)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Create a byte array builder which is roughly equivalent to a StringBuilder
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            // Remove illegal control characters
            toDecode = RemoveIllegalControlCharacters(toDecode);

            // Run through the whole string that needs to be decoded
            for (int i = 0; i < toDecode.Length; i++)
            {
                char currentChar = toDecode[i];
                if (currentChar == '=')
                {
                    // Check that there is at least two characters behind the equal sign
                    if (toDecode.Length - i < 3)
                    {
                        // We are at the end of the toDecode string, but something is missing. Handle it the way RFC 2045 states
                        WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSignNotLongEnough(toDecode.Substring(i)));

                        // Since it was the last part, we should stop parsing anymore
                        break;
                    }

                    // Decode the Quoted-Printable part
                    string quotedPrintablePart = toDecode.Substring(i, 3);
                    WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSign(quotedPrintablePart));

                    // We now consumed two extra characters. Go forward two extra characters
                    i += 2;
                }
                else
                {
                    // This character is not quoted printable hex encoded.

                    // Could it be the _ character, which represents space
                    // and are we using the encoded word variant of QuotedPrintable
                    if (currentChar == '_' && encodedWordVariant)
                    {
                        // The RFC specifies that the "_" always represents hexadecimal 20 even if the
                        // SPACE character occupies a different code position in the character set in use.
                        byteArrayBuilder.WriteByte(0x20);
                    }
                    else
                    {
                        // This is not encoded at all. This is a literal which should just be included into the output.
                        byteArrayBuilder.WriteByte((byte)currentChar);
                    }
                }
            }

            return byteArrayBuilder.ToArray();
        }
    }

    /// <summary>
    /// Writes all bytes in a byte array to a stream
    /// </summary>
    /// <param name="stream">The stream to write to</param>
    /// <param name="toWrite">The bytes to write to the <paramref name="stream"/></param>
    private static void WriteAllBytesToStream(Stream stream, byte[] toWrite)
    {
        stream.Write(toWrite, 0, toWrite.Length);
    }

    /// <summary>
    /// RFC 2045 states about robustness:<br/>
    /// <code>
    /// Control characters other than TAB, or CR and LF as parts of CRLF pairs,
    /// must not appear. The same is true for octets with decimal values greater
    /// than 126.  If found in incoming quoted-printable data by a decoder, a
    /// robust implementation might exclude them from the decoded data and warn
    /// the user that illegal characters were discovered.
    /// </code>
    /// Control characters are defined in RFC 2396 as<br/>
    /// <c>control = US-ASCII coded characters 00-1F and 7F hexadecimal</c>
    /// </summary>
    /// <param name="input">String to be stripped from illegal control characters</param>
    /// <returns>A string with no illegal control characters</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveIllegalControlCharacters(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // First we remove any \r or \n which is not part of a \r\n pair
        input = RemoveCarriageReturnAndNewLinewIfNotInPair(input);

        // Here only legal \r\n is left over
        // We now simply keep them, and the \t which is also allowed
        // \x0A = \n
        // \x0D = \r
        // \x09 = \t)
        return Regex.Replace(input, "[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]", "");
    }

    /// <summary>
    /// This method will remove any \r and \n which is not paired as \r\n
    /// </summary>
    /// <param name="input">String to remove lonely \r and \n's from</param>
    /// <returns>A string without lonely \r and \n's</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveCarriageReturnAndNewLinewIfNotInPair(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Use this for building up the new string. This is used for performance instead
        // of altering the input string each time a illegal token is found
        StringBuilder newString = new StringBuilder(input.Length);

        for (int i = 0; i < input.Length; i++)
        {
            // There is a character after it
            // Check for lonely \r
            // There is a lonely \r if it is the last character in the input or if there
            // is no \n following it
            if (input[i] == '\r' && (i + 1 >= input.Length || input[i + 1] != '\n'))
            {
                // Illegal token \r found. Do not add it to the new string

                // Check for lonely \n
                // There is a lonely \n if \n is the first character or if there
                // is no \r in front of it
            }
            else if (input[i] == '\n' && (i - 1 < 0 || input[i - 1] != '\r'))
            {
                // Illegal token \n found. Do not add it to the new string
            }
            else
            {
                // No illegal tokens found. Simply insert the character we are at
                // in our new string
                newString.Append(input[i]);
            }
        }

        return newString.ToString();
    }

    /// <summary>
    /// RFC 2045 says that a robust implementation should handle:<br/>
    /// <code>
    /// An "=" cannot be the ultimate or penultimate character in an encoded
    /// object. This could be handled as in case (2) above.
    /// </code>
    /// Case (2) is:<br/>
    /// <code>
    /// An "=" followed by a character that is neither a
    /// hexadecimal digit (including "abcdef") nor the CR character of a CRLF pair
    /// is illegal.  This case can be the result of US-ASCII text having been
    /// included in a quoted-printable part of a message without itself having
    /// been subjected to quoted-printable encoding.  A reasonable approach by a
    /// robust implementation might be to include the "=" character and the
    /// following character in the decoded data without any transformation and, if
    /// possible, indicate to the user that proper decoding was not possible at
    /// this point in the data.
    /// </code>
    /// </summary>
    /// <param name="decode">
    /// The string to decode which cannot have length above or equal to 3
    /// and must start with an equal sign.
    /// </param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter has length above 2 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSignNotLongEnough(string decode)
    {
        if (decode == null)
            throw new ArgumentNullException("decode");

        // We can only decode wrong length equal signs
        if (decode.Length >= 3)
            throw new ArgumentException("decode must have length lower than 3", "decode");

        // First char must be =
        if (decode[0] != '=')
            throw new ArgumentException("First part of decode must be an equal sign", "decode");

        // We will now believe that the string sent to us, was actually not encoded
        // Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
        return Encoding.ASCII.GetBytes(decode);
    }

    /// <summary>
    /// This helper method will decode a string of the form "=XX" where X is any character.<br/>
    /// This method will never fail, unless an argument of length not equal to three is passed.
    /// </summary>
    /// <param name="decode">The length 3 character that needs to be decoded</param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter does not have length 3 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSign(string decode)
		{
			if (decode == null)
				throw new ArgumentNullException("decode");

			// We can only decode the string if it has length 3 - other calls to this function is invalid
			if (decode.Length != 3)
				throw new ArgumentException("decode must have length 3", "decode");

			// First char must be =
			if (decode[0] != '=')
				throw new ArgumentException("decode must start with an equal sign", "decode");

			// There are two cases where an equal sign might appear
			// It might be a
			//   - hex-string like =3D, denoting the character with hex value 3D
			//   - it might be the last character on the line before a CRLF
			//     pair, denoting a soft linebreak, which simply
			//     splits the text up, because of the 76 chars per line restriction
			if (decode.Contains("\r\n"))
			{
				// Soft break detected
				// We want to return string.Empty which is equivalent to a zero-length byte array
				return new byte[0]; 
			}

			// Hex string detected. Convertion needed.
			// It might be that the string located after the equal sign is not hex characters
			// An example: =JU
			// In that case we would like to catch the FormatException and do something else
			try
			{
				// The number part of the string is the last two digits. Here we simply remove the equal sign
				string numberString = decode.Substring(1);

				// Now we create a byte array with the converted number encoded in the string as a hex value (base 16)
				// This will also handle illegal encodings like =3d where the hex digits are not uppercase,
				// which is a robustness requirement from RFC 2045.
				byte[] oneByte = { Convert.ToByte(numberString, 16) };

				// Simply return our one byte byte array
				return oneByte;
			} catch (FormatException)
			{
				// RFC 2045 says about robust implementation:
				// An "=" followed by a character that is neither a
				// hexadecimal digit (including "abcdef") nor the CR
				// character of a CRLF pair is illegal.  This case can be
				// the result of US-ASCII text having been included in a
				// quoted-printable part of a message without itself
				// having been subjected to quoted-printable encoding.  A
				// reasonable approach by a robust implementation might be
				// to include the "=" character and the following
				// character in the decoded data without any
				// transformation and, if possible, indicate to the user
				// that proper decoding was not possible at this point in
				// the data.

				// So we choose to believe this is actually an un-encoded string
				// Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
				return Encoding.ASCII.GetBytes(decode);
			}
		}
}

///<summary>
/// Utility class that divides a message into a body and a header.<br/>
/// The header is then parsed to a strongly typed <see cref="MessageHeader"/> object.
///</summary>
internal static class HeaderExtractor
{
    /// <summary>
    /// Find the end of the header section in a byte array.<br/>
    /// The headers have ended when a blank line is found
    /// </summary>
    /// <param name="messageContent">The full message stored as a byte array</param>
    /// <returns>The position of the line just after the header end blank line</returns>
    private static int FindHeaderEndPosition(byte[] messageContent)
    {
        // Convert the byte array into a stream
        using (Stream stream = new MemoryStream(messageContent))
        {
            while (true)
            {
                // Read a line from the stream. We know headers are in US-ASCII
                // therefore it is not problem to read them as such
                string line = StreamUtility.ReadLineAsAscii(stream);

                // The end of headers is signaled when a blank line is found
                // or if the line is null - in which case the email is actually an email with
                // only headers but no body
                if (string.IsNullOrEmpty(line))
                    return (int)stream.Position;
            }
        }
    }

    /// <summary>
    /// Extract the header part and body part of a message.<br/>
    /// The headers are then parsed to a strongly typed <see cref="MessageHeader"/> object.
    /// </summary>
    /// <param name="fullRawMessage">The full message in bytes where header and body needs to be extracted from</param>
    /// <param name="headers">The extracted header parts of the message</param>
    /// <param name="body">The body part of the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="fullRawMessage"/> is <see langword="null"/></exception>
    public static void ExtractHeadersAndBody(byte[] fullRawMessage, out MessageHeader headers, out byte[] body)
    {
        if (fullRawMessage == null)
            throw new ArgumentNullException("fullRawMessage");

        // Find the end location of the headers
        int endOfHeaderLocation = FindHeaderEndPosition(fullRawMessage);

        // The headers are always in ASCII - therefore we can convert the header part into a string
        // using US-ASCII encoding
        string headersString = Encoding.ASCII.GetString(fullRawMessage, 0, endOfHeaderLocation);

        // Now parse the headers to a NameValueCollection
        NameValueCollection headersUnparsedCollection = ExtractHeaders(headersString);

        // Use the NameValueCollection to parse it into a strongly-typed MessageHeader header
        headers = new MessageHeader(headersUnparsedCollection);

        // Since we know where the headers end, we also know where the body is
        // Copy the body part into the body parameter
        body = new byte[fullRawMessage.Length - endOfHeaderLocation];
        Array.Copy(fullRawMessage, endOfHeaderLocation, body, 0, body.Length);
    }

    /// <summary>
    /// Method that takes a full message and extract the headers from it.
    /// </summary>
    /// <param name="messageContent">The message to extract headers from. Does not need the body part. Needs the empty headers end line.</param>
    /// <returns>A collection of Name and Value pairs of headers</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageContent"/> is <see langword="null"/></exception>
    private static NameValueCollection ExtractHeaders(string messageContent)
    {
        if (messageContent == null)
            throw new ArgumentNullException("messageContent");

        NameValueCollection headers = new NameValueCollection();

        using (StringReader messageReader = new StringReader(messageContent))
        {
            // Read until all headers have ended.
            // The headers ends when an empty line is encountered
            // An empty message might actually not have an empty line, in which
            // case the headers end with null value.
            string line;
            while (!string.IsNullOrEmpty(line = messageReader.ReadLine()))
            {
                // Split into name and value
                KeyValuePair<string, string> header = SeparateHeaderNameAndValue(line);

                // First index is header name
                string headerName = header.Key;

                // Second index is the header value.
                // Use a StringBuilder since the header value may be continued on the next line
                StringBuilder headerValue = new StringBuilder(header.Value);

                // Keep reading until we would hit next header
                // This if for handling multi line headers
                while (IsMoreLinesInHeaderValue(messageReader))
                {
                    // Unfolding is accomplished by simply removing any CRLF
                    // that is immediately followed by WSP
                    // This was done using ReadLine (it discards CRLF)
                    // See http://tools.ietf.org/html/rfc822#section-3.1.1 for more information
                    string moreHeaderValue = messageReader.ReadLine();

                    // If this exception is ever raised, there is an serious algorithm failure
                    // IsMoreLinesInHeaderValue does not return true if the next line does not exist
                    // This check is only included to stop the nagging "possibly null" code analysis hint
                    if (moreHeaderValue == null)
                        throw new ArgumentException("This will never happen");

                    // Simply append the line just read to the header value
                    headerValue.Append(moreHeaderValue);
                }

                // Now we have the name and full value. Add it
                headers.Add(headerName, headerValue.ToString());
            }
        }

        return headers;
    }

    /// <summary>
    /// Check if the next line is part of the current header value we are parsing by
    /// peeking on the next character of the <see cref="TextReader"/>.<br/>
    /// This should only be called while parsing headers.
    /// </summary>
    /// <param name="reader">The reader from which the header is read from</param>
    /// <returns><see langword="true"/> if multi-line header. <see langword="false"/> otherwise</returns>
    private static bool IsMoreLinesInHeaderValue(TextReader reader)
    {
        int peek = reader.Peek();
        if (peek == -1)
            return false;

        char peekChar = (char)peek;

        // A multi line header must have a whitespace character
        // on the next line if it is to be continued
        return peekChar == ' ' || peekChar == '\t';
    }

    /// <summary>
    /// Separate a full header line into a header name and a header value.
    /// </summary>
    /// <param name="rawHeader">The raw header line to be separated</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawHeader"/> is <see langword="null"/></exception>
    internal static KeyValuePair<string, string> SeparateHeaderNameAndValue(string rawHeader)
    {
        if (rawHeader == null)
            throw new ArgumentNullException("rawHeader");

        string key = string.Empty;
        string value = string.Empty;

        int indexOfColon = rawHeader.IndexOf(':');

        // Check if it is allowed to make substring calls
        if (indexOfColon >= 0 && rawHeader.Length >= indexOfColon + 1)
        {
            key = rawHeader.Substring(0, indexOfColon).Trim();
            value = rawHeader.Substring(indexOfColon + 1).Trim();
        }

        return new KeyValuePair<string, string>(key, value);
    }
}

/// <summary>
/// Utility class used by OpenPop for mapping from a characterSet to an <see cref="Encoding"/>.<br/>
/// <br/>
/// The functionality of the class can be altered by adding mappings
/// using <see cref="AddMapping"/> and by adding a <see cref="FallbackDecoder"/>.<br/>
/// <br/>
/// Given a characterSet, it will try to find the Encoding as follows:
/// <list type="number">
///     <item>
///         <description>If a mapping for the characterSet was added, use the specified Encoding from there. Mappings can be added using <see cref="AddMapping"/>.</description>
///     </item>
///     <item>
///         <description>Try to parse the characterSet and look it up using <see cref="Encoding.GetEncoding(int)"/> for codepages or <see cref="Encoding.GetEncoding(string)"/> for named encodings.</description>
///     </item>
///     <item>
///         <description>If an encoding is not found yet, use the <see cref="FallbackDecoder"/> if defined. The <see cref="FallbackDecoder"/> is user defined.</description>
///     </item>
/// </list>
/// </summary>
public static class EncodingFinder
{
    /// <summary>
    /// Delegate that is used when the EncodingFinder is unable to find an encoding by
    /// using the <see cref="EncodingFinder.EncodingMap"/> or general code.<br/>
    /// This is used as a last resort and can be used for setting a default encoding or
    /// for finding an encoding on runtime for some <paramref name="characterSet"/>.
    /// </summary>
    /// <param name="characterSet">The character set to find an encoding for.</param>
    /// <returns>An encoding for the <paramref name="characterSet"/> or <see langword="null"/> if none could be found.</returns>
    public delegate Encoding FallbackDecoderDelegate(string characterSet);

    /// <summary>
    /// Last resort decoder. <seealso cref="FallbackDecoderDelegate"/>.
    /// </summary>
    public static FallbackDecoderDelegate FallbackDecoder { private get { return _fallbackDecoder; } set { _fallbackDecoder = value; } }
    private static FallbackDecoderDelegate _fallbackDecoder;

    /// <summary>
    /// Mapping from charactersets to encodings.
    /// </summary>
    private static Dictionary<string, Encoding> EncodingMap { get { return _encodingMap; } set { _encodingMap = value; } }
    private static Dictionary<string, Encoding> _encodingMap;

    /// <summary>
    /// Initialize the EncodingFinder
    /// </summary>
    static EncodingFinder()
    {
        Reset();
    }

    /// <summary>
    /// Used to reset this static class to facilite isolated unit testing.
    /// </summary>
    internal static void Reset()
    {
        EncodingMap = new Dictionary<string, Encoding>();
        FallbackDecoder = null;

        // Some emails incorrectly specify the encoding as utf8, but it should have been utf-8.
        AddMapping("utf8", Encoding.UTF8);
    }

    /// <summary>
    /// Parses a character set into an encoding.
    /// </summary>
    /// <param name="characterSet">The character set to parse</param>
    /// <returns>An encoding which corresponds to the character set</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    internal static Encoding FindEncoding(string characterSet)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        string charSetUpper = characterSet.ToUpperInvariant();

        // Check if the characterSet is explicitly mapped to an encoding
        if (EncodingMap.ContainsKey(charSetUpper))
            return EncodingMap[charSetUpper];

        // Try to find the generally find the encoding
        try
        {
            if (charSetUpper.Contains("WINDOWS") || charSetUpper.Contains("CP"))
            {
                // It seems the characterSet contains an codepage value, which we should use to parse the encoding
                charSetUpper = charSetUpper.Replace("CP", ""); // Remove cp
                charSetUpper = charSetUpper.Replace("WINDOWS", ""); // Remove windows
                charSetUpper = charSetUpper.Replace("-", ""); // Remove - which could be used as cp-1554

                // Now we hope the only thing left in the characterSet is numbers.
                int codepageNumber = int.Parse(charSetUpper, CultureInfo.InvariantCulture);

                return Encoding.GetEncoding(codepageNumber);
            }

            // It seems there is no codepage value in the characterSet. It must be a named encoding
            return Encoding.GetEncoding(characterSet);
        }
        catch (ArgumentException)
        {
            // The encoding could not be found generally. 
            // Try to use the FallbackDecoder if it is defined.

            // Check if it is defined
            if (FallbackDecoder == null)
                throw; // It was not defined - throw catched exception

            // Use the FallbackDecoder
            Encoding fallbackDecoderResult = FallbackDecoder(characterSet);

            // Check if the FallbackDecoder had a solution
            if (fallbackDecoderResult != null)
                return fallbackDecoderResult;

            // If no solution was found, throw catched exception
            throw;
        }
    }

    /// <summary>
    /// Puts a mapping from <paramref name="characterSet"/> to <paramref name="encoding"/>
    /// into the <see cref="EncodingFinder"/>'s internal mapping Dictionary.
    /// </summary>
    /// <param name="characterSet">The string that maps to the <paramref name="encoding"/></param>
    /// <param name="encoding">The <see cref="Encoding"/> that should be mapped from <paramref name="characterSet"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    public static void AddMapping(string characterSet, Encoding encoding)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Add the mapping using uppercase
        EncodingMap.Add(characterSet.ToUpperInvariant(), encoding);
    }
}

/// <summary>
/// A MessagePart is a part of an email message used to describe the whole email parse tree.<br/>
/// <br/>
/// <b>Email messages are tree structures</b>:<br/>
/// Email messages may contain large tree structures, and the MessagePart are the nodes of the this structure.<br/>
/// A MessagePart may either be a leaf in the structure or a internal node with links to other MessageParts.<br/>
/// The root of the message tree is the <see cref="Message"/> class.<br/>
/// <br/>
/// <b>Leafs</b>:<br/>
/// If a MessagePart is a leaf, the part is not a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// Leafs are where the contents of an email are placed.<br/>
/// This includes, but is not limited to: attachments, text or images referenced from HTML.<br/>
/// The content of an attachment can be fetched by using the <see cref="Body"/> property.<br/>
/// If you want to have the text version of a MessagePart, use the <see cref="GetBodyAsText"/> method which will<br/>
/// convert the <see cref="Body"/> into a string using the encoding the message was sent with.<br/>
/// <br/>
/// <b>Internal nodes</b>:<br/>
/// If a MessagePart is an internal node in the email tree structure, then the part is a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// The <see cref="MessageParts"/> property will then contain links to the parts it contain.<br/>
/// The <see cref="Body"/> property of the MessagePart will not be set.<br/>
/// <br/>
/// See the example for a parsing example.<br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <example>
/// This example illustrates how the message parse tree looks like given a specific message<br/>
/// <br/>
/// The message source in this example is:<br/>
/// <code>
/// MIME-Version: 1.0
///	Content-Type: multipart/mixed; boundary="frontier"
///	
///	This is a message with multiple parts in MIME format.
///	--frontier
/// Content-Type: text/plain
///	
///	This is the body of the message.
///	--frontier
///	Content-Type: application/octet-stream
///	Content-Transfer-Encoding: base64
///	
///	PGh0bWw+CiAgPGHLYWQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPHA+VGhpcyBpcyB0aGUg
///	Ym9keSBvZiB0aGUgbWVzc2FnZS48L3A+CiAgPC9ib2R5Pgo8L2h0bWw+Cg==
///	--frontier--
/// </code>
/// The tree will look as follows, where the content-type media type of the message is listed<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - application/octet-stream MessagePart
/// </code>
/// It is possible to have more complex message trees like the following:<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - text/plain MessagePart
///     - multipart/parallel
///       - audio/basic
///       - image/tiff
///     - text/enriched
///     - message/rfc822
/// </code>
/// But it is also possible to have very simple message trees like:<br/>
/// <code>
/// - Message root
///   - text/plain
/// </code>
/// </example>
public class MessagePart
{
    #region Public properties
    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// <br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.<br/>
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDisposition; } private set { _contentDisposition = value; } }
    private ContentDisposition _contentDisposition;

    /// <summary>
    /// This is the encoding used to parse the message body if the <see cref="MessagePart"/><br/>
    /// is not a MultiPart message. It is derived from the <see cref="ContentType"/> character set property.
    /// </summary>
    public Encoding BodyEncoding { get { return _bodyEncoding; } private set { _bodyEncoding = value; } }
    private Encoding _bodyEncoding;

    /// <summary>
    /// This is the parsed body of this <see cref="MessagePart"/>.<br/>
    /// It is parsed in that way, if the body was ContentTransferEncoded, it has been decoded to the
    /// correct bytes.<br/>
    /// <br/>
    /// It will be <see langword="null"/> if this <see cref="MessagePart"/> is a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public byte[] Body { get { return _body; } private set { _body = value; } }
    private byte[] _body;

    /// <summary>
    /// Describes if this <see cref="MessagePart"/> is a MultiPart message<br/>
    /// <br/>
    /// The <see cref="MessagePart"/> is a MultiPart message if the <see cref="ContentType"/> media type property starts with "multipart/"
    /// </summary>
    public bool IsMultiPart
    {
        get
        {
            return ContentType.MediaType.StartsWith("multipart/", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be holding text in it's body if the MediaType
    /// starts either "text/" or is equal to "message/rfc822"
    /// </summary>
    public bool IsText
    {
        get
        {
            string mediaType = ContentType.MediaType;
            return mediaType.StartsWith("text/", StringComparison.OrdinalIgnoreCase) || mediaType.Equals("message/rfc822", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be an attachment, if<br/>
    /// - it is not holding <see cref="IsText">text</see> and is not a <see cref="IsMultiPart">MultiPart</see> message<br/>
    /// or<br/>
    /// - it has a Content-Disposition header that says it is an attachment
    /// </summary>
    public bool IsAttachment
    {
        get
        {
            // Inline is the opposite of attachment
            return (!IsText && !IsMultiPart) || (ContentDisposition != null && !ContentDisposition.Inline);
        }
    }

    /// <summary>
    /// This is a convenient-property for figuring out a FileName for this <see cref="MessagePart"/>.<br/>
    /// If the <see cref="MessagePart"/> is a MultiPart message, then it makes no sense to try to find a FileName.<br/>
    /// <br/>
    /// The FileName can be specified in the <see cref="ContentDisposition"/> or in the <see cref="ContentType"/> properties.<br/>
    /// If none of these places two places tells about the FileName, a default "(no name)" is returned.
    /// </summary>
    public string FileName { get { return _fileName; } private set { _fileName = value; } }
    private string _fileName;

    /// <summary>
    /// If this <see cref="MessagePart"/> is a MultiPart message, then this property
    /// has a list of each of the Multiple parts that the message consists of.<br/>
    /// <br/>
    /// It is <see langword="null"/> if it is not a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public List<MessagePart> MessageParts { get { return _messageParts; } private set { _messageParts = value; } }
    private List<MessagePart> _messageParts;
    #endregion

    #region Constructors
    /// <summary>
    /// Used to construct the topmost message part
    /// </summary>
    /// <param name="rawBody">The body that needs to be parsed</param>
    /// <param name="headers">The headers that should be used from the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawBody"/> or <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessagePart(byte[] rawBody, MessageHeader headers)
    {
        if (rawBody == null)
            throw new ArgumentNullException("rawBody");

        if (headers == null)
            throw new ArgumentNullException("headers");

        ContentType = headers.ContentType;
        ContentDescription = headers.ContentDescription;
        ContentTransferEncoding = headers.ContentTransferEncoding;
        ContentId = headers.ContentId;
        ContentDisposition = headers.ContentDisposition;

        FileName = FindFileName(ContentType, ContentDisposition, "(no name)");
        BodyEncoding = ParseBodyEncoding(ContentType.CharSet);

        ParseBody(rawBody);
    }
    #endregion

    #region Parsing
    /// <summary>
    /// Parses a character set into an encoding
    /// </summary>
    /// <param name="characterSet">The character set that needs to be parsed. <see langword="null"/> is allowed.</param>
    /// <returns>The encoding specified by the <paramref name="characterSet"/> parameter, or ASCII if the character set was <see langword="null"/> or empty</returns>
    private static Encoding ParseBodyEncoding(string characterSet)
    {
        // Default encoding in Mime messages is US-ASCII
        Encoding encoding = Encoding.ASCII;

        // If the character set was specified, find the encoding that the character
        // set describes, and use that one instead
        if (!string.IsNullOrEmpty(characterSet))
            encoding = EncodingFinder.FindEncoding(characterSet);

        return encoding;
    }

    /// <summary>
    /// Figures out the filename of this message part from some headers.
    /// <see cref="FileName"/> property.
    /// </summary>
    /// <param name="contentType">The Content-Type header</param>
    /// <param name="contentDisposition">The Content-Disposition header</param>
    /// <param name="defaultName">The default filename to use, if no other could be found</param>
    /// <returns>The filename found, or the default one if not such filename could be found in the headers</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="contentType"/> is <see langword="null"/></exception>
    private static string FindFileName(ContentType contentType, ContentDisposition contentDisposition, string defaultName)
    {
        if (contentType == null)
            throw new ArgumentNullException("contentType");

        if (contentDisposition != null && contentDisposition.FileName != null)
            return contentDisposition.FileName;

        if (contentType.Name != null)
            return contentType.Name;

        return defaultName;
    }

    /// <summary>
    /// Parses a byte array as a body of an email message.
    /// </summary>
    /// <param name="rawBody">The byte array to parse as body of an email message. This array may not contain headers.</param>
    private void ParseBody(byte[] rawBody)
    {
        if (IsMultiPart)
        {
            // Parses a MultiPart message
            ParseMultiPartBody(rawBody);
        }
        else
        {
            // Parses a non MultiPart message
            // Decode the body accodingly and set the Body property
            Body = DecodeBody(rawBody, ContentTransferEncoding);
        }
    }

    /// <summary>
    /// Parses the <paramref name="rawBody"/> byte array as a MultiPart message.<br/>
    /// It is not valid to call this method if <see cref="IsMultiPart"/> returned <see langword="false"/>.<br/>
    /// Fills the <see cref="MessageParts"/> property of this <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawBody">The byte array which is to be parsed as a MultiPart message</param>
    private void ParseMultiPartBody(byte[] rawBody)
    {
        // Fetch out the boundary used to delimit the messages within the body
        string multipartBoundary = ContentType.Boundary;

        // Fetch the individual MultiPart message parts using the MultiPart boundary
        List<byte[]> bodyParts = GetMultiPartParts(rawBody, multipartBoundary);

        // Initialize the MessageParts property, with room to as many bodies as we have found
        MessageParts = new List<MessagePart>(bodyParts.Count);

        // Now parse each byte array as a message body and add it the the MessageParts property
        foreach (byte[] bodyPart in bodyParts)
        {
            MessagePart messagePart = GetMessagePart(bodyPart);
            MessageParts.Add(messagePart);
        }
    }

    /// <summary>
    /// Given a byte array describing a full message.<br/>
    /// Parses the byte array into a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawMessageContent">The byte array containing both headers and body of a message</param>
    /// <returns>A <see cref="MessagePart"/> which was described by the <paramref name="rawMessageContent"/> byte array</returns>
    private static MessagePart GetMessagePart(byte[] rawMessageContent)
    {
        // Find the headers and the body parts of the byte array
        MessageHeader headers;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headers, out body);

        // Create a new MessagePart from the headers and the body
        return new MessagePart(body, headers);
    }

    /// <summary>
    /// Gets a list of byte arrays where each entry in the list is a full message of a message part
    /// </summary>
    /// <param name="rawBody">The raw byte array describing the body of a message which is a MultiPart message</param>
    /// <param name="multipPartBoundary">The delimiter that splits the different MultiPart bodies from each other</param>
    /// <returns>A list of byte arrays, each a full message of a <see cref="MessagePart"/></returns>
    private static List<byte[]> GetMultiPartParts(byte[] rawBody, string multipPartBoundary)
    {
        // This is the list we want to return
        List<byte[]> messageBodies = new List<byte[]>();

        // Create a stream from which we can find MultiPart boundaries
        using (MemoryStream stream = new MemoryStream(rawBody))
        {
            bool lastMultipartBoundaryEncountered;

            // Find the start of the first message in this multipart
            // Since the method returns the first character on a the line containing the MultiPart boundary, we
            // need to add the MultiPart boundary with prepended "--" and appended CRLF pair to the position returned.
            int startLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) + ("--" + multipPartBoundary + "\r\n").Length;
            while (true)
            {
                // When we have just parsed the last multipart entry, stop parsing on
                if (lastMultipartBoundaryEncountered)
                    break;

                // Find the end location of the current multipart
                // Since the method returns the first character on a the line containing the MultiPart boundary, we
                // need to go a CRLF pair back, so that we do not get that into the body of the message part
                int stopLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) - "\r\n".Length;

                // If we could not find the next multipart boundary, but we had not yet discovered the last boundary, then
                // we will consider the rest of the bytes as contained in a last message part.
                if (stopLocation <= -1)
                {
                    // Include everything except the last CRLF.
                    stopLocation = (int)stream.Length - "\r\n".Length;

                    // We consider this as the last part
                    lastMultipartBoundaryEncountered = true;

                    // Special case: when the last multipart delimiter is not ending with "--", but is indeed the last
                    // one, then the next multipart would contain nothing, and we should not include such one.
                    if (startLocation >= stopLocation)
                        break;
                }

                // We have now found the start and end of a message part
                // Now we create a byte array with the correct length and put the message part's bytes into
                // it and add it to our list we want to return
                int length = stopLocation - startLocation;
                byte[] messageBody = new byte[length];
                Array.Copy(rawBody, startLocation, messageBody, 0, length);
                messageBodies.Add(messageBody);

                // We want to advance to the next message parts start.
                // We can find this by jumping forward the MultiPart boundary from the last
                // message parts end position
                startLocation = stopLocation + ("\r\n" + "--" + multipPartBoundary + "\r\n").Length;
            }
        }

        // We are done
        return messageBodies;
    }

    /// <summary>
    /// Method that is able to find a specific MultiPart boundary in a Stream.<br/>
    /// The Stream passed should not be used for anything else then for looking for MultiPart boundaries
    /// <param name="stream">The stream to find the next MultiPart boundary in. Do not use it for anything else then with this method.</param>
    /// <param name="multiPartBoundary">The MultiPart boundary to look for. This should be found in the <see cref="ContentType"/> header</param>
    /// <param name="lastMultipartBoundaryFound">Is set to <see langword="true"/> if the next MultiPart boundary was indicated to be the last one, by having -- appended to it. Otherwise set to <see langword="false"/></param>
    /// </summary>
    /// <returns>The position of the first character of the line that contained MultiPartBoundary or -1 if no (more) MultiPart boundaries was found</returns>
    private static int FindPositionOfNextMultiPartBoundary(Stream stream, string multiPartBoundary, out bool lastMultipartBoundaryFound)
    {
        lastMultipartBoundaryFound = false;
        while (true)
        {
            // Get the current position. This is the first position on the line - no characters of the line will
            // have been read yet
            int currentPos = (int)stream.Position;

            // Read the line
            string line = StreamUtility.ReadLineAsAscii(stream);

            // If we kept reading until there was no more lines, we did not meet
            // the MultiPart boundary. -1 is then returned to describe this.
            if (line == null)
                return -1;

            // The MultiPart boundary is the MultiPartBoundary with "--" in front of it
            // which is to be at the very start of a line
            if (line.StartsWith("--" + multiPartBoundary, StringComparison.Ordinal))
            {
                // Check if the found boundary was also the last one
                lastMultipartBoundaryFound = line.StartsWith("--" + multiPartBoundary + "--", StringComparison.OrdinalIgnoreCase);
                return currentPos;
            }
        }
    }

    /// <summary>
    /// Decodes a byte array into another byte array based upon the Content Transfer encoding
    /// </summary>
    /// <param name="messageBody">The byte array to decode into another byte array</param>
    /// <param name="contentTransferEncoding">The <see cref="ContentTransferEncoding"/> of the byte array</param>
    /// <returns>A byte array which comes from the <paramref name="contentTransferEncoding"/> being used on the <paramref name="messageBody"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageBody"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">Thrown if the <paramref name="contentTransferEncoding"/> is unsupported</exception>
    private static byte[] DecodeBody(byte[] messageBody, ContentTransferEncoding contentTransferEncoding)
    {
        if (messageBody == null)
            throw new ArgumentNullException("messageBody");

        switch (contentTransferEncoding)
        {
            case ContentTransferEncoding.QuotedPrintable:
                // If encoded in QuotedPrintable, everything in the body is in US-ASCII
                return QuotedPrintable.DecodeContentTransferEncoding(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.Base64:
                // If encoded in Base64, everything in the body is in US-ASCII
                return Base64.Decode(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.SevenBit:
            case ContentTransferEncoding.Binary:
            case ContentTransferEncoding.EightBit:
                // We do not have to do anything
                return messageBody;

            default:
                throw new ArgumentOutOfRangeException("contentTransferEncoding");
        }
    }
    #endregion

    #region Public methods
    /// <summary>
    /// Gets this MessagePart's <see cref="Body"/> as text.<br/>
    /// This is simply the <see cref="BodyEncoding"/> being used on the raw bytes of the <see cref="Body"/> property.<br/>
    /// This method is only valid to call if it is not a MultiPart message and therefore contains a body.<br/>
    /// </summary>
    /// <returns>The <see cref="Body"/> property as a string</returns>
    public string GetBodyAsText()
    {
        return BodyEncoding.GetString(Body);
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a file.<br/>
    /// There are no methods to reload the file.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="MessagePart"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(Body, 0, Body.Length);
    }
    #endregion
}

/// <summary>
/// <see cref="Enum"/> that describes the ContentTransferEncoding header field
/// </summary>
/// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for more details</remarks>
public enum ContentTransferEncoding
{
    /// <summary>
    /// 7 bit Encoding
    /// </summary>
    SevenBit,

    /// <summary>
    /// 8 bit Encoding
    /// </summary>
    EightBit,

    /// <summary>
    /// Quoted Printable Encoding
    /// </summary>
    QuotedPrintable,

    /// <summary>
    /// Base64 Encoding
    /// </summary>
    Base64,

    /// <summary>
    /// Binary Encoding
    /// </summary>
    Binary
}

/// <summary>
/// Class that hold information about one "Received:" header line.
/// 
/// Visit these RFCs for more information:
/// <see href="http://tools.ietf.org/html/rfc5321#section-4.4">RFC 5321 section 4.4</see>
/// <see href="http://tools.ietf.org/html/rfc4021#section-3.6.7">RFC 4021 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2822#section-3.6.7">RFC 2822 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2821#section-4.4">RFC 2821 section 4.4</see>
/// </summary>
public class Received
{
    /// <summary>
    /// The date of this received line.
    /// Is <see cref="DateTime.MinValue"/> if not present in the received header line.
    /// </summary>
    public DateTime Date { get { return _date; } private set { _date = value; } }
    private DateTime _date;

    /// <summary>
    /// A dictionary that contains the names and values of the
    /// received header line.
    /// If the received header is invalid and contained one name
    /// multiple times, the first one is used and the rest is ignored.
    /// </summary>
    /// <example>
    /// If the header lines looks like:
    /// <code>
    /// from sending.com (localMachine [127.0.0.1]) by test.net (Postfix)
    /// </code>
    /// then the dictionary will contain two keys: "from" and "by" with the values
    /// "sending.com (localMachine [127.0.0.1])" and "test.net (Postfix)".
    /// </example>
    public Dictionary<string, string> Names { get { return _names; } private set { _names = value; } }
    private Dictionary<string, string> _names; 

    /// <summary>
    /// The raw input string that was parsed into this class.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// Parses a Received header value.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception></exception>
    public Received(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // Remember the raw input if someone whishes to use it
        Raw = headerValue;

        // Default Date value
        Date = DateTime.MinValue;

        // The date part is the last part of the string, and is preceeded by a semicolon
        // Some emails forgets to specify the date, therefore we need to check if it is there
        if (headerValue.Contains(";"))
        {
            string datePart = headerValue.Substring(headerValue.LastIndexOf(";") + 1);
            Date = Rfc2822DateTime.StringToDate(datePart);
        }

        Names = ParseDictionary(headerValue);
    }

    /// <summary>
    /// Parses the Received header name-value-list into a dictionary.
    /// </summary>
    /// <param name="headerValue">The full header value for the Received header</param>
    /// <returns>A dictionary where the name-value-list has been parsed into</returns>
    private static Dictionary<string, string> ParseDictionary(string headerValue)
    {
        Dictionary<string, string> dictionary = new Dictionary<string, string>();

        // Remove the date part from the full headerValue if it is present
        string headerValueWithoutDate = headerValue;
        if (headerValue.Contains(";"))
        {
            headerValueWithoutDate = headerValue.Substring(0, headerValue.LastIndexOf(";"));
        }

        // Reduce any whitespace character to one space only
        headerValueWithoutDate = Regex.Replace(headerValueWithoutDate, @"\s+", " ");

        // The regex below should capture the following:
        // The name consists of non-whitespace characters followed by a whitespace and then the value follows.
        // There are multiple cases for the value part:
        //   1: Value is just some characters not including any whitespace
        //   2: Value is some characters, a whitespace followed by an unlimited number of
        //      parenthesized values which can contain whitespaces, each delimited by whitespace
        //
        // Cheat sheet for regex:
        // \s means every whitespace character
        // [^\s] means every character except whitespace characters
        // +? is a non-greedy equivalent of +
        const string pattern = @"(?<name>[^\s]+)\s(?<value>[^\s]+(\s\(.+?\))*)";

        // Find each match in the string
        MatchCollection matches = Regex.Matches(headerValueWithoutDate, pattern);
        foreach (Match match in matches)
        {
            // Add the name and value part found in the matched result to the dictionary
            string name = match.Groups["name"].Value;
            string value = match.Groups["value"].Value;

            // Check if the name is really a comment.
            // In this case, the first entry in the header value
            // is a comment
            if (name.StartsWith("("))
            {
                continue;
            }

            // Only add the first name pair
            // All subsequent pairs are ignored, as they are invalid anyway
            if (!dictionary.ContainsKey(name))
                dictionary.Add(name, value);
        }

        return dictionary;
    }
}

/// <summary>
/// This class is used for RFC compliant email addresses.<br/>
/// <br/>
/// The class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// The <seealso cref="MailAddress"/> does not cover all the possible formats 
/// for <a href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</a> compliant email addresses.
/// This class is used as an address wrapper to account for that deficiency.
/// </remarks>
public class RfcMailAddress
{
    #region Properties
    ///<summary>
    /// The email address of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly string.Empty since RFC mail addresses does not require an email address specified.
    ///</summary>
    ///<example>
    /// Example header with email address:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// Address will be <c>test@mail.com</c><br/>
    ///</example>
    ///<example>
    /// Example header without email address:<br/>
    /// To: <c>Test</c><br/>
    /// Address will be <see cref="string.Empty"/>.
    ///</example>
    public string Address { get { return _address; } private set { _address = value; } }
    private string _address;

    ///<summary>
    /// The display name of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly <see cref="string.Empty"/> since RFC mail addresses does not require a display name to be specified.
    ///</summary>
    ///<example>
    /// Example header with display name:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// DisplayName will be <c>Test</c>
    ///</example>
    ///<example>
    /// Example header without display name:<br/>
    /// To: <c>test@test.com</c><br/>
    /// DisplayName will be <see cref="string.Empty"/>
    ///</example>
    public string DisplayName { get { return _displayName; } private set { _displayName = value; } }
    private string _displayName;

    /// <summary>
    /// This is the Raw string used to describe the <see cref="RfcMailAddress"/>.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// The <see cref="MailAddress"/> associated with the <see cref="RfcMailAddress"/>. 
    /// </summary>
    /// <remarks>
    /// The value of this property can be <see lanword="null"/> in instances where the <see cref="MailAddress"/> cannot represent the address properly.<br/>
    /// Use <see cref="HasValidMailAddress"/> property to see if this property is valid.
    /// </remarks>
    public MailAddress MailAddress { get { return _mailAddress; } private set { _mailAddress = value; } }
    private MailAddress _mailAddress;

    /// <summary>
    /// Specifies if the object contains a valid <see cref="MailAddress"/> reference.
    /// </summary>
    public bool HasValidMailAddress
    {
        get { return MailAddress != null; }
    }
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs an <see cref="RfcMailAddress"/> object from a <see cref="MailAddress"/> object.<br/>
    /// This constructor is used when we were able to construct a <see cref="MailAddress"/> from a string.
    /// </summary>
    /// <param name="mailAddress">The address that <paramref name="raw"/> was parsed into</param>
    /// <param name="raw">The raw unparsed input which was parsed into the <paramref name="mailAddress"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="mailAddress"/> or <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(MailAddress mailAddress, string raw)
    {
        if (mailAddress == null)
            throw new ArgumentNullException("mailAddress");

        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = mailAddress;
        Address = mailAddress.Address;
        DisplayName = mailAddress.DisplayName;
        Raw = raw;
    }

    /// <summary>
    /// When we were unable to parse a string into a <see cref="MailAddress"/>, this constructor can be
    /// used. The Raw string is then used as the <see cref="DisplayName"/>.
    /// </summary>
    /// <param name="raw">The raw unparsed input which could not be parsed</param>
    /// <exception cref="ArgumentNullException">If <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(string raw)
    {
        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = null;
        Address = string.Empty;
        DisplayName = raw;
        Raw = raw;
    }
    #endregion

    /// <summary>
    /// A string representation of the <see cref="RfcMailAddress"/> object
    /// </summary>
    /// <returns>Returns the string representation for the object</returns>
    public override string ToString()
    {
        if (HasValidMailAddress)
            return MailAddress.ToString();

        return Raw;
    }

    #region Parsing
    /// <summary>
    /// Parses an email address from a MIME header<br/>
    /// <br/>
    /// Examples of input:
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>"Eksperten mailrobot" &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>&lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>noreply@mail.eksperten.dk</c><br/>
    /// <br/>
    /// It might also contain encoded text, which will then be decoded.
    /// </summary>
    /// <param name="input">The value to parse out and email and/or a username</param>
    /// <returns>A <see cref="RfcMailAddress"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    /// <remarks>
    /// <see href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</see> for more details on email syntax.<br/>
    /// <see cref="EncodedWord.Decode">For more information about encoded text</see>.
    /// </remarks>
    internal static RfcMailAddress ParseMailAddress(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Decode the value, if it was encoded
        input = EncodedWord.Decode(input.Trim());

        // Find the location of the email address
        int indexStartEmail = input.LastIndexOf('<');
        int indexEndEmail = input.LastIndexOf('>');

        try
        {
            if (indexStartEmail >= 0 && indexEndEmail >= 0)
            {
                string username;
                // Check if there is a username in front of the email address
                if (indexStartEmail > 0)
                {
                    // Parse out the user
                    username = input.Substring(0, indexStartEmail).Trim();
                }
                else
                {
                    // There was no user
                    username = string.Empty;
                }

                // Parse out the email address without the "<"  and ">"
                indexStartEmail = indexStartEmail + 1;
                int emailLength = indexEndEmail - indexStartEmail;
                string emailAddress = input.Substring(indexStartEmail, emailLength).Trim();

                // There has been cases where there was no emailaddress between the < and >
                if (!string.IsNullOrEmpty(emailAddress))
                {
                    // If the username is quoted, MailAddress' constructor will remove them for us
                    return new RfcMailAddress(new MailAddress(emailAddress, username), input);
                }
            }

            // This might be on the form noreply@mail.eksperten.dk
            // Check if there is an email, if notm there is no need to try
            if (input.Contains("@"))
                return new RfcMailAddress(new MailAddress(input), input);
        }
        catch (FormatException)
        {
            // Sometimes invalid emails are sent, like sqlmap-user@sourceforge.net. (last period is illigal)
            //DefaultLogger.Log.LogError("RfcMailAddress: Improper mail address: \"" + input + "\"");
        }

        // It could be that the format used was simply a name
        // which is indeed valid according to the RFC
        // Example:
        // Eksperten mailrobot
        return new RfcMailAddress(input);
    }

    /// <summary>
    /// Parses input of the form<br/>
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;, ...</c><br/>
    /// to a list of RFCMailAddresses
    /// </summary>
    /// <param name="input">The input that is a comma-separated list of EmailAddresses to parse</param>
    /// <returns>A List of <seealso cref="RfcMailAddress"/> objects extracted from the <paramref name="input"/> parameter.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    internal static List<RfcMailAddress> ParseMailAddresses(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        List<RfcMailAddress> returner = new List<RfcMailAddress>();

        // MailAddresses are split by commas
        IEnumerable<string> mailAddresses = Utility.SplitStringWithCharNotInsideQuotes(input, ',');

        // Parse each of these
        foreach (string mailAddress in mailAddresses)
        {
            returner.Add(ParseMailAddress(mailAddress));
        }

        return returner;
    }
    #endregion
}

/// <summary>
/// Class that holds all headers for a message<br/>
/// Headers which are unknown the the parser will be held in the <see cref="UnknownHeaders"/> collection.<br/>
/// <br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// See <a href="http://tools.ietf.org/html/rfc4021">RFC 4021</a> for a large list of headers.<br/>
/// </remarks>
public sealed class MessageHeader
{
    #region Properties
    /// <summary>
    /// All headers which were not recognized and explicitly dealt with.<br/>
    /// This should mostly be custom headers, which are marked as X-[name].<br/>
    /// <br/>
    /// This list will be empty if all headers were recognized and parsed.
    /// </summary>
    /// <remarks>
    /// If you as a user, feels that a header in this collection should
    /// be parsed, feel free to notify the developers.
    /// </remarks>
    public NameValueCollection UnknownHeaders { get { return _unknownHeaders; } private set { _unknownHeaders = value; } }
    private NameValueCollection _unknownHeaders;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    /// <see cref="MessageId">For an ID of the message</see>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Message keywords<br/>
    /// <br/>
    /// The list will be empty if no Keywords header was present in the message
    /// </summary>
    public List<string> Keywords { get { return _keywords; } private set { _keywords = value; } }
    private List<string> _keywords;

    /// <summary>
    /// A List of emails to people who wishes to be notified when some event happens.<br/>
    /// These events could be email:
    /// <list type="bullet">
    ///   <item>deletion</item>
    ///   <item>printing</item>
    ///   <item>received</item>
    ///   <item>...</item>
    /// </list>
    /// The list will be empty if no Disposition-Notification-To header was present in the message
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc3798">RFC 3798</a> for details</remarks>
    public List<RfcMailAddress> DispositionNotificationTo { get { return _dispositionNotificationTo; } private set { _dispositionNotificationTo = value; } }
    private List<RfcMailAddress> _dispositionNotificationTo;

    /// <summary>
    /// This is the Received headers. This tells the path that the email went.<br/>
    /// <br/>
    /// The list will be empty if no Received header was present in the message
    /// </summary>
    public List<Received> Received { get { return _recieved; } private set { _recieved = value; } }
    private List<Received> _recieved;

    /// <summary>
    /// Importance of this email.<br/>
    /// <br/>
    /// The importance level is set to normal, if no Importance header field was mentioned or it contained
    /// unknown information. This is the expected behavior according to the RFC.
    /// </summary>
    public MailPriority Importance { get { return _importance; } private set { _importance = value; } }
    private MailPriority _importance; 

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// Carbon Copy. This specifies who got a copy of the message.<br/>
    /// <br/>
    /// The list will be empty if no Cc header was present in the message
    /// </summary>
    public List<RfcMailAddress> Cc { get { return _cc; } private set { _cc = value; } }
    private List<RfcMailAddress> _cc;

    /// <summary>
    /// Blind Carbon Copy. This specifies who got a copy of the message, but others
    /// cannot see who these persons are.<br/>
    /// <br/>
    /// The list will be empty if no Received Bcc was present in the message
    /// </summary>
    public List<RfcMailAddress> Bcc { get { return _bcc; } private set { _bcc = value; } }
    private List<RfcMailAddress> _bcc;

    /// <summary>
    /// Specifies who this mail was for<br/>
    /// <br/>
    /// The list will be empty if no To header was present in the message
    /// </summary>
    public List<RfcMailAddress> To { get { return _to; } private set { _to = value; } }
    private List<RfcMailAddress> _to;

    /// <summary>
    /// Specifies who sent the email<br/>
    /// <br/>
    /// <see langword="null"/> if no From header field was present in the message
    /// </summary>
    public RfcMailAddress From { get { return _from; } private set { _from = value; } }
    private RfcMailAddress _from;

    /// <summary>
    /// Specifies who a reply to the message should be sent to<br/>
    /// <br/>
    /// <see langword="null"/> if no Reply-To header field was present in the message
    /// </summary>
    public RfcMailAddress ReplyTo { get { return _replyTo; } private set { _replyTo = value; } }
    private RfcMailAddress _replyTo;

    /// <summary>
    /// The message identifier(s) of the original message(s) to which the
    /// current message is a reply.<br/>
    /// <br/>
    /// The list will be empty if no In-Reply-To header was present in the message
    /// </summary>
    public List<string> InReplyTo { get { return _inReplyTo; } private set { _inReplyTo = value; } }
    private List<string> _inReplyTo;

    /// <summary>
    /// The message identifier(s) of other message(s) to which the current
    /// message is related to.<br/>
    /// <br/>
    /// The list will be empty if no References header was present in the message
    /// </summary>
    public List<string> References { get { return _references; } private set { _references = value; } }
    private List<string> _references;

    /// <summary>
    /// This is the sender of the email address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Sender header field was present in the message
    /// </summary>
    /// <remarks>
    /// The RFC states that this field can be used if a secretary
    /// is sending an email for someone she is working for.
    /// The email here will then be the secretary's email, and
    /// the Reply-To field would hold the address of the person she works for.<br/>
    /// RFC states that if the Sender is the same as the From field,
    /// sender should not be included in the message.
    /// </remarks>
    public RfcMailAddress Sender { get { return _sender; } private set { _sender = value; } }
    private RfcMailAddress _sender;

    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDispisition; } private set { _contentDispisition = value; } }
    private ContentDisposition _contentDispisition;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the raw value. <see cref="DateSent"/> for a parsed up <see cref="DateTime"/> value of this field.<br/>
    /// <br/>
    /// <see langword="DateTime.MinValue"/> if no Date header field was present in the message or if the date could not be parsed.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public string Date { get { return _date; } private set { _date = value; } }
    private string _date;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the parsed equivalent of <see cref="Date"/>.<br/>
    /// Notice that the <see cref="TimeZone"/> of the <see cref="DateTime"/> object is in UTC and has NOT been converted
    /// to local <see cref="TimeZone"/>.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public DateTime DateSent { get { return _dateSent; } private set { _dateSent = value; } }
    private DateTime _dateSent;

    /// <summary>
    /// An ID of the message that is SUPPOSED to be in every message according to the RFC.<br/>
    /// The ID is unique.<br/>
    /// <br/>
    /// <see langword="null"/> if no Message-ID header field was present in the message
    /// </summary>
    public string MessageId { get { return _messageId; } private set { _messageId = value; } }
    private string _messageId;

    /// <summary>
    /// The Mime Version.<br/>
    /// This field will almost always show 1.0<br/>
    /// <br/>
    /// <see langword="null"/> if no Mime-Version header field was present in the message
    /// </summary>
    public string MimeVersion { get { return _mimeVersion; } private set { _mimeVersion = value; } }
    private string _mimeVersion;

    /// <summary>
    /// A single <see cref="RfcMailAddress"/> with no username inside.<br/>
    /// This is a trace header field, that should be in all messages.<br/>
    /// Replies should be sent to this address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Return-Path header field was present in the message
    /// </summary>
    public RfcMailAddress ReturnPath { get { return _returnPath; } private set { _returnPath = value; } }
    public RfcMailAddress _returnPath;

    /// <summary>
    /// The subject line of the message in decoded, one line state.<br/>
    /// This should be in all messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Subject header field was present in the message
    /// </summary>
    public string Subject { get { return _subject; } private set { _subject = value; } }
    private string _subject;
    #endregion

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a MessageHeader
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid MessageHeader object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessageHeader(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Create empty lists as defaults. We do not like null values
        // List with an initial capacity set to zero will be replaced
        // when a corrosponding header is found
        To = new List<RfcMailAddress>(0);
        Cc = new List<RfcMailAddress>(0);
        Bcc = new List<RfcMailAddress>(0);
        Received = new List<Received>();
        Keywords = new List<string>();
        InReplyTo = new List<string>(0);
        References = new List<string>(0);
        DispositionNotificationTo = new List<RfcMailAddress>();
        UnknownHeaders = new NameValueCollection();

        // Default importancetype is Normal (assumed if not set)
        Importance = MailPriority.Normal;

        // 7BIT is the default ContentTransferEncoding (assumed if not set)
        ContentTransferEncoding = ContentTransferEncoding.SevenBit;

        // text/plain; charset=us-ascii is the default ContentType
        ContentType = new ContentType("text/plain; charset=us-ascii");

        // Now parse the actual headers
        ParseHeaders(headers);
    }

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a <see cref="MessageHeader"/>
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid <see cref="MessageHeader"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    private void ParseHeaders(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Now begin to parse the header values
        foreach (string headerName in headers.Keys)
        {
            string[] headerValues = headers.GetValues(headerName);
            if (headerValues != null)
            {
                foreach (string headerValue in headerValues)
                {
                    ParseHeader(headerName, headerValue);
                }
            }
        }
    }

    #region Header fields parsing
    /// <summary>
    /// Parses a single header and sets member variables according to it.
    /// </summary>
    /// <param name="headerName">The name of the header</param>
    /// <param name="headerValue">The value of the header in unfolded state (only one line)</param>
    /// <exception cref="ArgumentNullException">If <paramref name="headerName"/> or <paramref name="headerValue"/> is <see langword="null"/></exception>
    private void ParseHeader(string headerName, string headerValue)
    {
        if (headerName == null)
            throw new ArgumentNullException("headerName");

        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerName.ToUpperInvariant())
        {
            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "TO":
                To = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "CC":
                Cc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "BCC":
                Bcc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "FROM":
                // There is only one MailAddress in the from field
                From = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            // The implementation here might be wrong
            case "REPLY-TO":
                // This field may actually be a list of addresses, but no
                // such case has been encountered
                ReplyTo = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "SENDER":
                Sender = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            // RFC 5322:
            // The "Keywords:" field contains a comma-separated list of one or more
            // words or quoted-strings.
            // The field are intended to have only human-readable content
            // with information about the message
            case "KEYWORDS":
                string[] keywordsTemp = headerValue.Split(',');
                foreach (string keyword in keywordsTemp)
                {
                    // Remove the quotes if there is any
                    Keywords.Add(Utility.RemoveQuotesIfAny(keyword.Trim()));
                }
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RECEIVED":
                // Simply add the value to the list
                Received.Add(new Received(headerValue.Trim()));
                break;

            case "IMPORTANCE":
                Importance = HeaderFieldParser.ParseImportance(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc3798#section-2.1
            case "DISPOSITION-NOTIFICATION-TO":
                DispositionNotificationTo = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            case "MIME-VERSION":
                MimeVersion = headerValue.Trim();
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            case "SUBJECT":
                Subject = EncodedWord.Decode(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RETURN-PATH":
                // Return-paths does not include a username, but we 
                // may still use the address parser 
                ReturnPath = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            // Example Message-ID
            // <33cdd74d6b89ab2250ecd75b40a41405@nfs.eksperten.dk>
            case "MESSAGE-ID":
                MessageId = HeaderFieldParser.ParseId(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "IN-REPLY-TO":
                InReplyTo = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "REFERENCES":
                References = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.1))
            case "DATE":
                Date = headerValue.Trim();
                DateSent = Rfc2822DateTime.StringToDate(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-6
            // See ContentTransferEncoding class for more details
            case "CONTENT-TRANSFER-ENCODING":
                ContentTransferEncoding = HeaderFieldParser.ParseContentTransferEncoding(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-8
            case "CONTENT-DESCRIPTION":
                // Human description of for example a file. Can be encoded
                ContentDescription = EncodedWord.Decode(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-5.1
            // Example: Content-type: text/plain; charset="us-ascii"
            case "CONTENT-TYPE":
                ContentType = HeaderFieldParser.ParseContentType(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2183
            case "CONTENT-DISPOSITION":
                ContentDisposition = HeaderFieldParser.ParseContentDisposition(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-7
            // Example: <foo4*foo1@bar.net>
            case "CONTENT-ID":
                ContentId = HeaderFieldParser.ParseId(headerValue);
                break;

            default:
                // This is an unknown header

                // Custom headers are allowed. That means headers
                // that are not mentionen in the RFC.
                // Such headers start with the letter "X"
                // We do not have any special parsing of such

                // Add it to unknown headers
                UnknownHeaders.Add(headerName, headerValue);
                break;
        }
    }
    #endregion
}

/// <summary>
/// This is the root of the email tree structure.<br/>
/// <see cref="Mime.MessagePart"/> for a description about the structure.<br/>
/// <br/>
/// A Message (this class) contains the headers of an email message such as:
/// <code>
///  - To
///  - From
///  - Subject
///  - Content-Type
///  - Message-ID
/// </code>
/// which are located in the <see cref="Headers"/> property.<br/>
/// <br/>
/// Use the <see cref="Message.MessagePart"/> property to find the actual content of the email message.
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Message
{
    #region Public properties
    /// <summary>
    /// Headers of the Message.
    /// </summary>
    public MessageHeader Headers { get { return _headers; } private set { _headers = value; } }
    private MessageHeader _headers;

    /// <summary>
    /// This is the body of the email Message.<br/>
    /// <br/>
    /// If the body was parsed for this Message, this property will never be <see langword="null"/>.
    /// </summary>
    public MessagePart MessagePart { get { return _messagePart; } private set { _messagePart = value; } }
    private MessagePart _messagePart;

    /// <summary>
    /// The raw content from which this message has been constructed.<br/>
    /// These bytes can be persisted and later used to recreate the Message.
    /// </summary>
    public byte[] RawMessage { get { return _rawMessage; } private set { _rawMessage = value; } }
    private byte[] _rawMessage;
    #endregion

    #region Constructors
    /// <summary>
    /// Convenience constructor for <see cref="Mime.Message(byte[], bool)"/>.<br/>
    /// <br/>
    /// Creates a message from a byte array. The full message including its body is parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    public Message(byte[] rawMessageContent)
        : this(rawMessageContent, true)
    {
    }

    /// <summary>
    /// Constructs a message from a byte array.<br/>
    /// <br/>
    /// The headers are always parsed, but if <paramref name="parseBody"/> is <see langword="false"/>, the body is not parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    /// <param name="parseBody">
    /// <see langword="true"/> if the body should be parsed,
    /// <see langword="false"/> if only headers should be parsed out of the <paramref name="rawMessageContent"/> byte array
    /// </param>
    public Message(byte[] rawMessageContent, bool parseBody)
    {
        RawMessage = rawMessageContent;

        // Find the headers and the body parts of the byte array
        MessageHeader headersTemp;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headersTemp, out body);

        // Set the Headers property
        Headers = headersTemp;

        // Should we also parse the body?
        if (parseBody)
        {
            // Parse the body into a MessagePart
            MessagePart = new MessagePart(body, Headers);
        }
    }
    #endregion

    /// <summary>
    /// This method will convert this <see cref="Message"/> into a <see cref="MailMessage"/> equivalent.<br/>
    /// The returned <see cref="MailMessage"/> can be used with <see cref="System.Net.Mail.SmtpClient"/> to forward the email.<br/>
    /// <br/>
    /// You should be aware of the following about this method:
    /// <list type="bullet">
    /// <item>
    ///    All sender and receiver mail addresses are set.
    ///    If you send this email using a <see cref="System.Net.Mail.SmtpClient"/> then all
    ///    receivers in To, From, Cc and Bcc will receive the email once again.
    /// </item>
    /// <item>
    ///    If you view the source code of this Message and looks at the source code of the forwarded
    ///    <see cref="MailMessage"/> returned by this method, you will notice that the source codes are not the same.
    ///    The content that is presented by a mail client reading the forwarded <see cref="MailMessage"/> should be the
    ///    same as the original, though.
    /// </item>
    /// <item>
    ///    Content-Disposition headers will not be copied to the <see cref="MailMessage"/>.
    ///    It is simply not possible to set these on Attachments.
    /// </item>
    /// <item>
    ///    HTML content will be treated as the preferred view for the <see cref="MailMessage.Body"/>. Plain text content will be used for the
    ///    <see cref="MailMessage.Body"/> when HTML is not available.
    /// </item>
    /// </list>
    /// </summary>
    /// <returns>A <see cref="MailMessage"/> object that contains the same information that this Message does</returns>
    public MailMessage ToMailMessage()
    {
        // Construct an empty MailMessage to which we will gradually build up to look like the current Message object (this)
        MailMessage message = new MailMessage();

        message.Subject = Headers.Subject;

        // We here set the encoding to be UTF-8
        // We cannot determine what the encoding of the subject was at this point.
        // But since we know that strings in .NET is stored in UTF, we can
        // use UTF-8 to decode the subject into bytes
        message.SubjectEncoding = Encoding.UTF8;

        // The HTML version should take precedent over the plain text if it is available
        MessagePart preferredVersion = FindFirstHtmlVersion();
        if (preferredVersion != null)
        {
            // Make sure that the IsBodyHtml property is being set correctly for our content
            message.IsBodyHtml = true;
        }
        else
        {
            // otherwise use the first plain text version as the body, if it exists
            preferredVersion = FindFirstPlainTextVersion();
        }

        if (preferredVersion != null)
        {
            message.Body = preferredVersion.GetBodyAsText();
            message.BodyEncoding = preferredVersion.BodyEncoding;
        }

        // Add body and alternative views (html and such) to the message
        IEnumerable<MessagePart> textVersions = FindAllTextVersions();
        foreach (MessagePart textVersion in textVersions)
        {
            // The textVersions also contain the preferred version, therefore
            // we should skip that one
            if (textVersion == preferredVersion)
                continue;

            MemoryStream stream = new MemoryStream(textVersion.Body);
            AlternateView alternative = new AlternateView(stream);
            alternative.ContentId = textVersion.ContentId;
            alternative.ContentType = textVersion.ContentType;
            message.AlternateViews.Add(alternative);
        }

        // Add attachments to the message
        IEnumerable<MessagePart> attachments = FindAllAttachments();
        foreach (MessagePart attachmentMessagePart in attachments)
        {
            MemoryStream stream = new MemoryStream(attachmentMessagePart.Body);
            Attachment attachment = new Attachment(stream, attachmentMessagePart.ContentType);
            attachment.ContentId = attachmentMessagePart.ContentId;
            message.Attachments.Add(attachment);
        }

        if (Headers.From != null && Headers.From.HasValidMailAddress)
            message.From = Headers.From.MailAddress;

        if (Headers.ReplyTo != null && Headers.ReplyTo.HasValidMailAddress)
            message.ReplyTo = Headers.ReplyTo.MailAddress;

        if (Headers.Sender != null && Headers.Sender.HasValidMailAddress)
            message.Sender = Headers.Sender.MailAddress;

        foreach (RfcMailAddress to in Headers.To)
        {
            if (to.HasValidMailAddress)
                message.To.Add(to.MailAddress);
        }

        foreach (RfcMailAddress cc in Headers.Cc)
        {
            if (cc.HasValidMailAddress)
                message.CC.Add(cc.MailAddress);
        }

        foreach (RfcMailAddress bcc in Headers.Bcc)
        {
            if (bcc.HasValidMailAddress)
                message.Bcc.Add(bcc.MailAddress);
        }

        return message;
    }

    #region MessagePart Searching Methods

    /// <summary>
    /// Finds the first text/plain <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/plain version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/plain or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstPlainTextVersion()
    {
        return FindFirstMessagePartWithMediaType("text/plain");
    }

    /// <summary>
    /// Finds the first text/html <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/html version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/html or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstHtmlVersion()
    {
        return FindFirstMessagePartWithMediaType("text/html");
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which contains a text version.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsText"/> for MessageParts which are considered to be text versions.<br/>
    /// <br/>
    /// Examples of MessageParts media types are:
    /// <list type="bullet">
    ///    <item>text/plain</item>
    ///    <item>text/html</item>
    ///    <item>text/xml</item>
    /// </list>
    /// </summary>
    /// <returns>A List of MessageParts where each part is a text version</returns>
    public List<MessagePart> FindAllTextVersions()
    {
        return new TextVersionFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which are attachments to this message.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsAttachment"/> for MessageParts which are considered to be attachments.
    /// </summary>
    /// <returns>A List of MessageParts where each is considered an attachment</returns>
    public List<MessagePart> FindAllAttachments()
    {
        return new AttachmentFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> in the <see cref="Message"/> hierarchy with the given MediaType.<br/>
    /// <br/>
    /// The search in the hierarchy is a depth-first traversal.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found
    /// </returns>
    public MessagePart FindFirstMessagePartWithMediaType(string mediaType)
    {
        return new FindFirstMessagePartWithMediaType().VisitMessage(this, mediaType);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s in the <see cref="Message"/> hierarchy with the given MediaType.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> FindAllMessagePartsWithMediaType(string mediaType)
    {
        return new FindAllMessagePartsWithMediaType().VisitMessage(this, mediaType);
    }

    #endregion

    #region Message Persistence

    /// <summary>
    /// Save this <see cref="Message"/> to a file.<br/>
    /// <br/>
    /// Can be loaded at a later time using the <see cref="Load(FileInfo)"/> method.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="Message"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="Message"/> to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(RawMessage, 0, RawMessage.Length);
    }

    /// <summary>
    /// Loads a <see cref="Message"/> from a file containing a raw email.
    /// </summary>
    /// <param name="file">The File location to load the <see cref="Message"/> from. The file must exist.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception cref="FileNotFoundException">If <paramref name="file"/> does not exist</exception>
    /// <exception>Other exceptions relevant to a <see cref="FileStream"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="file"/></returns>
    public static Message Load(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        if (!file.Exists)
            throw new FileNotFoundException("Cannot load message from non-existent file", file.FullName);

        using (FileStream stream = new FileStream(file.FullName, FileMode.Open))
        {
            return Load(stream);
        }
    }


    /// <summary>
    /// Loads a <see cref="Message"/> from a <see cref="Stream"/> containing a raw email.
    /// </summary>
    /// <param name="messageStream">The <see cref="Stream"/> from which to load the raw <see cref="Message"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Read"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="messageStream"/></returns>
    public static Message Load(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        using (MemoryStream outStream = new MemoryStream())
        {
#if DOTNET4
				// TODO: Enable using native v4 framework methods when support is formally added.
				messageStream.CopyTo(outStream);
#else
            int bytesRead;
            byte[] buffer = new byte[4096];

            while ((bytesRead = messageStream.Read(buffer, 0, 4096)) > 0)
            {
                outStream.Write(buffer, 0, bytesRead);
            }
#endif
            byte[] content = outStream.ToArray();

            return new Message(content);
        }
    }
    #endregion
}

/// <summary>
/// Implements the CRAM-MD5 algorithm as specified in <a href="http://tools.ietf.org/html/rfc2195">RFC 2195</a>.
/// </summary>
internal static class CramMd5
{
    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x36.
    /// </summary>
    private static readonly byte[] ipad;

    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x5C.
    /// </summary>
    private static readonly byte[] opad;

    /// <summary>
    /// Initializes the static fields
    /// </summary>
    static CramMd5()
    {
        ipad = new byte[64];
        opad = new byte[64];
        for (int i = 0; i < ipad.Length; i++)
        {
            ipad[i] = 0x36;
            opad[i] = 0x5C;
        }
    }

    /// <summary>
    /// Computes the digest needed to login to a server using CRAM-MD5.<br/>
    /// <br/>
    /// This computes:<br/>
    /// MD5((password XOR opad), MD5((password XOR ipad), challenge))
    /// </summary>
    /// <param name="username">The username of the user who wants to log in</param>
    /// <param name="password">The password for the <paramref name="username"/></param>
    /// <param name="challenge">
    /// The challenge received from the server when telling it CRAM-MD5 authenticated is wanted.
    /// Is a base64 encoded string.
    /// </param>
    /// <returns>The response to the challenge, which the server can validate and log in the user if correct</returns>
    /// <exception cref="ArgumentNullException">
    /// If <paramref name="username"/>, 
    /// <paramref name="password"/> or 
    /// <paramref name="challenge"/> is <see langword="null"/>
    /// </exception>
    internal static string ComputeDigest(string username, string password, string challenge)
    {
        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (challenge == null)
            throw new ArgumentNullException("challenge");

        // Get the password bytes
        byte[] passwordBytes = GetSharedSecretInBytes(password);

        // The challenge is encoded in base64
        byte[] challengeBytes = Convert.FromBase64String(challenge);

        // Now XOR the password with the opad and ipad magic bytes
        byte[] passwordOpad = Xor(passwordBytes, opad);
        byte[] passwordIpad = Xor(passwordBytes, ipad);

        // Now do the computation: MD5((password XOR opad), MD5((password XOR ipad), challenge))
        byte[] digestValue = Hash(Concatenate(passwordOpad, Hash(Concatenate(passwordIpad, challengeBytes))));

        // Convert the bytes to a hex string
        // BitConverter writes the output as AF-B3-...
        // We need lower-case output without "-"
        string hex = BitConverter.ToString(digestValue).Replace("-", "").ToLowerInvariant();

        // Include the username in the resulting base64 encoded response
        return Convert.ToBase64String(Encoding.ASCII.GetBytes(username + " " + hex));
    }

    /// <summary>
    /// Hashes a byte array using the MD5 algorithm.
    /// </summary>
    /// <param name="toHash">The byte array to hash</param>
    /// <returns>The result of hashing the <paramref name="toHash"/> bytes with the MD5 algorithm</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toHash"/> is <see langword="null"/></exception>
    private static byte[] Hash(byte[] toHash)
    {
        if (toHash == null)
            throw new ArgumentNullException("toHash");

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            return md5.ComputeHash(toHash);
        }
    }

    /// <summary>
    /// Concatenates two byte arrays into one
    /// </summary>
    /// <param name="one">The first byte array</param>
    /// <param name="two">The second byte array</param>
    /// <returns>A concatenated byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="one"/> or <paramref name="two"/> is <see langword="null"/></exception>
    private static byte[] Concatenate(byte[] one, byte[] two)
    {
        if (one == null)
            throw new ArgumentNullException("one");

        if (two == null)
            throw new ArgumentNullException("two");

        // Create space for both byte arrays in one
        byte[] concatenated = new byte[one.Length + two.Length];

        // Copy the first one over
        Buffer.BlockCopy(one, 0, concatenated, 0, one.Length);

        // Copy the second one over
        Buffer.BlockCopy(two, 0, concatenated, one.Length, two.Length);

        // Return result
        return concatenated;
    }

    /// <summary>
    /// XORs a byte array with another.<br/>
    /// Each byte in <paramref name="toXor"/> is XORed with the corresponding byte
    /// in <paramref name="toXorWith"/> until the end of <paramref name="toXor"/> is encountered.
    /// </summary>
    /// <param name="toXor">The byte array to XOR</param>
    /// <param name="toXorWith">The byte array to XOR with</param>
    /// <returns>A new byte array with the XORed results</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toXor"/> or <paramref name="toXorWith"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the lengths of the arrays are not equal</exception>
    private static byte[] Xor(byte[] toXor, byte[] toXorWith)
    {
        if (toXor == null)
            throw new ArgumentNullException("toXor");

        if (toXorWith == null)
            throw new ArgumentNullException("toXorWith");

        if (toXor.Length != toXorWith.Length)
            throw new ArgumentException("The lengths of the arrays must be equal");

        // Create a new array to store results in
        byte[] xored = new byte[toXor.Length];

        // XOR each individual byte.
        for (int i = 0; i < toXor.Length; i++)
        {
            xored[i] = toXor[i];
            xored[i] ^= toXorWith[i];
        }

        // Return result
        return xored;
    }
    /// <summary>
    /// This method is responsible to generate the byte array needed
    /// from the shared secret - the password.<br/>
    /// 
    /// RFC 2195 says:<br/>
    /// The shared secret is null-padded to a length of 64 bytes. If the
    /// shared secret is longer than 64 bytes, the MD5 digest of the
    /// shared secret is used as a 16 byte input to the keyed MD5
    /// calculation.
    /// </summary>
    /// <param name="password">This is the shared secret</param>
    /// <returns>The 64 bytes that is to be used from the shared secret</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="password"/> is <see langword="null"/></exception>
    private static byte[] GetSharedSecretInBytes(string password)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        // Get the password in bytes
        byte[] passwordBytes = Encoding.ASCII.GetBytes(password);

        // If the length is larger than 64, we need to
        if (passwordBytes.Length > 64)
        {
            passwordBytes = new MD5CryptoServiceProvider().ComputeHash(passwordBytes);
        }

        if (passwordBytes.Length != 64)
        {
            byte[] returner = new byte[64];
            for (int i = 0; i < passwordBytes.Length; i++)
            {
                returner[i] = passwordBytes[i];
            }
            return returner;
        }

        return passwordBytes;
    }
}

/// <summary>
/// Class for computing the digest needed when issuing the APOP command to a POP3 server.
/// </summary>
internal static class Apop
{
    /// <summary>
    /// Create the digest for the APOP command so that the server can validate
    /// we know the password for some user.
    /// </summary>
    /// <param name="password">The password for the user</param>
    /// <param name="serverTimestamp">The timestamp advertised in the server greeting to the POP3 client</param>
    /// <returns>The password and timestamp hashed with the MD5 algorithm outputted as a HEX string</returns>
    public static string ComputeDigest(string password, string serverTimestamp)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        if (serverTimestamp == null)
            throw new ArgumentNullException("serverTimestamp");

        // The APOP command authorizes itself by using the password together
        // with the server timestamp. This way the password is not transmitted
        // in clear text, and the server can still verify we have the password.
        byte[] digestToHash = Encoding.ASCII.GetBytes(serverTimestamp + password);

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            // MD5 hash the digest
            byte[] result = md5.ComputeHash(digestToHash);

            // Convert the bytes to a hex string
            // BitConverter writes the output as AF-B3-...
            // We need lower-case output without "-"
            return BitConverter.ToString(result).Replace("-", "").ToLowerInvariant();
        }
    }
}

internal static class StreamUtility
{
    /// <summary>
    /// Read a line from the stream.
    /// A line is interpreted as all the bytes read until a CRLF or LF is encountered.<br/>
    /// CRLF pair or LF is not included in the string.
    /// </summary>
    /// <param name="stream">The stream from which the line is to be read</param>
    /// <returns>A line read from the stream returned as a byte array or <see langword="null"/> if no bytes were readable from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static byte[] ReadLineAsBytes(Stream stream)
    {
        if (stream == null)
            throw new ArgumentNullException("stream");

        using (MemoryStream memoryStream = new MemoryStream())
        {
            while (true)
            {
                int justRead = stream.ReadByte();
                if (justRead == -1 && memoryStream.Length > 0)
                    break;

                // Check if we started at the end of the stream we read from
                // and we have not read anything from it yet
                if (justRead == -1 && memoryStream.Length == 0)
                    return null;

                char readChar = (char)justRead;

                // Do not write \r or \n
                if (readChar != '\r' && readChar != '\n')
                    memoryStream.WriteByte((byte)justRead);

                // Last point in CRLF pair
                if (readChar == '\n')
                    break;
            }

            return memoryStream.ToArray();
        }
    }

    /// <summary>
    /// Read a line from the stream. <see cref="ReadLineAsBytes"/> for more documentation.
    /// </summary>
    /// <param name="stream">The stream to read from</param>
    /// <returns>A line read from the stream or <see langword="null"/> if nothing could be read from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static string ReadLineAsAscii(Stream stream)
    {
        byte[] readFromStream = ReadLineAsBytes(stream);
        return readFromStream != null ? Encoding.ASCII.GetString(readFromStream) : null;
    }
}

/// <summary>
/// Some of these states are defined by <a href="http://tools.ietf.org/html/rfc1939">RFC 1939</a>.<br/>
/// Which commands that are allowed in which state can be seen in the same RFC.<br/>
/// <br/>
/// Used to keep track of which state the <see cref="Pop3Client"/> is in.
/// </summary>
internal enum ConnectionState
{
    /// <summary>
    /// This is when the Pop3Client is not even connected to the server
    /// </summary>
    Disconnected,

    /// <summary>
    /// This is when the server is awaiting user credentials
    /// </summary>
    Authorization,

    /// <summary>
    /// This is when the server has been given the user credentials, and we are allowed
    /// to use commands specific to this users mail drop
    /// </summary>
    Transaction
}

/// <summary>
/// Describes the authentication method to use when authenticating towards a POP3 server.
/// </summary>
public enum AuthenticationMethod
{
    /// <summary>
    /// Authenticate using the UsernameAndPassword method.<br/>
    /// This will pass the username and password to the server in cleartext.<br/>
    /// <see cref="Apop"/> is more secure but might not be supported on a server.<br/>
    /// This method is not recommended. Use <see cref="Auto"/> instead.
    /// <br/>
    /// If SSL is used, there is no loss of security by using this authentication method.
    /// </summary>
    UsernameAndPassword,

    /// <summary>
    /// Authenticate using the Authenticated Post Office Protocol method, which is more secure then
    /// <see cref="UsernameAndPassword"/> since it is a request-response protocol where server checks if the
    ///  client knows a shared secret, which is the password, without the password itself being transmitted.<br/>
    /// This authentication method uses MD5 under its hood.<br/>
    /// <br/>
    /// This authentication method is not supported by many servers.<br/>
    /// Choose this option if you want maximum security.
    /// </summary>
    Apop,

    /// <summary>
    /// This is the recomended method to authenticate with.<br/>
    /// If <see cref="Apop"/> is supported by the server, <see cref="Apop"/> is used for authentication.<br/>
    /// If <see cref="Apop"/> is not supported, Auto will fall back to <see cref="UsernameAndPassword"/> authentication.
    /// </summary>
    Auto,

    /// <summary>
    /// Logs in the the POP3 server using CRAM-MD5 authentication scheme.<br/>
    /// This in essence uses the MD5 hashing algorithm on the user password and a server challenge.
    /// </summary>
    CramMd5
}

/// <summary>
/// POP3 compliant POP Client<br/>
/// <br/>	
/// If you want to override where logging is sent, look at <see cref="DefaultLogger"/>
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Pop3Client : IDisposable
{
    #region Private member properties
    /// <summary>
    /// The stream used to communicate with the server
    /// </summary>
    private Stream Stream { get { return _stream; } set { _stream = value; } }
    private Stream _stream;

    /// <summary>
    /// This is the last response the server sent back when a command was issued to it
    /// </summary>
    private string LastServerResponse { get { return _lastServerResponse; } set { _lastServerResponse = value; } }
    private string _lastServerResponse;

    /// <summary>
    /// The APOP time stamp sent by the server in it's welcome message if APOP is supported.
    /// </summary>
    private string ApopTimeStamp { get { return _apopTimeStamp; } set { _apopTimeStamp = value; } }
    private string _apopTimeStamp;

    /// <summary>
    /// Describes what state the <see cref="Pop3Client"/> is in
    /// </summary>
    private ConnectionState State { get { return _state; } set { _state = value; } }
    private ConnectionState _state;
    #endregion

    #region Public member properties
    /// <summary>
    /// Tells whether the <see cref="Pop3Client"/> is connected to a POP server or not
    /// </summary>
    public bool Connected { get { return _connected; } private set { _connected = value; } }
    private bool _connected;

    /// <summary>
    /// Allows you to check if the server supports
    /// the <see cref="AuthenticationMethod.Apop"/> authentication method.<br/>
    /// <br/>
    /// This value is filled when the connect method has returned,
    /// as the server tells in its welcome message if APOP is supported.
    /// </summary>
    public bool ApopSupported { get { return _apopSupported; } private set { _apopSupported = value; } }
    private bool _apopSupported;
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs a new Pop3Client for you to use.
    /// </summary>
    public Pop3Client()
    {
        SetInitialValues();
    }
    #endregion

    #region IDisposable implementation
    
    public void Dispose()
    {
        if (!_isDisposed)
        {
            try
            {
                Dispose(true);
            }
            finally
            {
                _isDisposed = true;
                GC.SuppressFinalize(this);
            }
        }
    }
    private bool _isDisposed=false;

    /// <summary>
    /// Disposes the <see cref="Pop3Client"/>.<br/>
    /// This is the implementation of the <see cref="IDisposable"/> interface.<br/>
    /// Sends the QUIT command to the server before closing the streams.
    /// </summary>
    /// <param name="disposing"><see langword="true"/> if managed and unmanaged code should be disposed, <see langword="false"/> if only managed code should be disposed</param>
    protected  void Dispose(bool disposing)
    {
        if (disposing && !_isDisposed)
        {
            if (Connected)
            {
                Disconnect();
            }
        }
    }
    
    protected void AssertDisposed()
    {
        if (_isDisposed)
        {
            string typeName = GetType().FullName;
            throw new ObjectDisposedException(typeName, String.Format(System.Globalization.CultureInfo.InvariantCulture, "Cannot access a disposed {0}.", typeName));
        }
    }

    #endregion

    #region Connection managing methods
    /// <summary>
    /// Connect to the server using user supplied stream
    /// </summary>
    /// <param name="stream">The stream used to communicate with the server</param>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public void Connect(Stream stream)
    {
        AssertDisposed();

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        if (stream == null)
            throw new ArgumentNullException("stream");

        Stream = stream;

        // Fetch the server one-line welcome greeting
        string response = StreamUtility.ReadLineAsAscii(Stream);

        // Check if the response was an OK response
        try
        {
            // Assume we now need the user to supply credentials
            // If we do not connect correctly, Disconnect will set the
            // state to Disconnected
            // If this is not set, Disconnect will throw an exception
            State = ConnectionState.Authorization;

            IsOkResponse(response);
            ExtractApopTimestamp(response);
            Connected = true;
        }
        catch (Exception e)
        {
            // If not close down the connection and abort
            DisconnectStreams();

            //DefaultLogger.Log.LogError("Connect(): " + "Error with connection, maybe POP3 server not exist");
            //DefaultLogger.Log.LogDebug("Last response from server was: " + LastServerResponse);
            throw new Exception("Server is not available", e);
        }
    }

    /// <summary>
    /// Connects to a remote POP3 server using default timeouts of 60.000 milliseconds
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/></exception>
    public void Connect(string hostname, int port, bool useSsl)
    {
        const int defaultTimeOut = 60000;
        Connect(hostname, port, useSsl, defaultTimeOut, defaultTimeOut, null);
    }

    /// <summary>
    /// Connects to a remote POP3 server
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <param name="receiveTimeout">Timeout in milliseconds before a socket should time out from reading. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="sendTimeout">Timeout in milliseconds before a socket should time out from sending. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="certificateValidator">If you want to validate the certificate in a SSL connection, pass a reference to your validator. Supply <see langword="null"/> if default should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/> or if any of the timeouts is less than -1.</exception>
    public void Connect(string hostname, int port, bool useSsl, int receiveTimeout, int sendTimeout, RemoteCertificateValidationCallback certificateValidator)
    {
        AssertDisposed();

        if (hostname == null)
            throw new ArgumentNullException("hostname");

        if (hostname.Length == 0)
            throw new ArgumentException("hostname cannot be empty", "hostname");

        if (port > IPEndPoint.MaxPort || port < IPEndPoint.MinPort)
            throw new ArgumentOutOfRangeException("port");

        if (receiveTimeout < -1)
            throw new ArgumentOutOfRangeException("receiveTimeout");

        if (sendTimeout < -1)
            throw new ArgumentOutOfRangeException("sendTimeout");

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        TcpClient clientSocket = new TcpClient();
        clientSocket.ReceiveTimeout = receiveTimeout;
        clientSocket.SendTimeout = sendTimeout;

        try
        {
            clientSocket.Connect(hostname, port);
        }
        catch (SocketException e)
        {
            // Close the socket - we are not connected, so no need to close stream underneath
            clientSocket.Close();

            //DefaultLogger.Log.LogError("Connect(): " + e.Message);
            throw new Exception("Server not found", e);
        }

        Stream stream;
        if (useSsl)
        {
            // If we want to use SSL, open a new SSLStream on top of the open TCP stream.
            // We also want to close the TCP stream when the SSL stream is closed
            // If a validator was passed to us, use it.
            SslStream sslStream;
            if (certificateValidator == null)
            {
                sslStream = new SslStream(clientSocket.GetStream(), false);
            }
            else
            {
                sslStream = new SslStream(clientSocket.GetStream(), false, certificateValidator);
            }
            sslStream.ReadTimeout = receiveTimeout;
            sslStream.WriteTimeout = sendTimeout;

            // Authenticate the server
            sslStream.AuthenticateAsClient(hostname);

            stream = sslStream;
        }
        else
        {
            // If we do not want to use SSL, use plain TCP
            stream = clientSocket.GetStream();
        }

        // Now do the connect with the same stream being used to read and write to
        Connect(stream);
    }

    /// <summary>
    /// Disconnects from POP3 server.
    /// Sends the QUIT command before closing the connection, which deletes all the messages that was marked as such.
    /// </summary>
    public void Disconnect()
    {
        AssertDisposed();

        if (State == ConnectionState.Disconnected)
            throw new Exception("You cannot disconnect a connection which is already disconnected");

        try
        {
            SendCommand("QUIT");
        }
        finally
        {
            DisconnectStreams();
        }
    }
    #endregion

    #region Authentication methods
    /// <summary>
    /// Authenticates a user towards the POP server using <see cref="AuthenticationMethod.Auto"/>.<br/>
    /// If this authentication fails but you are sure that the username and password is correct, it might
    /// be that that the POP3 server is wrongly telling the client it supports <see cref="AuthenticationMethod.Apop"/>.
    /// You should try using <see cref="Authenticate(string, string, AuthenticationMethod)"/> while passing <see cref="AuthenticationMethod.UsernameAndPassword"/> to the method.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password)
    {
        AssertDisposed();
        Authenticate(username, password, AuthenticationMethod.Auto);
    }

    /// <summary>
    /// Authenticates a user towards the POP server using some <see cref="AuthenticationMethod"/>.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <param name="authenticationMethod">The way that the client should authenticate towards the server</param>
    /// <exception cref="NotSupportedException">If <see cref="AuthenticationMethod.Apop"/> is used, but not supported by the server</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password, AuthenticationMethod authenticationMethod)
    {
        AssertDisposed();

        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (State != ConnectionState.Authorization)
            throw new Exception("You have to be connected and not authorized when trying to authorize yourself");

        try
        {
            switch (authenticationMethod)
            {
                case AuthenticationMethod.UsernameAndPassword:
                    AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.Apop:
                    AuthenticateUsingApop(username, password);
                    break;

                case AuthenticationMethod.Auto:
                    if (ApopSupported)
                        AuthenticateUsingApop(username, password);
                    else
                        AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.CramMd5:
                    AuthenticateUsingCramMd5(username, password);
                    break;
            }
        }
        catch (Exception e)
        {
            //DefaultLogger.Log.LogError("Problem logging in using method " + authenticationMethod + ". Server response was: " + LastServerResponse);

            // Throw a more specific exception if special cases of failure is detected
            // using the response the server generated when the last command was sent
            CheckFailedLoginServerResponse(LastServerResponse, e);

            // If no special failure is detected, tell that the login credentials were wrong
            throw e;
        }

        // We are now authenticated and therefore we enter the transaction state
        State = ConnectionState.Transaction;
    }

    /// <summary>
    /// Authenticates a user towards the POP server using the USER and PASSWORD commands
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingUserAndPassword(string username, string password)
    {
        SendCommand("USER " + username);
        SendCommand("PASS " + password);

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates a user towards the POP server using APOP
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support APOP</exception>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingApop(string username, string password)
    {
        if (!ApopSupported)
            throw new NotSupportedException("APOP is not supported on this server");

        SendCommand("APOP " + username + " " + Apop.ComputeDigest(password, ApopTimeStamp));

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates using the CRAM-MD5 authentication method
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support AUTH CRAM-MD5</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private void AuthenticateUsingCramMd5(string username, string password)
    {
        // Example of communication:
        // C: AUTH CRAM-MD5
        // S: + PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
        // C: dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
        // S: +OK CRAM authentication successful

        // Other example, where AUTH CRAM-MD5 is not supported
        // C: AUTH CRAM-MD5
        // S: -ERR Authentication method CRAM-MD5 not supported

        try
        {
            SendCommand("AUTH CRAM-MD5");
        }
        catch (Exception e)
        {
            // A PopServerException will be thrown if the server responds with a -ERR not supported
            throw new NotSupportedException("CRAM-MD5 authentication not supported", e);
        }

        // Fetch out the challenge from the server response
        string challenge = LastServerResponse.Substring(2);

        // Compute the challenge response
        string response = CramMd5.ComputeDigest(username, password, challenge);

        // Send the response to the server
        SendCommand(response);

        // Authentication was successful if no exceptions thrown before getting here
    }
    #endregion

    #region Public POP3 commands
    /// <summary>
    /// Get the number of messages on the server using a STAT command
    /// </summary>
    /// <returns>The message count on the server</returns>
    /// <exception cref="PopServerException">If the server did not accept the STAT command</exception>
    public int GetMessageCount()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot get the message count without authenticating yourself towards the server first");

        return SendCommandIntResponse("STAT", 1);
    }

    /// <summary>
    /// Marks the message with the given message number as deleted.<br/>
    /// <br/>
    /// The message will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.
    /// </summary>
    /// <param name="messageNumber">
    /// The number of the message to be deleted. This message may not already have been deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <exception cref="PopServerException">If the server did not accept the delete command</exception>
    public void DeleteMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot delete any messages without authenticating yourself towards the server first");

        SendCommand("DELE " + messageNumber);
    }

    /// <summary>
    /// Marks all messages as deleted.<br/>
    /// <br/>
    /// The messages will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.<br/>
    /// The method assumes that no prior message has been marked as deleted, and is not valid to call if this is wrong.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept one of the delete commands. All prior marked messages will still be marked.</exception>
    public void DeleteAllMessages()
    {
        AssertDisposed();

        int messageCount = GetMessageCount();

        for (int messageItem = messageCount; messageItem > 0; messageItem--)
        {
            DeleteMessage(messageItem);
        }
    }

    /// <summary>
    /// Keep server active by sending a NOOP command.<br/>
    /// This might keep the server from closing the connection due to inactivity.<br/>
    /// <br/>
    /// RFC:<br/>
    /// The POP3 server does nothing, it merely replies with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the NOOP command</exception>
    public void NoOperation()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the NOOP command unless you are authenticated to the server");

        SendCommand("NOOP");
    }

    /// <summary>
    /// Send a reset command to the server.<br/>
    /// <br/>
    /// RFC:<br/>
    /// If any messages have been marked as deleted by the POP3
    /// server, they are unmarked. The POP3 server then replies
    /// with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the RSET command</exception>
    public void Reset()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the RSET command unless you are authenticated to the server");

        SendCommand("RSET");
    }

    /// <summary>
    /// Get a unique ID for a single message.<br/>
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The unique ID for the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command. This could happen if the <paramref name="messageNumber"/> does not exist</exception>
    public string GetMessageUid(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message ID, when the user has not been authenticated yet");

        // Example from RFC:
        //C: UIDL 2
        //S: +OK 2 QhdPYR:00WBw1Ph7x7

        SendCommand("UIDL " + messageNumber);

        // Parse out the unique ID
        return LastServerResponse.Split(' ')[2];
    }

    /// <summary>
    /// Gets a list of unique IDs for all messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>
    /// A list containing the unique IDs in sorted order from message number 1 and upwards.
    /// </returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command</exception>
    public List<string> GetMessageUids()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message IDs, when the user has not been authenticated yet");

        // RFC Example:
        // C: UIDL
        // S: +OK
        // S: 1 whqtswO00WBw418f9t5JxYwZ
        // S: 2 QhdPYR:00WBw1Ph7x7
        // S: .      // this is the end

        SendCommand("UIDL");

        List<string> uids = new List<string>();

        string response;
        // Keep reading until multi-line ends with a "."
        while (!IsLastLineInMultiLineResponse(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Add the unique ID to the list
            uids.Add(response.Split(' ')[1]);
        }

        return uids;
    }

    /// <summary>
    /// Gets the size in bytes of a single message
    /// </summary>
    /// <param name="messageNumber">
    /// The number of a message which may not be a message marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>Size of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public int GetMessageSize(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message size, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST 2
        // S: +OK 2 200
        return SendCommandIntResponse("LIST " + messageNumber, 2);
    }

    /// <summary>
    /// Get the sizes in bytes of all the messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>Size of each message excluding deleted ones</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public List<int> GetMessageSizes()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message sizes, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST
        // S: +OK 2 messages (320 octets)
        // S: 1 120
        // S: 2 200
        // S: .       // End of multi-line

        SendCommand("LIST");

        List<int> sizes = new List<int>();

        string response;
        // Read until end of multi-line
        while (!".".Equals(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            sizes.Add(int.Parse(response.Split(' ')[1], CultureInfo.InvariantCulture));
        }

        return sizes;
    }

    /// <summary>
    /// Fetches a message from the server and parses it
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The message, containing the email message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public Message GetMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        byte[] messageContent = GetMessageAsBytes(messageNumber);

        return new Message(messageContent);
    }

    /// <summary>
    /// Fetches a message in raw form from the server
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The raw bytes of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public byte[] GetMessageAsBytes(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Get the full message
        return GetMessageAsBytes(messageNumber, false);
    }

    /// <summary>
    /// Get all the headers for a message.<br/>
    /// The server will not need to send the body of the message.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>MessageHeaders object</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public MessageHeader GetMessageHeaders(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Only fetch the header part of the message
        byte[] messageContent = GetMessageAsBytes(messageNumber, true);

        // Do not parse the body - as it is not in the byte array
        return new Message(messageContent, false).Headers;
    }

    /// <summary>
    /// Asks the server to return it's capability listing.<br/>
    /// This is an optional command, which a server is not enforced to accept.
    /// </summary>
    /// <returns>
    /// The returned Dictionary keys are the capability names.<br/>
    /// The Lists pointed to are the capability parameters fitting that certain capability name.
    /// See <a href="http://tools.ietf.org/html/rfc2449#section-6">RFC section 6</a> for explanation for some of the capabilities.
    /// </returns>
    /// <remarks>
    /// Capabilities are case-insensitive.<br/>
    /// The dictionary uses case-insensitive searching, but the Lists inside
    /// does not. Therefore you will have to use something like the code below
    /// to search for a capability parameter.<br/>
    /// foo is the capability name and bar is the capability parameter.
    /// <code>
    /// List&lt;string&gt; arguments = capabilities["foo"];
    ///	bool contains = null != arguments.Find(delegate(string str)
    ///				{
    ///					return String.Compare(str, "bar", true) == 0;
    ///				});
    /// </code>
    /// If we were running on .NET framework >= 3.5, a HashSet could have been used.
    /// </remarks>
    /// <exception cref="PopServerException">If the server did not accept the capability command</exception>
    public Dictionary<string, List<string>> Capabilities()
    {
        AssertDisposed();

        if (State != ConnectionState.Authorization && State != ConnectionState.Transaction)
            throw new Exception("Capability command only available while connected or authenticated");

        // RFC Example
        // Examples:
        // C: CAPA
        // S: +OK Capability list follows
        // S: TOP
        // S: USER
        // S: SASL CRAM-MD5 KERBEROS_V4
        // S: RESP-CODES
        // S: LOGIN-DELAY 900
        // S: PIPELINING
        // S: EXPIRE 60
        // S: UIDL
        // S: IMPLEMENTATION Shlemazle-Plotz-v302
        // S: .
        SendCommand("CAPA");

        // Capablities are case-insensitive
        Dictionary<string, List<string>> capabilities = new Dictionary<string, List<string>>(StringComparer.OrdinalIgnoreCase);

        string lineRead;
        // Keep reading until we are at the end of the multi line response
        while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Example of read line
            // SASL CRAM-MD5 KERBEROS_V4
            // SASL is the name of the capability while
            // CRAM-MD5 and KERBEROS_V4 are arguments to SASL
            string[] splitted = lineRead.Split(' ');

            // There should always be a capability name
            string capabilityName = splitted[0];

            // Find all the arguments
            List<string> capabilityArguments = new List<string>();
            for (int i = 1; i < splitted.Length; i++)
            {
                capabilityArguments.Add(splitted[i]);
            }

            // Add the capability found to the dictionary
            capabilities.Add(capabilityName, capabilityArguments);
        }

        return capabilities;
    }
    #endregion

    #region Private helper methods
    /// <summary>
    /// Examines string to see if it contains a time stamp to use with the APOP command.<br/>
    /// If it does, sets the <see cref="ApopTimeStamp"/> property to this value.
    /// </summary>
    /// <param name="response">The string to examine</param>
    private void ExtractApopTimestamp(string response)
    {
        // RFC Example:
        // +OK POP3 server ready <1896.697170952@dbc.mtview.ca.us>
        Match match = Regex.Match(response, "<.+>");
        if (match.Success)
        {
            ApopTimeStamp = match.Value;
            ApopSupported = true;
        }
    }

    /// <summary>
    /// Tests a string to see if it is a "+" string.<br/>
    /// An "+" string should be returned by a compliant POP3
    /// server if the request could be served.<br/>
    /// <br/>
    /// The method does only check if it starts with "+".
    /// </summary>
    /// <param name="response">The string to examine</param>
    /// <exception cref="PopServerException">Thrown if server did not respond with "+" message</exception>
    private static void IsOkResponse(string response)
    {
        if (response == null)
            throw new Exception("The stream used to retrieve responses from was closed");

        if (response.StartsWith("+", StringComparison.OrdinalIgnoreCase))
            return;

        throw new Exception("The server did not respond with a + response. The response was: \"" + response + "\"");
    }

    /// <summary>
    /// Sends a command to the POP server.<br/>
    /// If this fails, an exception is thrown.
    /// </summary>
    /// <param name="command">The command to send to server</param>
    /// <exception cref="PopServerException">If the server did not send an OK message to the command</exception>
    private void SendCommand(string command)
    {
        // Convert the command with CRLF afterwards as per RFC to a byte array which we can write
        byte[] commandBytes = Encoding.ASCII.GetBytes(command + "\r\n");

        // Write the command to the server
        Stream.Write(commandBytes, 0, commandBytes.Length);
        Stream.Flush(); // Flush the content as we now wait for a response

        // Read the response from the server. The response should be in ASCII
        LastServerResponse = StreamUtility.ReadLineAsAscii(Stream);

        IsOkResponse(LastServerResponse);
    }

    /// <summary>
    /// Sends a command to the POP server, expects an integer reply in the response
    /// </summary>
    /// <param name="command">command to send to server</param>
    /// <param name="location">
    /// The location of the int to return.<br/>
    /// Example:<br/>
    /// <c>S: +OK 2 200</c><br/>
    /// Set <paramref name="location"/>=1 to get 2<br/>
    /// Set <paramref name="location"/>=2 to get 200<br/>
    /// </param>
    /// <returns>Integer value in the reply</returns>
    /// <exception cref="PopServerException">If the server did not accept the command</exception>
    private int SendCommandIntResponse(string command, int location)
    {
        SendCommand(command);

        return int.Parse(LastServerResponse.Split(' ')[location], CultureInfo.InvariantCulture);
    }

    /// <summary>
    /// Asks the server for a message and returns the message response as a byte array.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <param name="askOnlyForHeaders">If <see langword="true"/> only the header part of the message is requested from the server. If <see langword="false"/> the full message is requested</param>
    /// <returns>A byte array that the message requested consists of</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    private byte[] GetMessageAsBytes(int messageNumber, bool askOnlyForHeaders)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        if (askOnlyForHeaders)
        {
            // 0 is the number of lines of the message body to fetch, therefore it is set to zero to fetch only headers
            SendCommand("TOP " + messageNumber + " 0");
        }
        else
        {
            // Ask for the full message
            SendCommand("RETR " + messageNumber);
        }

        // RFC 1939 Example
        // C: RETR 1
        // S: +OK 120 octets
        // S: <the POP3 server sends the entire message here>
        // S: .

        // Create a byte array builder which we use to write the bytes too
        // When done, we can get the byte array out
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            bool first = true;
            byte[] lineRead;

            // Keep reading until we are at the end of the multi line response
            while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsBytes(Stream)))
            {
                // We should not write CRLF on the very last line, therefore we do this
                if (!first)
                {
                    // Write CRLF which was not included in the lineRead bytes of last line
                    byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                    byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
                }
                else
                {
                    // We are now not the first anymore
                    first = false;
                }

                // This is a multi-line. See http://tools.ietf.org/html/rfc1939#section-3
                // It says that a line starting with "." and not having CRLF after it
                // is a multi line, and the "." should be stripped
                if (lineRead.Length > 0 && lineRead[0] == '.')
                {
                    // Do not write the first period
                    byteArrayBuilder.Write(lineRead, 1, lineRead.Length - 1);
                }
                else
                {
                    // Write everything
                    byteArrayBuilder.Write(lineRead, 0, lineRead.Length);
                }
            }

            // If we are fetching a header - add an extra line to denote the headers ended
            if (askOnlyForHeaders)
            {
                byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
            }

            // Get out the bytes we have written to byteArrayBuilder
            byte[] receivedBytes = byteArrayBuilder.ToArray();

            return receivedBytes;
        }
    }

    /// <summary>
    /// Check if the bytes received is the last line in a multi line response
    /// from the pop3 server. It is the last line if the line contains only a "."
    /// </summary>
    /// <param name="bytesReceived">The last line received from the server, which could be the last response line</param>
    /// <returns><see langword="true"/> if last line in a multi line response, <see langword="false"/> otherwise</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="bytesReceived"/> is <see langword="null"/></exception>
    private static bool IsLastLineInMultiLineResponse(byte[] bytesReceived)
    {
        if (bytesReceived == null)
            throw new ArgumentNullException("bytesReceived");

        return bytesReceived.Length == 1 && bytesReceived[0] == '.';
    }

    /// <see cref="IsLastLineInMultiLineResponse(byte[])"> for documentation</see>
    private static bool IsLastLineInMultiLineResponse(string lineReceived)
    {
        if (lineReceived == null)
            throw new ArgumentNullException("lineReceived");

        // If the string is indeed the last line, then it is okay to do ASCII encoding
        // on it. For performance reasons we check if the length is equal to 1
        // so that we do not need to decode a long message string just to see if
        // it is the last line
        return lineReceived.Length == 1 && IsLastLineInMultiLineResponse(Encoding.ASCII.GetBytes(lineReceived));
    }

    /// <summary>
    /// Method for checking that a <paramref name="messageNumber"/> argument given to some method
    /// is indeed valid. If not, <see cref="InvalidUseException"/> will be thrown.
    /// </summary>
    /// <param name="messageNumber">The message number to validate</param>
    private static void ValidateMessageNumber(int messageNumber)
    {
        if (messageNumber <= 0)
            throw new Exception("The messageNumber argument cannot have a value of zero or less. Valid messageNumber is in the range [1, messageCount]");
    }

    /// <summary>
    /// Closes down the streams and sets the Pop3Client into the initial configuration
    /// </summary>
    private void DisconnectStreams()
    {
        try
        {
            Stream.Close();
        }
        finally
        {
            // Reset values to initial state
            SetInitialValues();
        }
    }

    /// <summary>
    /// Sets the initial values on the public properties of this Pop3Client.
    /// </summary>
    private void SetInitialValues()
    {
        // We have not seen the APOPTimestamp yet
        ApopTimeStamp = null;

        // We are not connected
        Connected = false;
        State = ConnectionState.Disconnected;

        // APOP is not supported before we check on login
        ApopSupported = false;
    }

    /// <summary>
    /// Checks for extra response codes when an authentication has failed and throws
    /// the correct exception.
    /// If no such response codes is found, nothing happens.
    /// </summary>
    /// <param name="serverErrorResponse">The server response string</param>
    /// <param name="e">The exception thrown because the server responded with -ERR</param>
    /// <exception cref="PopServerLockedException">If the account is locked or in use</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private static void CheckFailedLoginServerResponse(string serverErrorResponse, Exception e)
    {
        string upper = serverErrorResponse.ToUpperInvariant();

        // Bracketed strings are extra response codes addded
        // in RFC http://tools.ietf.org/html/rfc2449
        // together with the CAPA command.

        // Specifies the account is in use
        if (upper.Contains("[IN-USE]") || upper.Contains("LOCK"))
        {
            //DefaultLogger.Log.LogError("Authentication: maildrop is locked or in-use");
            throw e;
        }

        // Specifies that there must go some time between logins
        if (upper.Contains("[LOGIN-DELAY]"))
        {
            throw e;
        }
    }
    #endregion
}
]]></code></stage><stage stageid="e74c516a-5c0f-4539-88d1-4af07d49b311" name="Clean Up" type="SubSheetInfo"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="453e6ca1-71dc-4ce2-8a1c-d6512bd6b502" name="Start" type="Start"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98566d14-9c68-423f-a446-0c63a9d56369</onsuccess></stage><stage stageid="98566d14-9c68-423f-a446-0c63a9d56369" name="End" type="End"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dfd23e65-5e00-48c2-9222-b028de2d5425" name="new" type="Note"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9ffa7f6a-6f1a-4b3a-800b-c5b3d02f1053" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3d27a452-2516-48ee-a57b-363989e0a677" name="Delete Message" type="SubSheetInfo"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative>Deletes a message from the POP3 server.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7120f051-794a-428f-b0ca-ada23ab0da34" name="Start" type="Start"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to delete." stage="MessageID" /></inputs><onsuccess>fdb5293f-358f-4a67-b88b-4caa37a0f16f</onsuccess></stage><stage stageid="10c06eb3-10d6-4759-9f38-22fdb99f5635" name="MessageID" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7d6db43-bdda-4cf0-bee9-37c1bfaadd6c" name="Configure" type="SubSheetInfo"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative>Configures POP3 and SMTP settings for the Business Object</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26f68cd5-5a95-4e00-863e-0e3393c2e05c" name="End" type="End"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c9b2a5e-a669-43e8-94ce-0a93ac299716" name="Start" type="Start"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" stage="Username" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" stage="Password" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" stage="POP3 Server" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" stage="SMTP Server" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" stage="POP3 Port" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" stage="SMTP Port" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" stage="POP3 UseSSL" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" stage="SMTP UseSSL" /></inputs><onsuccess>5fc137ae-22ff-4a9a-8e93-7c3923a7775f</onsuccess></stage><stage stageid="6200a401-764c-40bb-9c01-710765a7198a" name="Username" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="949b007a-73ec-49c8-bf67-97989d93b9d2" name="Password" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="c92379ab-616d-4e9f-bbdf-76d8f4a464de" name="Disconnect POP3" type="SubSheetInfo"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68269076-5ba4-49b3-bb2b-e89927d49df3" name="Start" type="Start"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d4140c57-5f78-45ff-8e59-d720e57c6bb2</onsuccess></stage><stage stageid="f304774e-9251-4092-b2a7-32424accffdb" name="End" type="End"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4140c57-5f78-45ff-8e59-d720e57c6bb2" name="Disconnect" type="Code"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>367756ad-7a12-4c98-95ef-e1c9324c9ffa</onsuccess><code><![CDATA[_rclient.Disconnect();]]></code></stage><stage stageid="d85d6404-ed67-4802-b251-3c6e4f553bc3" name="Delete Message" type="Code"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /></inputs><onsuccess>1027af62-c9e7-443b-a361-2b2fa991aed1</onsuccess><code><![CDATA[_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="64b00b6b-bad6-4e81-bdc2-72fcaaf69961" name="End" type="End"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5fc137ae-22ff-4a9a-8e93-7c3923a7775f" name="Set Configured" type="Calculation"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26f68cd5-5a95-4e00-863e-0e3393c2e05c</onsuccess><calculation expression="True" stage="Configured" /></stage><stage stageid="e691cdbf-68a7-46c5-9469-911182bc8475" name="Connect POP3" type="SubSheetInfo"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15b67dac-088d-4cf3-a6a7-2feca9d5c99d" name="Start" type="Start"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" stage="Action" /></inputs><onsuccess>3ca489aa-ab27-465b-b189-8875b7dd615d</onsuccess></stage><stage stageid="710abe98-0572-4ea2-adab-5ac1226ed5ac" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73bf49d5-81cc-4f1a-b89d-ed0c90a05a86" name="Configured" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="bcb58d07-9f70-40cf-9df3-eeff2d3a75b6" name="Configured" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Configured]" /><ontrue>6a90465e-93b4-4c91-95c2-cfc40b74d63c</ontrue><onfalse>2f2d374d-c22d-470e-99e5-d1ca2fce2c95</onfalse></stage><stage stageid="6a90465e-93b4-4c91-95c2-cfc40b74d63c" name="Connect and Authenticate" type="Code"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[POP3 Server]" /><input type="number" name="Port" expr="[POP3 Port]" /><input type="flag" name="Use SSL" expr="[POP3 UseSSL]" /></inputs><onsuccess>5827b973-4390-423c-b457-4a225cd63717</onsuccess><code><![CDATA[_rclient = new Pop3Client();
_rclient.Connect(Server,(int)Port,Use_SSL);
_rclient.Authenticate(Username,Password);]]></code></stage><stage stageid="2f2d374d-c22d-470e-99e5-d1ca2fce2c95" name="Exception1" type="Exception"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="7d982653-252b-40ea-aa32-027aa81ece7c" name="Action" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5827b973-4390-423c-b457-4a225cd63717" name="Set Connected" type="Calculation"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>710abe98-0572-4ea2-adab-5ac1226ed5ac</onsuccess><calculation expression="True" stage="POP3 Connected" /></stage><stage stageid="aee3539f-93d1-4661-8e48-e207e7fda381" name="POP3 Connected" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="3ca489aa-ab27-465b-b189-8875b7dd615d" name="Connected" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[POP3 Connected]" /><ontrue>d99cd226-dd16-4417-af86-11e756edfb93</ontrue><onfalse>bcb58d07-9f70-40cf-9df3-eeff2d3a75b6</onfalse></stage><stage stageid="d99cd226-dd16-4417-af86-11e756edfb93" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1fa82664-ea42-4255-84ab-50b61958fe56" name="POP3 Server" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="23794a48-9b7c-4d9c-b4ea-93c47ab545fe" name="SMTP Server" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="bb607f8e-6326-4b20-9d1c-be2061af1a0a" name="SMTP Port" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="8d588294-9205-4d6f-abb1-bdc102beac7e" name="POP3 Port" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4b819ad9-214e-4499-b11b-73d0fd122070" name="SMTP UseSSL" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>240</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><alwaysinit /></stage><stage stageid="47441526-8d37-4599-921c-9e4103ac87aa" name="POP3 UseSSL" type="Data"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><alwaysinit /></stage><stage stageid="367756ad-7a12-4c98-95ef-e1c9324c9ffa" name="Set Connected" type="Calculation"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f304774e-9251-4092-b2a7-32424accffdb</onsuccess><calculation expression="False" stage="POP3 Connected" /></stage><stage stageid="1027af62-c9e7-443b-a361-2b2fa991aed1" name="Disconnect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64b00b6b-bad6-4e81-bdc2-72fcaaf69961</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="943a7e4b-9dbd-427b-a3a1-4f2810050f82" name="Send Message" type="SubSheetInfo"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative>Sends a message using the SMTP protocol.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eb463c09-de32-4dde-94c3-cf0507ee79e3" name="Start" type="Start"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="From" narrative="The email address of the sender." stage="From" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="To" /><input type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><input type="text" name="Body" narrative="The body of the email." stage="Body" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." stage="Attachments" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" stage="BodyIsHTML" /></inputs><onsuccess>8e55392e-ae1e-443f-9d5b-37fbeb948c47</onsuccess></stage><stage stageid="7e86926f-9f8a-4e11-aff3-b0ea75a9e350" name="End" type="End"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="18563c9d-55d4-4aea-9713-58595b565208" name="From" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e3eba6a-938c-4747-91fb-f065fd8e1ecd" name="To" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6cbf338c-56d6-45b9-bfa6-40dcc60f55f4" name="Subject" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-225</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="364ba15a-711a-471f-a468-2fe38c091107" name="Body" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a212d081-53fb-4398-bda0-462ce18c07c2" name="Send Message" type="Code"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Server" expr="[SMTP Server]" /><input type="number" name="Port" expr="[SMTP Port]" /><input type="text" name="Username" expr="[Username]" /><input type="password" name="Password" expr="[Password]" /><input type="flag" name="UseSSL" expr="[SMTP UseSSL]" /><input type="text" name="From" expr="[From]" /><input type="text" name="To" expr="[To]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="flag" name="BodyIsHTML" expr="[BodyIsHTML]" /></inputs><onsuccess>7e86926f-9f8a-4e11-aff3-b0ea75a9e350</onsuccess><code><![CDATA[SmtpClient client = new SmtpClient();
try
{
	client.Host = Server;
	client.Port = (int)Port;
	if (Username != "")
		client.Credentials = new NetworkCredential(Username,Password);
	client.EnableSsl = UseSSL;

	using(MailMessage mail = new MailMessage())
	{
		mail.From = new MailAddress(From);
		mail.To.Add(To);
		mail.Subject = Subject;
		mail.IsBodyHtml = BodyIsHTML;
		mail.Body = Body;

		foreach(DataRow dr in Attachments.Rows)
		{
			string file = dr["Path"].ToString();
			Attachment data = new Attachment(file, MediaTypeNames.Application.Octet);
			ContentDisposition dis = data.ContentDisposition;
			dis.CreationDate = File.GetCreationTime(file);
			dis.ModificationDate = File.GetLastWriteTime(file);
			dis.ReadDate = File.GetLastAccessTime(file);
			mail.Attachments.Add(data);
		}

		client.Send(mail);
	}
}
catch(Exception ex)
{
	string msg = ex.Message;
	if(ex.InnerException != null) {
		msg += " - " + ex.InnerException.Message;
	}
	throw new Exception(msg);
}
finally
{
	IDisposable disposableClient = client as IDisposable;
	if (disposableClient!=null)
		disposableClient.Dispose();
}]]></code></stage><stage stageid="fdb5293f-358f-4a67-b88b-4caa37a0f16f" name="Connect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>7bb623a1-88ca-4162-8eba-a0d384df4aec</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="5c4dcdf6-a371-4878-9c4c-3fd08aa568f4" name="List Messages" type="SubSheetInfo"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8e7202a-f413-4d68-b38e-4b6d789318f1" name="Start" type="Start"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c47a1fa4-9fa6-4b4c-b35c-5d03d65fad46</onsuccess></stage><stage stageid="76845230-717a-4efe-954c-b10309c6cc6c" name="End" type="End"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="797b45e9-3197-454c-9068-7baefc351f75" name="MessageCount" type="Data"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative></narrative><displayx>90</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b94061e0-c242-4e91-8bc6-ed1cc12cd5e9" name="Messages Left?" type="Decision"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageCount] &gt;0" /><ontrue>0f6d2f90-451c-4d3b-89cf-517bddb760d8</ontrue><onfalse>76845230-717a-4efe-954c-b10309c6cc6c</onfalse></stage><stage stageid="cecc8228-7a4a-4e96-b398-8757b6db702d" name="Decrement" type="Calculation"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>255</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aafa7d4a-dfb0-4446-9323-8afa0b721cf0</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="002f58e7-8123-4b0a-bcca-2319263c33d1" name="Get Message Headers1" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>cecc8228-7a4a-4e96-b398-8757b6db702d</onsuccess><code><![CDATA[MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
Subject = result.Subject;
From_Name = result.From.DisplayName;
From_Email = result.From.Address;
Date_Sent = result.DateSent;
MessageID = result.MessageId;]]></code></stage><stage stageid="aafa7d4a-dfb0-4446-9323-8afa0b721cf0" name="anchor1" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>255</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6a475ba3-f7b4-4ead-8691-921b64e9e896</onsuccess></stage><stage stageid="6a475ba3-f7b4-4ead-8691-921b64e9e896" name="anchor2" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>60</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b94061e0-c242-4e91-8bc6-ed1cc12cd5e9</onsuccess></stage><stage stageid="0f6d2f90-451c-4d3b-89cf-517bddb760d8" name="Add Row" type="Action"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to be modified" expr="&quot;Emails&quot;" /></inputs><onsuccess>002f58e7-8123-4b0a-bcca-2319263c33d1</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="38f14f0c-f87e-4c96-8836-8f5b8faced14" name="Emails" type="Collection"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" namespace="" description="The subject of the email." /><field name="From Name" type="text" namespace="" description="The name of the sender." /><field name="From Address" type="text" namespace="" description="The email address of the sender." /><field name="Date Sent" type="datetime" namespace="" description="The date and time at which the email was sent." /><field name="MessageID" type="text" namespace="" description="The ID of the email message." /></collectioninfo></stage><stage stageid="0bf982d4-8f0e-4d69-aa12-0ac3996f3d84" name="Get Message Count2" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>b94061e0-c242-4e91-8bc6-ed1cc12cd5e9</onsuccess><code><![CDATA[MessageCount=_rclient.GetMessageCount();]]></code></stage><stage stageid="c47a1fa4-9fa6-4b4c-b35c-5d03d65fad46" name="Connect POP3" type="SubSheet"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>0bf982d4-8f0e-4d69-aa12-0ac3996f3d84</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="9879be0d-2188-4595-91b6-ac07d1e348dc" name="Get Message" type="SubSheetInfo"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative>Gets a message using the POP3 protocol. By default, for multipart messages the plain text part is returned in preference to HTML (with the Content-Type output parameter indicating what was actually returned), however the HTMLPreferred flag can be used to reverse this logic. If the message contains no plain text or HTML parts then an empty string is returned.</narrative><displayx>-195</displayx><displayy>-60</displayy><displaywidth>150</displaywidth><displayheight>180</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6a181147-fc29-471a-8902-d9fffbb71d86" name="Start" type="Start"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="flag" name="HTMLPreferred" narrative="Return HTML content in preference to plain text (multipart messages only)" stage="HTMLPreferred" /></inputs><onsuccess>b218b56f-ef0d-4199-91ee-f1ccb4eec209</onsuccess></stage><stage stageid="f44ba718-e5c7-48fd-8233-0e9bfbf2048d" name="MessageID" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39a05d5d-741a-4c0a-a59c-f5952b55bb44" name="End" type="End"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="b218b56f-ef0d-4199-91ee-f1ccb4eec209" name="Connect POP3" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>fb2ca3a4-1e9e-4b39-b820-40e7c035d7d8</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="e0ceae00-8c9e-4201-8a4b-2e3b1a6b5293" name="Get Message" type="Code"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /></inputs><outputs><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>39a05d5d-741a-4c0a-a59c-f5952b55bb44</onsuccess><code><![CDATA[Message m =_rclient.GetMessage((int)MessageNumber);
MessagePart p;
if (HTMLPreferred) {
	p = m.FindFirstHtmlVersion();
	if (p == null) p = m.FindFirstPlainTextVersion();
} else {
	p = m.FindFirstPlainTextVersion();
	if (p == null) p = m.FindFirstHtmlVersion();
}
if (p != null) {
	Body = p.GetBodyAsText();
	Content_Type = p.ContentType.ToString();
} else {
	Body = "";
	Content_Type = "";
}]]></code></stage><stage stageid="aa902ce3-629f-4d73-87a8-5e04f070405f" name="Body" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64e2310-ca59-4f22-8594-a0cd08d3d78f" name="Number From ID" type="SubSheetInfo"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="63a1c937-63b0-4a26-aba7-716654c5da18" name="Start" type="Start"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" stage="MessageID" /></inputs><onsuccess>f6de7ad3-6964-449c-bdc0-135401e01d62</onsuccess></stage><stage stageid="9e58393f-f316-40c2-bf5b-7aaa994e24ec" name="MessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40f3248b-d376-4904-aef8-505a14c96731" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="f6de7ad3-6964-449c-bdc0-135401e01d62" name="Get Message Count" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>0623c4e8-9fd1-40c7-8d57-d9b00ad7f140</onsuccess><code><![CDATA[MessageCount = _rclient.GetMessageCount();]]></code></stage><stage stageid="f1f6e86c-668e-46ae-8fad-4da426311236" name="MessageCount" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0623c4e8-9fd1-40c7-8d57-d9b00ad7f140" name="Messages Left?" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageCount] &gt;0" /><ontrue>c9e08180-d230-4857-a8c5-361f80b97a8c</ontrue><onfalse>40f3248b-d376-4904-aef8-505a14c96731</onfalse></stage><stage stageid="dbf5258e-83cb-432e-b51e-596ef2ccbb01" name="Decrement" type="Calculation"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>195</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a21a95f1-5257-48c7-bf2b-db274edbc70f</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="c9e08180-d230-4857-a8c5-361f80b97a8c" name="Get Message Headers" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="MessageID" stage="FoundMessageID" /></outputs><onsuccess>20b52376-80d0-49b8-8b7f-12e300c62410</onsuccess><code><![CDATA[MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
MessageID = result.MessageId;]]></code></stage><stage stageid="a21a95f1-5257-48c7-bf2b-db274edbc70f" name="anchor1" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>195</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>37af2a50-a79d-4d9c-913e-cb970afaa33f</onsuccess></stage><stage stageid="37af2a50-a79d-4d9c-913e-cb970afaa33f" name="anchor2" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>15</displayy><displaywidth>10</displaywidth><displayheight>10</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0623c4e8-9fd1-40c7-8d57-d9b00ad7f140</onsuccess></stage><stage stageid="ddcb6ae8-4ccf-4a15-a377-97a5535a287b" name="FoundMessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20b52376-80d0-49b8-8b7f-12e300c62410" name="Message Match" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[MessageID]=[FoundMessageID]" /><ontrue>73b0921c-7ac9-4ede-ac69-891397d2cd3b</ontrue><onfalse>dbf5258e-83cb-432e-b51e-596ef2ccbb01</onfalse></stage><stage stageid="73b0921c-7ac9-4ede-ac69-891397d2cd3b" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="7bb623a1-88ca-4162-8eba-a0d384df4aec" name="Number From ID" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>d85d6404-ed67-4802-b251-3c6e4f553bc3</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="356a7e1e-cf63-4cde-a441-7f6889494278" name="Message Number" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fb2ca3a4-1e9e-4b39-b820-40e7c035d7d8" name="Number From ID" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>e0ceae00-8c9e-4201-8a4b-2e3b1a6b5293</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="8fabc428-4d6b-46b9-90d6-27513ef82084" name="Message Number" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f06ff7dc-dee1-4319-8fb8-e7324bbeda46" name="Delete Messages" type="SubSheetInfo"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative>Deletes a collection identifying messages from the POP3 server.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d878691d-ebbf-449b-b3e9-1a4dbc780391" name="Start" type="Start"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="MessageIDs" narrative="A collection containing the IDs of the messages to delete." stage="MessageIDs" /></inputs><onsuccess>12f5806c-a210-4e38-8f15-5d8cbaa6fc9b</onsuccess></stage><stage stageid="b2f67ca9-9e76-4ae8-ab11-bbeb3991f9f1" name="Delete Message1" type="Code"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>210</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[MessageNumbers.MessageNumber]" /></inputs><onsuccess>5acbc759-910b-43a4-aad3-277348fe735e</onsuccess><code><![CDATA[_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="592900a1-6fa2-4aae-8df6-4aceeb59cd3c" name="End" type="End"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>345</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5f506e0-8569-45f6-bc34-f11ca13a180f" name="Disconnect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>300</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>592900a1-6fa2-4aae-8df6-4aceeb59cd3c</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="12f5806c-a210-4e38-8f15-5d8cbaa6fc9b" name="Connect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>b542fa7b-76a0-4ac7-bef8-b7523eed14dc</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="d1c8749a-8674-4230-980f-d75287257eb7" name="Number From ID" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageIDs.MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="MessageNumbers.MessageNumber" /></outputs><onsuccess>37fa1082-1d8f-4a93-a6bf-ebfa986abde1</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="b542fa7b-76a0-4ac7-bef8-b7523eed14dc" name="For Each MessageID" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>05f7d6d8-79ad-4aa7-823f-6d114dfdff84</onsuccess><groupid>d1ff5376-69c7-47a4-a5a5-71e609d81702</groupid><looptype>ForEach</looptype><loopdata>MessageIDs</loopdata></stage><stage stageid="37fa1082-1d8f-4a93-a6bf-ebfa986abde1" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>227fbd4a-9ce9-42be-b920-b00ae83b5705</onsuccess><groupid>d1ff5376-69c7-47a4-a5a5-71e609d81702</groupid></stage><stage stageid="05f7d6d8-79ad-4aa7-823f-6d114dfdff84" name="Add Row" type="Action"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to be modified" expr="&quot;MessageNumbers&quot;" /></inputs><onsuccess>d1c8749a-8674-4230-980f-d75287257eb7</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="26d19bda-3d6e-41ad-817e-cbec74832a0f" name="MessageNumbers" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative></narrative><displayx>90</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="MessageNumber" type="number" namespace="" /></collectioninfo></stage><stage stageid="227fbd4a-9ce9-42be-b920-b00ae83b5705" name="For Each Message Number" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>165</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b2f67ca9-9e76-4ae8-ab11-bbeb3991f9f1</onsuccess><groupid>0faefc94-574d-4561-8432-32eb13a0c75d</groupid><looptype>ForEach</looptype><loopdata>MessageNumbers</loopdata></stage><stage stageid="5acbc759-910b-43a4-aad3-277348fe735e" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>255</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b5f506e0-8569-45f6-bc34-f11ca13a180f</onsuccess><groupid>0faefc94-574d-4561-8432-32eb13a0c75d</groupid></stage><stage stageid="4c85d0ab-d738-40a4-b0b2-d59986be4091" name="Save Attachments" type="SubSheetInfo"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative>Gets a message attachment and saves it to a given folder.</narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="795b56fc-9b21-4bfe-9766-bb07f4b1280a" name="End" type="End"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bb24baa-c27d-4ab7-9081-fc6414148434" name="Start" type="Start"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" narrative="The ID of the email message." stage="MessageID" /><input type="text" name="Folder" narrative="A Folder in which to save all the attachments." stage="Folder" /></inputs><onsuccess>61363752-629c-4ad8-b3fb-c6de4554c3f9</onsuccess></stage><stage stageid="c0b68cab-c88f-45cd-9b05-9fafa3790fd2" name="MessageID" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61363752-629c-4ad8-b3fb-c6de4554c3f9" name="Connect POP3" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>2f95ac8b-e89b-4ca2-9c6f-877551c2bd64</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="2f95ac8b-e89b-4ca2-9c6f-877551c2bd64" name="Number From ID" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>03fcd315-a8c0-4853-ad26-2b4808074ab9</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="5e21321e-a465-46f7-83f0-8d7e2912c93f" name="Message Number" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>90</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c9a7a0d-e77a-4368-b7f9-269d1feadbe2" name="Folder" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative></narrative><displayx>165</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03fcd315-a8c0-4853-ad26-2b4808074ab9" name="Save Attachments" type="Code"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="Folder" expr="[Folder]" /></inputs><onsuccess>795b56fc-9b21-4bfe-9766-bb07f4b1280a</onsuccess><code><![CDATA[Message m = _rclient.GetMessage((int)MessageNumber);
foreach(MessagePart a in m.FindAllAttachments())
{
	string path=System.IO.Path.Combine(Folder,a.FileName);
    a.Save(new FileInfo(path));
}]]></code></stage><stage stageid="fb9ba538-acf2-42b4-879b-a26cc69aa7e9" name="Attachments" type="Collection"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>60</displayy><displaywidth>120</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" namespace="" description="The path to a file to include as an attachment in the email." /></collectioninfo></stage><stage stageid="c57bad69-0560-4732-b2cd-ecdac5946b2b" name="MessageIDs" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" namespace="" description="The subject of the email." /><field name="From Name" type="text" namespace="" description="The name of the sender." /><field name="From Address" type="text" namespace="" description="The email address of the sender." /><field name="Date Sent" type="datetime" namespace="" description="The date and time at which the email was sent." /><field name="MessageID" type="text" namespace="" description="The ID of the email message." /></collectioninfo></stage><stage stageid="8e55392e-ae1e-443f-9d5b-37fbeb948c47" name="Configured" type="Decision"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><narrative></narrative><displayx>-45</displayx><displayy>-90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Configured]" /><ontrue>a212d081-53fb-4398-bda0-462ce18c07c2</ontrue><onfalse>7b2c9cad-ad8c-4892-8a7e-a77fceda0298</onfalse></stage><stage stageid="7b2c9cad-ad8c-4892-8a7e-a77fceda0298" name="FAIL" type="Exception"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>30</displayx><displayy>-90</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="ConfigurationException" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="8166f9b5-deea-4781-8584-e8777525856c" name="BodyIsHTML" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative></narrative><displayx>-210</displayx><displayy>105</displayy><displaywidth>90</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="106bc5d9-ced2-4091-a8b6-05f0774acd71" name="HTMLPreferred" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>-60</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f085c445-853e-460a-b673-4b230f5cc2bb" name="Content-Type" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative></narrative><displayx>165</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="6c58f055-6a86-4330-8a8a-11e619de7646" name="meistertask" xmlns="http://www.blueprism.co.uk/product/process"><process name="meistertask" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="meistertask"><id>f7d862ff-f082-4c2f-9ab5-e673f5de1093</id><element name="Click Task"><id>4e395fa8-ed1c-45c2-864f-5a857e413fef</id><type>HTMLButton</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="320" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="66" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(1)/DIV(1)/DIV(3)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(2)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(3)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="kr-view" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="26" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="&#xD;&#xA;&#xD;&#xA;Alert : testing&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;CB" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://www.meistertask.com/app/project/2YiEmhRS/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:10,185,251,330" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Comment Box"><id>8a42375d-5729-4344-9417-965f719ebec0</id><type>HTMLEdit</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="400" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="112" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(4)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(5)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="ml-slate-editor" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="18" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="&#xD;&#xA;Add Comment" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://www.meistertask.com/app/task/dLxlmVQr/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:640,438,550,1040" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Comment Box AA"><id>65760cc8-efdf-4c9e-80d9-0fe58301d752</id><type>AAElement</type><basetype>AAEdit</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText"><ProcessValue datatype="text" value="" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="Internet Explorer_Server" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="1921" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="964" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value=" Alert : testing | MeisterTask - Internet Explorer  Alert : testing | MeisterTask - Internet Explorer &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="5" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="Internet Explorer_Server" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:0,77,1040,1920" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1442840576" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="Shell DocObject View" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="1921" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="964" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1442840576" /></attribute><attribute name="aX"><ProcessValue datatype="number" value="632" /></attribute><attribute name="aY"><ProcessValue datatype="number" value="373" /></attribute><attribute name="aWidth"><ProcessValue datatype="number" value="400" /></attribute><attribute name="aHeight"><ProcessValue datatype="number" value="112" /></attribute><attribute name="Name" inuse="True"><ProcessValue datatype="text" value="Add Comment" /></attribute><attribute name="Description"><ProcessValue datatype="text" value="" /></attribute><attribute name="Role" inuse="True"><ProcessValue datatype="text" value="Text" /></attribute><attribute name="ID" inuse="True"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="State"><ProcessValue datatype="text" value="focusable" /></attribute><attribute name="Value2"><ProcessValue datatype="text" value="" /></attribute><attribute name="KeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="DefaultAction"><ProcessValue datatype="text" value="" /></attribute><attribute name="ElementCount" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="aAncestorCount"><ProcessValue datatype="number" value="12" /></attribute><attribute name="Unavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Selected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focused"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Pressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="aChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Mixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="ReadOnly"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Hottracked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Default"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Expanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Collapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Busy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Floating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Marqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Animated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Invisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Offscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Sizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Moveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="SelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focusable"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Selectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Linked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Traversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Multiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Extselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:640,458,570,1040" /></attribute><attribute name="paX"><ProcessValue datatype="number" value="8" /></attribute><attribute name="paY"><ProcessValue datatype="number" value="8" /></attribute><attribute name="paWidth"><ProcessValue datatype="number" value="1904" /></attribute><attribute name="paHeight"><ProcessValue datatype="number" value="1" /></attribute><attribute name="pName"><ProcessValue datatype="text" value="Alert : testing | MeisterTask" /></attribute><attribute name="pDescription"><ProcessValue datatype="text" value="" /></attribute><attribute name="pRole" inuse="True"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="pID" inuse="True"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="pState"><ProcessValue datatype="text" value="focusable" /></attribute><attribute name="pValue2"><ProcessValue datatype="text" value="https://www.meistertask.com/app/task/dLxlmVQr/" /></attribute><attribute name="pKeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="pDefaultAction"><ProcessValue datatype="text" value="" /></attribute><attribute name="pElementCount"><ProcessValue datatype="number" value="128" /></attribute><attribute name="pUnavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocused"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pPressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="paChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pReadOnly"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pHottracked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pDefault"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExpanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pCollapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pBusy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFloating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMarqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAnimated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pInvisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMoveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocusable"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pSelectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pLinked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pTraversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMultiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExtselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Say Button"><id>b0caa8f5-4b66-454e-b4c4-590c9f3e6802</id><type>HTMLButton</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="334" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="66" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="38" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(3)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(5)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(2)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="kr-text" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="18" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Say it" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://www.meistertask.com/app/task/tE4LWsgL/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:814,544,582,880" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Complete button"><id>279b0b57-9f61-4c80-8e50-8cee97e64c5b</id><type>HTML</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="96" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="38" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(3)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="kr-text" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="14" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Complete" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://www.meistertask.com/app/task/tE4LWsgL/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:480,125,163,576" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Archive button"><id>3f12adb0-d5bc-4d74-b4b1-b6483a3dc30d</id><type>HTML</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="81" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="38" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(3)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="kr-text" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="14" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Archive" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://www.meistertask.com/app/task/tE4LWsgL/" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:480,125,163,561" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Commentbox (HTML)"><id>9082b31e-4e80-46c9-b1ee-1692207e2844</id><type>UIAEdit</type><basetype>UIAElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="481" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="437" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="398" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="96" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="Group" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="group" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="False" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="4868" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="pane" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Incident-Report : Alert | MeisterTask" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>HTMLLaunch</id><parameters><parameter><name>Path</name><value>C:\Program Files\Internet Explorer\iexplore.exe</value></parameter><parameter><name>CommandLineParams</name><value>https://www.meistertask.com/app/project/2YiEmhRS/</value></parameter><parameter><name>ActiveTabOnly</name><value>True</value></parameter><parameter><name>UseJavaInBrowser</name><value>False</value></parameter><parameter><name>ExcludeHTC</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5a811f17-fb6e-4005-a55d-6084c9d69db1" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef52fc47-c1a8-49f8-b0fc-1b0670c85937" type="Normal" published="True"><name>Launch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61125dfe-416d-470e-a129-c1a3a8c0772d" type="Normal" published="True"><name>Terminate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="27a749dd-d0f4-405a-a791-6e38a04a83ee" type="Normal" published="True"><name>Update Comments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5c82210-21ac-47f4-9f31-5e3e39367cf0" type="Normal" published="True"><name>Complete task</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="14ade172-3b6d-4253-94af-d5c3c674074f" type="Normal" published="True"><name>Archive task</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a8ab79c2-8c4a-428e-8a8f-a3b583b25dfd" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>836878b2-ee46-4c11-b52b-a6d187f6af64</onsuccess></stage><stage stageid="836878b2-ee46-4c11-b52b-a6d187f6af64" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="af8aec4d-6aaa-4854-abc8-bad425523f3a" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="479a7965-7119-4784-9922-eefed284d21e" name="Clean Up" type="SubSheetInfo"><subsheetid>5a811f17-fb6e-4005-a55d-6084c9d69db1</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="29584993-bd0e-4f27-bc43-f70df2f28ca8" name="Start" type="Start"><subsheetid>5a811f17-fb6e-4005-a55d-6084c9d69db1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b0cc4983-211d-4b5d-8e57-a3d9854712c1</onsuccess></stage><stage stageid="b0cc4983-211d-4b5d-8e57-a3d9854712c1" name="End" type="End"><subsheetid>5a811f17-fb6e-4005-a55d-6084c9d69db1</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="061658f8-6062-4629-8384-6fd05af9715f" name="Launch" type="SubSheetInfo"><subsheetid>ef52fc47-c1a8-49f8-b0fc-1b0670c85937</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="6864564f-5c12-495e-ac63-0432f20e0604" name="Start" type="Start"><subsheetid>ef52fc47-c1a8-49f8-b0fc-1b0670c85937</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0308c4c3-d634-4f78-a9f8-7956cdde9cf8</onsuccess></stage><stage stageid="2f4d50de-8fab-4f56-986b-6954730eb25e" name="End" type="End"><subsheetid>ef52fc47-c1a8-49f8-b0fc-1b0670c85937</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="7f1094e3-b4de-4399-b331-61a8b7ed27cb" name="Note1" type="Note"><subsheetid>5a811f17-fb6e-4005-a55d-6084c9d69db1</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="7a9b4fc9-3925-4d85-933b-8421c14ff5e0" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="0308c4c3-d634-4f78-a9f8-7956cdde9cf8" name="Launch" type="Navigate"><subsheetid>ef52fc47-c1a8-49f8-b0fc-1b0670c85937</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2f4d50de-8fab-4f56-986b-6954730eb25e</onsuccess><step><element id="f7d862ff-f082-4c2f-9ab5-e673f5de1093" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>ActiveTabOnly</id><value></value></argument><argument><id>UseJavaInBrowser</id><value></value></argument><argument><id>ExcludeHTC</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument></arguments></action></step></stage><stage stageid="4fbcf8c6-c81a-4271-a4e4-61a6966afcd9" name="Update Comments" type="SubSheetInfo"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1de98c47-b047-427b-b855-a5915f9575f8" name="Start" type="Start"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Update Comments" stage="Update Field" /></inputs><onsuccess>1318cae2-ce1a-47a9-83e9-18d5a1321ca8</onsuccess></stage><stage stageid="8ef4a314-bf67-4ff1-a980-6c011f43c0b6" name="End" type="End"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>135</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="0fba5637-7078-4484-a4e0-c275359cc85c" name="Click task" type="Navigate"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>5d449d9a-8245-421d-905d-e624a219c4f9</onsuccess><step><element id="4e395fa8-ed1c-45c2-864f-5a857e413fef" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="55327671-c086-48a0-a32f-45edb21dc6cc" name="Press Say" type="Navigate"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>8ef4a314-bf67-4ff1-a980-6c011f43c0b6</onsuccess><step><element id="b0caa8f5-4b66-454e-b4c4-590c9f3e6802" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="3f98d6ff-4e41-43e4-b1eb-f047c3c15e16" name="Update the comments" type="Navigate" interval="5"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>55327671-c086-48a0-a32f-45edb21dc6cc</onsuccess><step><element id="9082b31e-4e80-46c9-b1ee-1692207e2844" /><action><id>UIAClickCentre</id><arguments><argument><id>newtext</id><value>"Left"</value></argument></arguments></action></step><step><element id="9082b31e-4e80-46c9-b1ee-1692207e2844" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Update Field]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="49192082-5825-48a8-ac56-c777b75264e1" name="Update Field" type="Data"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><narrative></narrative><displayx>225</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b13388d5-16aa-49f3-bb9d-2e0ab92a9430" name="Launch" type="SubSheetInfo"><subsheetid>61125dfe-416d-470e-a129-c1a3a8c0772d</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3ece0367-e811-44bd-9f5c-c7adb1aaea5c" name="Start" type="Start"><subsheetid>61125dfe-416d-470e-a129-c1a3a8c0772d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0f2add9c-6cf3-46a9-87ee-370286819c67</onsuccess></stage><stage stageid="a5920bbc-173e-4420-9e80-99e422cf811d" name="End" type="End"><subsheetid>61125dfe-416d-470e-a129-c1a3a8c0772d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="0f2add9c-6cf3-46a9-87ee-370286819c67" name="Terminate" type="Navigate"><subsheetid>61125dfe-416d-470e-a129-c1a3a8c0772d</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a5920bbc-173e-4420-9e80-99e422cf811d</onsuccess><step><element id="f7d862ff-f082-4c2f-9ab5-e673f5de1093" /><action><id>Terminate</id></action></step></stage><stage stageid="f1f80889-a148-4fa2-8e4e-e5f50301de65" name="Complete task" type="SubSheetInfo"><subsheetid>f5c82210-21ac-47f4-9f31-5e3e39367cf0</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="cafee02f-3b03-4a1d-ae43-ca7a41cad8aa" name="Start" type="Start"><subsheetid>f5c82210-21ac-47f4-9f31-5e3e39367cf0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3b065fed-23a3-4fc8-b5d7-3c213041fe24</onsuccess></stage><stage stageid="a6e330c1-85a5-4800-a7a5-5c26e6dec421" name="End" type="End"><subsheetid>f5c82210-21ac-47f4-9f31-5e3e39367cf0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3b065fed-23a3-4fc8-b5d7-3c213041fe24" name="Complete button" type="Navigate"><subsheetid>f5c82210-21ac-47f4-9f31-5e3e39367cf0</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a6e330c1-85a5-4800-a7a5-5c26e6dec421</onsuccess><step><element id="279b0b57-9f61-4c80-8e50-8cee97e64c5b" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="5853073a-fdab-40b1-a8fa-3dd999c1565a" name="Time Out2" type="WaitEnd"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>15</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3f98d6ff-4e41-43e4-b1eb-f047c3c15e16</onsuccess><groupid>6a30478d-8c3d-4d43-a796-49cdb44f91c3</groupid></stage><stage stageid="5d449d9a-8245-421d-905d-e624a219c4f9" name="Wait2" type="WaitStart"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>6a30478d-8c3d-4d43-a796-49cdb44f91c3</groupid><choices /><timeout>10</timeout></stage><stage stageid="5f152ee6-c906-49ad-8758-2ce262dcadbc" name="Archive task" type="SubSheetInfo"><subsheetid>14ade172-3b6d-4253-94af-d5c3c674074f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="6f7ac70a-5231-4b0d-b272-968ba716eb32" name="Start" type="Start"><subsheetid>14ade172-3b6d-4253-94af-d5c3c674074f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e5fc4380-c10f-4fa8-ba6f-0a10121556aa</onsuccess></stage><stage stageid="3d924cee-936a-458b-ba97-2fecf65d76fe" name="End" type="End"><subsheetid>14ade172-3b6d-4253-94af-d5c3c674074f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="e5fc4380-c10f-4fa8-ba6f-0a10121556aa" name="Archive Button" type="Navigate"><subsheetid>14ade172-3b6d-4253-94af-d5c3c674074f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3d924cee-936a-458b-ba97-2fecf65d76fe</onsuccess><step><element id="3f12adb0-d5bc-4d74-b4b1-b6483a3dc30d" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="dc71fcf1-82a1-4162-8dcd-9c2150ea8f33" name="Time Out1" type="WaitEnd"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0fba5637-7078-4484-a4e0-c275359cc85c</onsuccess><groupid>f2d600cd-19ed-4a19-98dc-4fe9933f9714</groupid></stage><stage stageid="1318cae2-ce1a-47a9-83e9-18d5a1321ca8" name="Wait1" type="WaitStart"><subsheetid>27a749dd-d0f4-405a-a791-6e38a04a83ee</subsheetid><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>-105</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>f2d600cd-19ed-4a19-98dc-4fe9933f9714</groupid><choices /><timeout>6</timeout></stage></process></object>
        <object id="d43f3e0c-e7ea-49b5-af8f-9be4ca7956f3" name="Putty" xmlns="http://www.blueprism.co.uk/product/process"><process name="Putty" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Putty"><id>62176401-57e9-4a34-8188-1bee309597ff</id><element name="Element1"><id>f8cca793-179f-4e33-ae00-b53d1fc22432</id><type>Window</type><basetype>Window</basetype><datatype>password</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" inuse="True"><ProcessValue datatype="text" value="18.221.26.98 - PuTTY" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="PuTTY" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="78" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="78" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="676" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="426" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:86,109,495,728" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="351207424" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Putty UI"><id>7160cde7-5172-4cb1-a805-c6a7d9b86298</id><type>UIAWindow</type><basetype>UIAWindow</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="130" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="130" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="675" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="425" /></attribute><attribute name="uClassName" inuse="True"><ProcessValue datatype="text" value="PuTTY" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="Window" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="window" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="18.221.26.98 - PuTTY" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="5052" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="pane" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="#32769" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Desktop" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Putty after login"><id>dad29540-18ad-418d-8fd3-fed5d5fe111b</id><type>UIAWindow</type><basetype>UIAWindow</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="183" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="167" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="675" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="425" /></attribute><attribute name="uClassName" inuse="True"><ProcessValue datatype="text" value="PuTTY" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="Window" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="window" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName"><ProcessValue datatype="text" value="root@ip-172-31-25-74:~" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="4072" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="pane" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="#32769" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Desktop" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Server name"><id>65cb628d-fbc8-4e3b-973d-0df103b55c3f</id><type>Edit</type><basetype>Edit</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText"><ProcessValue datatype="text" value="" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="Edit" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="165" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="80" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="199" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="21" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="9" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="PuTTY Configuration &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:742,338,354,936" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1342242944" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="PuTTY Configuration" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="567" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="225" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="467" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="450" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="30" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1342242944" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Establish Connection button"><id>e5741218-7fed-4e39-bdd6-4e241e4c459f</id><type>Button</type><basetype>Button</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" inuse="True"><ProcessValue datatype="text" value="&amp;Open" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="Button" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="270" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="382" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="84" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="24" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="PuTTY Configuration &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:845,638,661,928" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1342259201" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="PuTTY Configuration" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="567" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="225" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="467" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="450" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="30" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1342259201" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\Program Files\PuTTY\putty.exe</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="79e5ba40-7ad3-4740-8cae-14aa42020a2a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aa6959f3-c571-4d24-b0ef-126ca02a4dfa" type="Normal" published="True"><name>Executing Ansible cammands</name><view><camerax>0</camerax><cameray>54</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="66d1ce98-e732-4589-a3bd-2c1d81aa7d1f" type="Normal" published="True"><name>Launch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ae1eff6-b009-4f61-b6ae-3cd5d77c96c6" type="Normal" published="True"><name>Terminate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7d129df6-d385-420c-8db7-486ec41c94f8" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ac6ac5b3-0fcc-44dd-8a78-b3c520dc0231</onsuccess></stage><stage stageid="ac6ac5b3-0fcc-44dd-8a78-b3c520dc0231" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c8c42943-25ab-4ad3-a0c7-2ddfcb7cfc26" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="4f52beb0-d63c-4879-8b7f-c6acf13a14c6" name="Clean Up" type="SubSheetInfo"><subsheetid>79e5ba40-7ad3-4740-8cae-14aa42020a2a</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="414d1a41-0dcb-4349-96e7-73376b6afb1b" name="Start" type="Start"><subsheetid>79e5ba40-7ad3-4740-8cae-14aa42020a2a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>e9019bf4-1ac0-4ce2-994b-5d3178aaa4b5</onsuccess></stage><stage stageid="e9019bf4-1ac0-4ce2-994b-5d3178aaa4b5" name="End" type="End"><subsheetid>79e5ba40-7ad3-4740-8cae-14aa42020a2a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c23561c0-57f6-416e-a310-87aa79b5d05a" name="Executing Ansible cammands" type="SubSheetInfo"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="14d2cdb9-78bd-4783-b557-cec11f512657" name="Start" type="Start"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible cammand" stage="Ansible command" /><input type="password" name="Password for Ansible" stage="Password" /><input type="text" name="Ansible Directory" stage="Ansible directory" /></inputs><onsuccess>332716f4-2e5e-4c1a-9fed-36e8e462ee19</onsuccess></stage><stage stageid="00f6186e-1373-4b97-a72e-05a0fcd2dc4a" name="End" type="End"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>240</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="f86d7b50-d4f7-4b39-9f96-f9bf5367b80c" name="Note1" type="Note"><subsheetid>79e5ba40-7ad3-4740-8cae-14aa42020a2a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="309ca600-afd8-484e-bcd5-a4f419c0f409" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="332716f4-2e5e-4c1a-9fed-36e8e462ee19" name="Enter Password" type="Navigate" interval="5"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b92b6ada-b0c8-4e5f-ab3a-217eb77f6f14</onsuccess><step><element id="7160cde7-5172-4cb1-a805-c6a7d9b86298" /><action><id>UIAFocus</id></action></step><step><element id="7160cde7-5172-4cb1-a805-c6a7d9b86298" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Password]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="b92b6ada-b0c8-4e5f-ab3a-217eb77f6f14" name="Click Enter button" type="Navigate"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>0</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>48d4991f-7617-4613-8c02-2ecbca7d7c0b</onsuccess><step><element id="7160cde7-5172-4cb1-a805-c6a7d9b86298" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="2a158f07-f3e4-4650-a183-9204f37c4c29" name="ansible cammands" type="Navigate"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>17fbed3e-de13-45fc-b878-49a0049c071f</onsuccess><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Ansible command]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="17fbed3e-de13-45fc-b878-49a0049c071f" name="Press Enter" type="Navigate"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>180</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>00f6186e-1373-4b97-a72e-05a0fcd2dc4a</onsuccess><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="9a576a7e-0931-4bd7-afe1-3765e8970505" name="Launch" type="SubSheetInfo"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="5f9c3aba-1863-4bcb-9c29-5a618f18c817" name="Start" type="Start"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Ansible Server IP" stage="Ansible Server IP" /></inputs><onsuccess>5768919b-c5a3-4c11-a572-ea1eae19e4a2</onsuccess></stage><stage stageid="ac548a2b-f415-4afb-98c3-272b51c224d0" name="End" type="End"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>150</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c732626c-d7e4-48d9-9a4a-5c3155d91e77" name="Enter Server name" type="Write"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>fae7f5e1-7e83-42cb-a1ef-5f454b8f0a8b</onsuccess><step expr="[Ansible Server IP]"><element id="65cb628d-fbc8-4e3b-973d-0df103b55c3f" /></step></stage><stage stageid="fae7f5e1-7e83-42cb-a1ef-5f454b8f0a8b" name="Establish connection button" type="Navigate"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ac548a2b-f415-4afb-98c3-272b51c224d0</onsuccess><step><element id="e5741218-7fed-4e39-bdd6-4e241e4c459f" /><action><id>Press</id></action></step></stage><stage stageid="5768919b-c5a3-4c11-a572-ea1eae19e4a2" name="Launch putty" type="Navigate"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>389f2977-632a-4f38-83d6-75514392b2c4</onsuccess><step><element id="62176401-57e9-4a34-8188-1bee309597ff" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="fbef1da8-5f0d-4e3f-833f-de60424d4271" name="Move to Ansible directory" type="Navigate"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>2a158f07-f3e4-4650-a183-9204f37c4c29</onsuccess><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"date"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"cd /etc/ansible"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="dad29540-18ad-418d-8fd3-fed5d5fe111b" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="f7e410fe-3eb4-4a36-86df-16d04376f1e5" name="Ansible command" type="Data"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">ansible-playbook wordpress-setup.yml</initialvalue><private /><alwaysinit /></stage><stage stageid="45fb371f-dbcf-4afb-bae8-80de0885c12a" name="Password" type="Data"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc>49,20,7,67,26,91,6,1</initialvalueenc><private /><alwaysinit /></stage><stage stageid="d6fd9d1f-9f0a-4ced-a73e-2755714181b2" name="Ansible Server IP" type="Data"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>135</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">root@18.221.26.98</initialvalue><private /><alwaysinit /></stage><stage stageid="cd21fcb9-7ac5-4081-81e7-607095101de4" name="Time Out1" type="WaitEnd"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>-90</displayx><displayy>75</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c732626c-d7e4-48d9-9a4a-5c3155d91e77</onsuccess><groupid>f4db8ff3-4d6d-44ef-9a42-b53406ca9a8d</groupid></stage><stage stageid="389f2977-632a-4f38-83d6-75514392b2c4" name="Wait1" type="WaitStart"><subsheetid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</subsheetid><loginhibit /><narrative></narrative><displayx>-90</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>f4db8ff3-4d6d-44ef-9a42-b53406ca9a8d</groupid><choices /><timeout>5</timeout></stage><stage stageid="15de1224-aa0a-4aa6-a7c6-4dd3fc223e30" name="Time Out2" type="WaitEnd"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>60</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>fbef1da8-5f0d-4e3f-833f-de60424d4271</onsuccess><groupid>a496123d-ef5f-4d44-bbe2-4684e1a2176b</groupid></stage><stage stageid="48d4991f-7617-4613-8c02-2ecbca7d7c0b" name="Wait2" type="WaitStart"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>0</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>a496123d-ef5f-4d44-bbe2-4684e1a2176b</groupid><choices /><timeout></timeout></stage><stage stageid="1d48c176-edca-4049-9e4e-b7bd75583d37" name="Ansible directory" type="Data"><subsheetid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</subsheetid><loginhibit /><narrative></narrative><displayx>165</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">cd /etc/ansible</initialvalue><private /><alwaysinit /></stage><stage stageid="daabac83-5250-44e8-8c79-d502b372636e" name="Launch" type="SubSheet"><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>a1b02739-3d2e-452a-8a33-8dadbdcaa742</onsuccess><processid>66d1ce98-e732-4589-a3bd-2c1d81aa7d1f</processid></stage><stage stageid="a1b02739-3d2e-452a-8a33-8dadbdcaa742" name="Executing Ansible cammands" type="SubSheet"><loginhibit /><narrative></narrative><displayx>105</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><processid>aa6959f3-c571-4d24-b0ef-126ca02a4dfa</processid></stage><stage stageid="40b7c449-77de-40dd-b473-35cdbf2dc65f" name="Terminate" type="SubSheetInfo"><subsheetid>9ae1eff6-b009-4f61-b6ae-3cd5d77c96c6</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="0b47225a-3fdc-4aff-b85d-6f5ac1885942" name="Start" type="Start"><subsheetid>9ae1eff6-b009-4f61-b6ae-3cd5d77c96c6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3c9444a9-63b4-4f52-a121-a2a8d29105c4</onsuccess></stage><stage stageid="3e168e6e-4d72-47e9-b542-ce6b8bd8b8bb" name="End" type="End"><subsheetid>9ae1eff6-b009-4f61-b6ae-3cd5d77c96c6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3c9444a9-63b4-4f52-a121-a2a8d29105c4" name="Terminate" type="Navigate"><subsheetid>9ae1eff6-b009-4f61-b6ae-3cd5d77c96c6</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3e168e6e-4d72-47e9-b542-ce6b8bd8b8bb</onsuccess><step><element id="62176401-57e9-4a34-8188-1bee309597ff" /><action><id>Terminate</id></action></step></stage></process></object>
        <object id="bd13eb43-485b-4422-ae69-f1a8369045a9" name="sample" xmlns="http://www.blueprism.co.uk/product/process"><process name="sample" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="gmail browser"><id>95ad8302-3f1a-4ecf-9cb3-37e2a3dd3ece</id><element name="alert mail"><id>31119c8f-9386-4697-bcaf-1c61af6ade53</id><type>HTML</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="276" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="10" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="203" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="20" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(8)/DIV(3)/DIV(1)/DIV(2)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(6)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/TABLE(1)/TBODY(1)/TR(1)/TD(6)/DIV(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="xT" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="27" /></attribute><attribute name="Value" comparisontype="Wildcard" inuse="True"><ProcessValue datatype="text" value="* : Alert&#xD;&#xA; " /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/#inbox" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:580,365,385,783" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Checkbox"><id>05c466f6-bb54-4885-8b97-d62e53fdcf9e</id><type>HTML</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="14" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="20" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="20" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(8)/DIV(3)/DIV(1)/DIV(2)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(6)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/TABLE(1)/TBODY(1)/TR(1)/TD(2)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="oZ-jc T-Jo J-J5-Ji " /></attribute><attribute name="ID" inuse="True"><ProcessValue datatype="text" value=":3e" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="26" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/#inbox" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:272,233,253,292" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Delete"><id>e8ce2502-f01a-4c9e-a8cc-27e200164c97</id><type>HTMLButton</type><basetype>HTMLButton</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="183" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="2" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="61" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="23" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/TABLE(2)/TBODY(1)/TR(1)/TD(2)/TABLE(1)/TBODY(1)/TR(1)/TD(2)/FORM(1)/TABLE(1)/TBODY(1)/TR(1)/TD(1)/INPUT(3)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="INPUT" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title" inuse="True"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType" inuse="True"><ProcessValue datatype="text" value="submit" /></attribute><attribute name="InputIdentifier2" inuse="True"><ProcessValue datatype="text" value="nvp_a_tr" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="15" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Delete" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/h/1qq75cezi3tos/?&amp;" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:316,158,181,377" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Mieeser task initiate"><id>9b5419b3-c2bf-43e2-b436-306e8a0f74d7</id><type>UIATabItem</type><basetype>UIATabItem</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="1865" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="320" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="56" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="56" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId" inuse="True"><ProcessValue datatype="text" value="AKfycbwGJdAZwOLsnOApgBjLwROweJjFcWpLSXQ7fr9_CEsbduWJF4nt5jNk" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="TabItem" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="tab item" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="MeisterTask" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="False" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="4796" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Tab" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="tab" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Create task button"><id>2e91a9be-d2c0-4ebd-ac28-2670b9a292b2</id><type>HTMLButton</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="-1" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="108" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="20" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(8)/DIV(4)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(3)/DIV(5)/DIV(1)/DIV(1)/DIV(1)/content(1)/SPAN(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="dY" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title" inuse="True"><ProcessValue datatype="text" value="CREATE TASK" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="22" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="CREATE TASK" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/#inbox/FMfcgxvzMBhGWxjrSFzsvMWbDklcTMXq" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:1628,962,982,1736" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Click email"><id>911bcb18-8782-4f14-b179-6cc9f5410392</id><type>HTMLButton</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="276" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="10" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="1139" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="20" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(8)/DIV(3)/DIV(1)/DIV(2)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(6)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/TABLE(1)/TBODY(1)/TR(1)/TD(6)/DIV(1)/DIV(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="DIV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="xT" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="27" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Alert : testing&#xD;&#xA; " /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/#inbox" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:532,233,253,1671" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Delete button"><id>ce2afc86-79ea-4466-bd68-508c82c2b978</id><type>UIAButton</type><basetype>UIAButton</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="408" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="155" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="20" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="20" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="Button" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="button" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="Delete" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="" /></attribute><attribute name="uItemType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="False" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="2244" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="Pane" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="pane" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Alert : testing - castielthebot@gmail.com - Gmail" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Click other mail "><id>9b07f90a-6135-4160-a33d-8c10d1e48158</id><type>HTMLButton</type><basetype>HTML</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="X"><ProcessValue datatype="number" value="276" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="12" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="71" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="16" /></attribute><attribute name="Path" inuse="True"><ProcessValue datatype="text" value="/HTML/BODY(1)/DIV(8)/DIV(3)/DIV(1)/DIV(2)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/DIV(1)/DIV(1)/DIV(1)/DIV(6)/DIV(1)/DIV(1)/DIV(2)/DIV(1)/TABLE(1)/TBODY(1)/TR(1)/TD(6)/DIV(1)/DIV(1)/DIV(1)/SPAN(1)/SPAN(1)" /></attribute><attribute name="TagName" inuse="True"><ProcessValue datatype="text" value="SPAN" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ID"><ProcessValue datatype="text" value="" /></attribute><attribute name="Title"><ProcessValue datatype="text" value="" /></attribute><attribute name="Link"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputType"><ProcessValue datatype="text" value="" /></attribute><attribute name="InputIdentifier2"><ProcessValue datatype="text" value="" /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="30" /></attribute><attribute name="Value"><ProcessValue datatype="text" value="Critical security alert" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Checked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pURL"><ProcessValue datatype="text" value="https://mail.google.com/mail/u/0/#inbox" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:532,235,251,603" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>HTMLLaunch</id><parameters><parameter><name>Path</name><value>C:\Program Files\Internet Explorer\iexplore.exe</value></parameter><parameter><name>CommandLineParams</name><value>https://mail.google.com/mail/u/0/#inbox</value></parameter><parameter><name>ActiveTabOnly</name><value>True</value></parameter><parameter><name>UseJavaInBrowser</name><value>False</value></parameter><parameter><name>ExcludeHTC</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="23b5af6a-e571-492d-af40-defb9e30bdba" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1f5805a7-2b6d-42f1-8e2f-c6417ff8f579" type="Normal" published="True"><name>Read Task</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1a3a1da6-e6d9-46e3-9b1a-1faeb8f8d22a" type="Normal" published="True"><name>Delete mail</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8b678a9e-f35f-4380-9ac3-981c62078993" type="Normal" published="True"><name>Launch mailbox</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="709e5688-7849-47dd-9f01-1e3af8049e42" type="Normal" published="True"><name>Wait for 5 sec</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec37bebd-ef41-49a0-bceb-e6299d1a0c5e" type="Normal" published="True"><name>Ticket actions</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b90e514b-552c-4e68-9e92-ee9ae56d2893" type="Normal" published="True"><name>Rescue action</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a497bbbd-6904-4578-8f65-c866ab11eb6e" type="Normal" published="True"><name>Delete other mail</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7ef90223-08c7-4ea5-81a3-35a6b02b3881" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>ba0fe1f5-5b80-47e4-8d8e-8c38bdac0334</onsuccess></stage><stage stageid="ba0fe1f5-5b80-47e4-8d8e-8c38bdac0334" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="d43307e2-9454-4a44-b864-96c359151de6" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="670ad739-21db-47c7-956f-b66a22b25fbe" name="Clean Up" type="SubSheetInfo"><subsheetid>23b5af6a-e571-492d-af40-defb9e30bdba</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="2e8a772f-5b9a-4ce3-9ef7-03bb9d6d6d42" name="Start" type="Start"><subsheetid>23b5af6a-e571-492d-af40-defb9e30bdba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>80c1a1bd-9f4a-476d-993a-553762b16706</onsuccess></stage><stage stageid="80c1a1bd-9f4a-476d-993a-553762b16706" name="End" type="End"><subsheetid>23b5af6a-e571-492d-af40-defb9e30bdba</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="d4498db9-1696-43ed-8b87-62413a74948d" name="Read Task" type="SubSheetInfo"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="71a5315f-7398-4b2d-b430-f3b034b852d7" name="Start" type="Start"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3b5b3fd7-a338-40e5-9b73-f6760cf6c987</onsuccess></stage><stage stageid="3273684e-e5a3-428c-8870-c942ccad5b87" name="End" type="End"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Keyword value" stage="Value from alert mail" /></outputs></stage><stage stageid="e468969f-22de-4464-8f32-0bb8b469a06e" name="Note1" type="Note"><subsheetid>23b5af6a-e571-492d-af40-defb9e30bdba</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="9649660b-9cf4-433d-b856-1c10db41166e" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="3b5b3fd7-a338-40e5-9b73-f6760cf6c987" name="Reader1" type="Read"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0e5076bf-b20a-4ef9-879a-c1bc16fab446</onsuccess><step stage="Value from alert mail"><element id="31119c8f-9386-4697-bcaf-1c61af6ade53" /><action><id>ReadCurrentValue</id></action></step></stage><stage stageid="61552be3-4598-4a5b-9099-72c2560bf413" name="Value from alert mail" type="Data"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><narrative></narrative><displayx>225</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="23b08446-a91d-4a15-9c30-d7592ea245fb" name="Delete mail" type="SubSheetInfo"><subsheetid>1a3a1da6-e6d9-46e3-9b1a-1faeb8f8d22a</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="54b6465b-9cc3-4643-8017-3a8b86b66fd8" name="Start" type="Start"><subsheetid>1a3a1da6-e6d9-46e3-9b1a-1faeb8f8d22a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>53dc1dd1-452d-4dc3-b56b-e5ba9d46bb72</onsuccess></stage><stage stageid="310f3176-4a61-4690-ab82-41f291ae8c84" name="End" type="End"><subsheetid>1a3a1da6-e6d9-46e3-9b1a-1faeb8f8d22a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="53dc1dd1-452d-4dc3-b56b-e5ba9d46bb72" name="Click Delete" type="Navigate"><subsheetid>1a3a1da6-e6d9-46e3-9b1a-1faeb8f8d22a</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>310f3176-4a61-4690-ab82-41f291ae8c84</onsuccess><step><element id="ce2afc86-79ea-4466-bd68-508c82c2b978" /><action><id>UIAButtonPress</id></action></step></stage><stage stageid="29434e2d-8923-4116-8378-94b588d3b6c2" name="Launch mailbox" type="SubSheetInfo"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="14cd8f13-1a2f-4594-8d7c-285432ae3d33" name="Start" type="Start"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>09724160-c6ea-44c3-a0a3-41dc8b56ad90</onsuccess></stage><stage stageid="bfe1f62e-c549-4031-9f46-7f44e4c2fb14" name="End" type="End"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="09724160-c6ea-44c3-a0a3-41dc8b56ad90" name="Launch" type="Navigate"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>c9851589-dbe6-4e86-b0cf-29f7b7ecefc1</onsuccess><step><element id="95ad8302-3f1a-4ecf-9cb3-37e2a3dd3ece" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>ActiveTabOnly</id><value></value></argument><argument><id>UseJavaInBrowser</id><value></value></argument><argument><id>ExcludeHTC</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument></arguments></action></step></stage><stage stageid="bdfb99ef-2f77-441b-9d97-8935ba38972c" name="Time Out1" type="WaitEnd"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>90</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>bfe1f62e-c549-4031-9f46-7f44e4c2fb14</onsuccess><groupid>7b216910-ea75-4433-9270-a0fec135b41d</groupid></stage><stage stageid="c9851589-dbe6-4e86-b0cf-29f7b7ecefc1" name="Wait1" type="WaitStart"><subsheetid>8b678a9e-f35f-4380-9ac3-981c62078993</subsheetid><loginhibit /><narrative></narrative><displayx>-75</displayx><displayy>-30</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>7b216910-ea75-4433-9270-a0fec135b41d</groupid><choices /><timeout></timeout></stage><stage stageid="0e5076bf-b20a-4ef9-879a-c1bc16fab446" name="Click email" type="Navigate"><subsheetid>1f5805a7-2b6d-42f1-8e2f-c6417ff8f579</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>3273684e-e5a3-428c-8870-c942ccad5b87</onsuccess><step><element id="911bcb18-8782-4f14-b179-6cc9f5410392" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="9b193f49-50f4-4d67-b8f9-254fd61c0818" name="Wait for 5 sec" type="SubSheetInfo"><subsheetid>709e5688-7849-47dd-9f01-1e3af8049e42</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="87141e08-50a1-46a5-88f5-b20e0edaf3c5" name="Start" type="Start"><subsheetid>709e5688-7849-47dd-9f01-1e3af8049e42</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>208a76bd-c89b-45af-a465-5b23763a3497</onsuccess></stage><stage stageid="143c0690-2010-49be-83b3-4405f5734615" name="End" type="End"><subsheetid>709e5688-7849-47dd-9f01-1e3af8049e42</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>120</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="62acb04d-fb4d-436e-82b3-e7f3f08f3198" name="Time Out2" type="WaitEnd"><subsheetid>709e5688-7849-47dd-9f01-1e3af8049e42</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>75</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>143c0690-2010-49be-83b3-4405f5734615</onsuccess><groupid>9c51e94d-a989-40d9-b6e4-6a090a30ba8b</groupid></stage><stage stageid="208a76bd-c89b-45af-a465-5b23763a3497" name="Wait2" type="WaitStart"><subsheetid>709e5688-7849-47dd-9f01-1e3af8049e42</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>30</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><groupid>9c51e94d-a989-40d9-b6e4-6a090a30ba8b</groupid><choices /><timeout>5</timeout></stage><stage stageid="6ee83212-8964-48bb-a6c3-c96502f4e655" name="Ticket actions" type="SubSheetInfo"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="47fbf852-1878-4893-ac85-c8c9b3556a79" name="Start" type="Start"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>212cd992-2545-4889-b0ba-88972efe141b</onsuccess></stage><stage stageid="7cf35cc7-6381-4b82-b592-1a03ef39eb0b" name="End" type="End"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="212cd992-2545-4889-b0ba-88972efe141b" name="Create task initiate" type="Navigate"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-60</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0a6e9e89-7006-4c1b-b502-7fc2f5fde8d5</onsuccess><step><element id="9b5419b3-c2bf-43e2-b436-306e8a0f74d7" /><action><id>UIAClickCentre</id><arguments><argument><id>newtext</id><value>"left"</value></argument></arguments></action></step></stage><stage stageid="0a6e9e89-7006-4c1b-b502-7fc2f5fde8d5" name="Create task" type="Navigate"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6c622d14-b097-4886-ad16-80e0387e7d8a</onsuccess><step><element id="2e91a9be-d2c0-4ebd-ac28-2670b9a292b2" /><action><id>HTMLClickCentre</id></action></step></stage><stage stageid="6c622d14-b097-4886-ad16-80e0387e7d8a" name="Create task abort" type="Navigate"><subsheetid>ec37bebd-ef41-49a0-bceb-e6299d1a0c5e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>7cf35cc7-6381-4b82-b592-1a03ef39eb0b</onsuccess><step><element id="9b5419b3-c2bf-43e2-b436-306e8a0f74d7" /><action><id>UIAClickCentre</id><arguments><argument><id>newtext</id><value>"left"</value></argument></arguments></action></step></stage><stage stageid="901b0225-f6ce-448f-9d6e-10a20a847fed" name="Rescue action" type="SubSheetInfo"><subsheetid>b90e514b-552c-4e68-9e92-ee9ae56d2893</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="91885244-dc0e-4a9d-ae5f-383db57f3c0e" name="Start" type="Start"><subsheetid>b90e514b-552c-4e68-9e92-ee9ae56d2893</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>b03de05f-ca20-4331-b17b-6c28c5ae248e</onsuccess></stage><stage stageid="239dc474-5db3-40bd-9036-19d719c57509" name="End" type="End"><subsheetid>b90e514b-552c-4e68-9e92-ee9ae56d2893</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="b03de05f-ca20-4331-b17b-6c28c5ae248e" name="Create task initiate" type="Navigate"><subsheetid>b90e514b-552c-4e68-9e92-ee9ae56d2893</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-15</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>239dc474-5db3-40bd-9036-19d719c57509</onsuccess><step><element id="9b5419b3-c2bf-43e2-b436-306e8a0f74d7" /><action><id>UIAClickCentre</id><arguments><argument><id>newtext</id><value>"left"</value></argument></arguments></action></step></stage><stage stageid="33fb43f4-e277-4947-9165-deb35caa33bf" name="Delete other mail" type="SubSheetInfo"><subsheetid>a497bbbd-6904-4578-8f65-c866ab11eb6e</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1c5d5308-8cbf-4b47-9e2b-d45cda7868b6" name="Start" type="Start"><subsheetid>a497bbbd-6904-4578-8f65-c866ab11eb6e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>6081dc2e-5e90-4145-9cea-c668f8e7f9fc</onsuccess></stage><stage stageid="59b87135-313a-4c62-8031-2650a9f8b3d1" name="End" type="End"><subsheetid>a497bbbd-6904-4578-8f65-c866ab11eb6e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="74502675-96cd-4d92-ac94-bfbef4490b17" name="Click Delete" type="Navigate"><subsheetid>a497bbbd-6904-4578-8f65-c866ab11eb6e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>30</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>59b87135-313a-4c62-8031-2650a9f8b3d1</onsuccess><step><element id="ce2afc86-79ea-4466-bd68-508c82c2b978" /><action><id>UIAButtonPress</id></action></step></stage><stage stageid="6081dc2e-5e90-4145-9cea-c668f8e7f9fc" name="Click other mail" type="Navigate"><subsheetid>a497bbbd-6904-4578-8f65-c866ab11eb6e</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-45</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>74502675-96cd-4d92-ac94-bfbef4490b17</onsuccess><step><element id="9b07f90a-6135-4160-a33d-8c10d1e48158" /><action><id>HTMLClickCentre</id></action></step></stage></process></object>
        <object id="8eb19be5-ccd5-4a7d-a5ad-6b1ec1e32cd6" name="Web browser" xmlns="http://www.blueprism.co.uk/product/process"><process name="Web browser" version="1.0" bpversion="6.2.1.4272" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>73bcb69d-50e0-4cdd-9a5e-db592dc09a7b</id><type>Application</type><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="656c3552-3ec3-4377-962c-0b15c7a3f099" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="166dce64-1963-4a90-b7f2-a1f4be1f1223" type="Normal" published="False"><name>Action 1</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="c2b453df-aa83-41a2-8fb5-79b865b1d471" name="Start" type="Start"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>1951fd90-ecf8-4a15-9d07-35f10bac0e79</onsuccess></stage><stage stageid="1951fd90-ecf8-4a15-9d07-35f10bac0e79" name="End" type="End"><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="c6ff94a8-bbff-4134-8bc3-72cd7e0dfaba" name="Stage1" type="ProcessInfo"><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="637fc8be-dc42-41c2-8469-4f06222ab12d" name="Clean Up" type="SubSheetInfo"><subsheetid>656c3552-3ec3-4377-962c-0b15c7a3f099</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="ebf0758f-95bf-4785-9e0c-09485e81d0bc" name="Start" type="Start"><subsheetid>656c3552-3ec3-4377-962c-0b15c7a3f099</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /><onsuccess>0860d387-3a37-46a2-a6fb-e83666bdc20e</onsuccess></stage><stage stageid="0860d387-3a37-46a2-a6fb-e83666bdc20e" name="End" type="End"><subsheetid>656c3552-3ec3-4377-962c-0b15c7a3f099</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="a6ced21d-3549-4bc0-a09f-aee2b96105f1" name="Action 1" type="SubSheetInfo"><subsheetid>166dce64-1963-4a90-b7f2-a1f4be1f1223</subsheetid><narrative></narrative><displayx>-195</displayx><displayy>-105</displayy><displaywidth>150</displaywidth><displayheight>90</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="1c155b49-e7e4-448e-9cc9-fca3bad06655" name="Start" type="Start"><subsheetid>166dce64-1963-4a90-b7f2-a1f4be1f1223</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>-105</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="6725b8fe-6a3c-464a-88ec-8ac39870d120" name="End" type="End"><subsheetid>166dce64-1963-4a90-b7f2-a1f4be1f1223</subsheetid><loginhibit /><narrative></narrative><displayx>15</displayx><displayy>90</displayy><displaywidth>60</displaywidth><displayheight>30</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="dc0c2771-4712-4fd4-976c-712cf033457d" name="Note1" type="Note"><subsheetid>656c3552-3ec3-4377-962c-0b15c7a3f099</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage><stage stageid="4bb970d8-5700-45ce-80cc-3547d4013c57" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><displayx>-180</displayx><displayy>60</displayy><displaywidth>180</displaywidth><displayheight>230</displayheight><font family="Segoe UI" size="10" style="Regular" color="000000" /></stage></process></object>
        <work-queue id="2" name="Tickets-email" key-field="Number" xmlns="http://www.blueprism.co.uk/product/work-queue" />
    </bpr:contents>
</bpr:release>